{"version":3,"sources":["helpers/UsersGraphQL.js","components/nav/UserProfile.js","components/hooks/useProfile.js","conf.js","components/nav/NavBar.js","helpers/ReportsGraphQL.js","helpers/Numbers.js","components/graph/BarGraph.js","helpers/ColorsHelper.js","pages/dashboard/RevenueByDateGraph.js","pages/dashboard/TitheByDateGraph.js","pages/HomePage.js","components/tables/Table.js","components/icons/MatIcon.js","helpers/GraphQL.js","components/forms/Input.js","constants.js","components/forms/CreatableSelect.js","helpers/Dates.js","pages/entries/NewEntryPage.js","components/tables/Pagination.js","components/forms/Select.js","components/forms/FilterExport.js","pages/entries/FilterForm.js","pages/entries/EntrySummary.js","components/modals/Modal.js","pages/EntriesPage.js","pages/users/NewUserPage.js","pages/users/UpdateUserPage.js","pages/UserManagementPage.js","helpers/AuthHelper.js","pages/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["USERS_GET_TOKEN","gql","USERS_GET_ME","USERS","REGISTER_USER","GET_USER","UserProfile","props","useQuery","loading","error","data","console","log","className","me","username","exact","to","useProfile","history","useHistory","graphQLErrors","length","message","push","CONF","DEV","baseUrl","ROOT","PROD","BASE_URL","NavBar","user","isSuperuser","REVENUE_SUMMARY","TITHE_SUMMARY","numOr0","n","isNaN","parseFloat","Numbers","fmt","num","decimals","Number","toFixed","toString","replace","sum","nums","reduce","a","b","dpts","Math","round","BarGraph","graphId","meta","title","extra","type","stacked","useEffect","datasets","labels","options","legend","display","window","screen","width","position","plugins","datalabels","hover","mode","intersect","tooltips","displayColors","callbacks","label","tooltipItem","datasetIndex","yLabel","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","callback","value","toLocaleString","userCallback","index","floor","Chart","document","getElementById","id","style","ColorsHelper","color","i","random","RevenueByDateGraph","revenueSummary","revenueList","map","d","date","filter","v","indexOf","cat","total","s","backgroundColor","p","x","find","r","TitheByDateGraph","titheSummary","titheList","HomePage","Table","columns","idCol","col","key","name","row","render","MatIcon","text","GET_ENTRIES","GET_ENTITIES","CREATE_ENTRY","CREATE_ENTITY","Input","help","cls","htmlFor","ENTRIES_FILTER_VARS_NO_PAGES","pageSize","pageNo","CreatableSelect","query","onCreateOption","onChange","defaultValue","skip","selOptions","e","selObj","o","undefined","option","target","maxMenuHeight","Dates","timeIncl","Date","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minutes","getMinutes","getSeconds","dateStr","join","timeStr","res","NewEntryPage","onSuccess","entities","useState","redirect","setMessage","defaultData","Map","now","formData","setFormData","useMutation","createEntry","createEntity","entityOptions","handleChange","onSubmit","preventDefault","variables","createdAt","split","awaitRefetchQueries","then","amount","entity","entryId","result","autoComplete","required","refetchQueries","min","Pagination","onPageChanged","lastPage","onClick","disabled","Select","FilterExport","fields","handleSubmit","handleExport","f","FilterForm","searchFields","EntrySummary","newEntry","useLazyQuery","getEntries","refetch","abortCtrl","AbortController","abort","revenues","entries","entryType","expenses","totalRevenue","prev","totalExpenses","balance","Modal","onClose","children","posx","posy","ReactDom","createPortal","EntriesPage","setPageNo","setFilter","isOpen","setIsOpen","setNewEntry","fmtDate","strDate","parsed","parse","toLocaleDateString","records","entity_name","updatedAt","path","params","Object","q","keys","fetch","response","blob","url","URL","createObjectURL","createElement","href","download","body","appendChild","click","remove","newPageNo","NewUserPage","setRedirect","registerUser","withRouter","match","forEach","readOnly","email","firstName","lastName","UserManagementPage","users","AuthHelper","saveToken","token","cb","sessionStorage","setItem","getToken","getItem","removeToken","removeItem","LoginPage","login","client","src","alt","clearStore","tokenAuth","ApolloClient","uri","request","operation","setContext","headers","Authorization","App","Boolean","location","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f58f95bf.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\r\nexport const USERS_GET_TOKEN = gql`\r\n  mutation getToken($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS_GET_ME = gql`\r\n  query getMe {\r\n    me {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS = gql`\r\n  query getUsers {\r\n    users {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_USER = gql`\r\n  mutation registerUser(\r\n    $id: ID\r\n    $username: String!\r\n    $email: String!\r\n    $firstName: String\r\n    $lastName: String\r\n  ) {\r\n    registerUser(\r\n      id: $id\r\n      username: $username\r\n      email: $email\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n    ) {\r\n      user {\r\n        id\r\n        username\r\n        dateJoined\r\n        firstName\r\n        lastName\r\n        lastLogin\r\n        email\r\n        isStaff\r\n        isSuperuser\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER = gql`\r\n  query getUser($id: ID!) {\r\n    user(id: $id) {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction UserProfile(props) {\r\n  let { loading, error, data } = useQuery(USERS_GET_ME);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  console.log(data);\r\n  return (\r\n    <div className=\"user-profile-nav\">\r\n      <ul>\r\n        <li>\r\n          <b>{data.me.username}</b>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/login\">\r\n            Logout\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction useProfile() {\r\n  const history = useHistory();\r\n  const { loading, error, data } = useQuery(USERS_GET_ME);\r\n  if (loading) return null;\r\n  if (error) {\r\n    if (error.graphQLErrors.length) {\r\n      let message = error.graphQLErrors[0].message;\r\n      if (\r\n        message === \"Signature has expired\" ||\r\n        message === \"You do not have permission to perform this action\"\r\n      ) {\r\n        history.push(\"/login\");\r\n      }\r\n    }\r\n    console.log(error);\r\n    return null;\r\n  }\r\n  return data;\r\n}\r\n\r\nexport default useProfile;\r\n","// Configurations:\r\n// 1. Backend endpoint depending on test vs live\r\n// 2.\r\n\r\nconst ENVIRON = process.env.NODE_ENV === \"development\" ? \"DEV\" : \"PROD\";\r\n\r\nconst CONF = {\r\n  DEV: {\r\n    baseUrl: \"http://localhost:8000/api\",\r\n    ROOT: \"http://localhost:8000\",\r\n  },\r\n  PROD: {\r\n    baseUrl: \"/api\",\r\n    ROOT: \"\",\r\n  },\r\n};\r\n\r\nexport const BASE_URL = CONF[ENVIRON].baseUrl;\r\nexport const ROOT_URL = CONF[ENVIRON].ROOT;\r\nexport const GOOGLE_API_KEY = \"AIzaSyDQ7WXCqy5-cyHTyho_XLgBDHJZe4n-nAw\";\r\nexport const APP_NAME = \"TAG MAKOKA (MSCC)\";\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport useProfile from \"../hooks/useProfile\";\r\nimport { APP_NAME } from \"../../conf\";\r\n\r\nfunction NavBar() {\r\n  const user = useProfile();\r\n  console.log(user);\r\n  return (\r\n    <header className=\"navbar container\">\r\n      <div className=\"content\">\r\n        <h3>{APP_NAME}</h3>\r\n        <div className=\"nav-links\">\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to=\"/\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/entries\">Entries</NavLink>\r\n            </li>\r\n            {user && user.me && user.me.isSuperuser && (\r\n              <li>\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n              </li>\r\n            )}\r\n          </ul>\r\n          <UserProfile />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const REVENUE_SUMMARY = gql`\r\n  query revenueSummary {\r\n    revenueSummary {\r\n      date\r\n      cat\r\n      total\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TITHE_SUMMARY = gql`\r\n  query titheSummary {\r\n    titheSummary {\r\n      date\r\n      total\r\n    }\r\n  }\r\n`;","let numOr0 = (n) => (isNaN(n) ? 0 : parseFloat(n));\r\nconst Numbers = {\r\n  fmt: (num, decimals = 0) =>\r\n    Number(num)\r\n      .toFixed(decimals)\r\n      .toString()\r\n      .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\"),\r\n  sum: (nums) => nums.reduce((a, b) => numOr0(a) + numOr0(b), 0),\r\n  dpts: (num) => (Math.round(num * 100) / 100).toFixed(2),\r\n};\r\nexport default Numbers;\r\n","import React from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport { useEffect } from \"react\";\r\nimport Numbers from \"../../helpers/Numbers\"\r\n\r\nconst BarGraph = ({\r\n  graphId,\r\n  meta,\r\n  title,\r\n  extra = null,\r\n  type = \"bar\",\r\n  stacked = false,\r\n}) => {\r\n\r\n  useEffect(() => {\r\n    const data = {\r\n      datasets: meta.data,\r\n      labels: meta.labels,\r\n    };\r\n    console.log(data);\r\n    const options = {\r\n      legend: {\r\n        display: window.screen.width > 800,\r\n        position: \"top\",\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          display: false,\r\n        },\r\n      },\r\n      hover: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n      },\r\n      tooltips: {\r\n        displayColors: true,\r\n        callbacks: {\r\n          mode: \"x\",\r\n          label: function (tooltipItem, data) {\r\n            let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            label += Numbers.fmt(tooltipItem.yLabel);\r\n            return label;\r\n          }\r\n        },\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            stacked: stacked,\r\n            gridLines: {\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            stacked: stacked,\r\n            ticks: {\r\n              beginAtZero: meta.beginAtZero || false,\r\n              callback: function (value) {\r\n                return value.toLocaleString();\r\n              },\r\n              userCallback: function (label, index, labels) {\r\n                if (Math.floor(label) === label) {\r\n                  return Numbers.fmt(label);\r\n                }\r\n              },\r\n            },\r\n            type: \"linear\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    console.log(\"Data: \", data)\r\n    new Chart(document.getElementById(graphId), {\r\n      type: type,\r\n      data: data,\r\n      options: options,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`graph-container bg-white card ${extra ? extra : \"\"}`}>\r\n      <h6 className=\"pl-1\">{title}</h6>\r\n      <div>\r\n        <canvas id={graphId} className=\"graph p-1\" style={{}}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import invert from \"invert-color\";\r\nexport const ColorsHelper = {\r\n  randomColor() {\r\n    var letters = \"0123456789ABCDEF\";\r\n    var color = \"#\";\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  },\r\n  randomColors(num) {\r\n    return [...Array(num).keys()].map(() => this.randomColor());\r\n  },\r\n  contrastColors(colors) {\r\n    return colors.map(c => invert(c));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { REVENUE_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\n\r\nfunction RevenueByDateGraph(props) {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(REVENUE_SUMMARY);\r\n  if (loading) return 'Loading ...';\r\n  if (error) return 'Error!';\r\n  console.log(data);\r\n\r\n  let placeHolder = [\r\n    { cat: \"ZAKA\", total: 0 },\r\n    { cat: \"SADAKA\", total: 0 },\r\n  ];\r\n  console.log(data.revenueSummary);\r\n\r\n  let revenueList = data.revenueSummary\r\n    .map((d) => {\r\n      return d.date;\r\n    })\r\n    .filter((v, i, a) => a.indexOf(v) === i);\r\n  let res = placeHolder.map((s) => {\r\n    return {\r\n      label: s.cat,\r\n      backgroundColor: ColorsHelper.randomColor(),\r\n      data: revenueList.map((p) => {\r\n        let x = data.revenueSummary.find(\r\n          (d) => d.date === p && d.cat === s.cat\r\n        );\r\n        return x ? x.total : 0;\r\n      }),\r\n    };\r\n  });\r\n\r\n  const meta = {\r\n    data: res,\r\n    labels: revenueList.map((r) => r),\r\n    beginAtZero: true,\r\n  };\r\n  return (\r\n    <BarGraph\r\n      stacked={true}\r\n      meta={meta}\r\n      title=\"Revenue By Date\"\r\n      graphId=\"revenue-date-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default RevenueByDateGraph;\r\n","import React from \"react\";\r\nimport { REVENUE_SUMMARY, TITHE_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\n\r\nfunction TitheByDateGraph(props) {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(TITHE_SUMMARY);\r\n  if (loading) return 'Loading ...';\r\n  if (error) return 'Error!';\r\n  console.log(data);\r\n  console.log(data.titheSummary);\r\n\r\n  let titheList = data.titheSummary\r\n    .map((d) => {\r\n      return d.date;\r\n    })\r\n    .filter((v, i, a) => a.indexOf(v) === i);\r\n  let res = [{\r\n    label: 'Members',\r\n    backgroundColor: ColorsHelper.randomColor(),\r\n    data: data.titheSummary.map(d => d.total)\r\n  }];\r\n\r\n  const meta = {\r\n    data: res,\r\n    labels: titheList.map((r) => r),\r\n    beginAtZero: true,\r\n  };\r\n  console.log(meta)\r\n  return (\r\n    <BarGraph\r\n      stacked={false}\r\n      meta={meta}\r\n      title=\"Tithing Members By Date\"\r\n      graphId=\"tithe-date-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default TitheByDateGraph;\r\n","import React from \"react\";\r\nimport RevenueByDateGraph from \"./dashboard/RevenueByDateGraph\";\r\nimport TitheByDateGraph from \"./dashboard/TitheByDateGraph\";\r\n\r\nfunction HomePage() {\r\n  console.log(\"Home Page\")\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <RevenueByDateGraph />\r\n      <TitheByDateGraph />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nfunction Table({ columns, data, idCol = \"id\" }) {\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"table-scrollable\">\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col) => (\r\n              <th key={col.name}>{col.label}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row) => (\r\n            <tr key={row[idCol]}>\r\n              {columns.map((col) => (\r\n                <td key={col.name} className={col.className}>\r\n                  {col.render ? col.render(row) : row[col.name]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nconst MatIcon = ({ name, extra, text }) => (\r\n  <>\r\n    <span className={`mat-icon material-icons${extra ? \" \" + extra : \"\"}`}>\r\n      {name}\r\n    </span>\r\n    {text && <span>{text}</span>}\r\n  </>\r\n);\r\nexport default MatIcon;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const GET_ENTRIES = gql`\r\n  query getEntries(\r\n    $pageNo: Int\r\n    $pageSize: Int\r\n    $entity: Int\r\n    $entryType: Int\r\n    $dateFrom: Date\r\n    $dateTo: Date\r\n  ) {\r\n    entries(\r\n      pageNo: $pageNo\r\n      pageSize: $pageSize\r\n      entity: $entity\r\n      entryType: $entryType\r\n      dateFrom: $dateFrom\r\n      dateTo: $dateTo\r\n    ) {\r\n      id\r\n      amount\r\n      entryType\r\n      createdAt\r\n      updatedAt\r\n      entity {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ENTITIES = gql`\r\n  query getEntities {\r\n    entities {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_ENTRY = gql`\r\n  mutation createEntry($entity: ID!, $amount: Float!, $entryType: Int!, $createdAt: DateTime!) {\r\n    createEntry(input: { entity: $entity, amount: $amount, entryType: $entryType, createdAt: $createdAt }) {\r\n      result {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const CREATE_ENTITY = gql`\r\n  mutation createEntity($name: String!) {\r\n    createEntity(input: { name: $name }) {\r\n      result {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nfunction Input({ label, name, help, type = \"text\", cls, ...props }) {\r\n  return (\r\n    <div className={`input-wrap ${cls || \"\"}`}>\r\n      <label htmlFor={name}>{label}</label>\r\n      {type === \"textarea\" ? (\r\n        <textarea name={name} id={name} {...props} />\r\n      ) : (\r\n          <input type={type} name={name} id={name} {...props} />\r\n        )}\r\n      {help && <span className=\"input-help\">{help}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","export const PAGE_SIZE = 10;\r\n\r\nexport const ENTRIES_FILTER_VARS = {\r\n  pageSize: PAGE_SIZE,\r\n  pageNo: 1,\r\n};\r\n\r\nexport const ENTRIES_FILTER_VARS_NO_PAGES = {\r\n  pageSize: 10000,\r\n  pageNo: 1,\r\n};\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\nimport Creatable from \"react-select/creatable\";\r\n\r\nfunction CreatableSelect({\r\n  label,\r\n  name,\r\n  query,\r\n  onCreateOption,\r\n  onChange,\r\n  options = [],\r\n  defaultValue = null,\r\n  ...props\r\n}) {\r\n  let { loading, data, error } = useQuery(query ? query.name : USERS_GET_ME, {\r\n    skip: query === null,\r\n  });\r\n  if (loading || error) {\r\n    return null;\r\n  }\r\n\r\n  if (data && query) {\r\n    options = data[query.data];\r\n  }\r\n\r\n  function handleChange(option) {\r\n    if (onChange) {\r\n      onChange({ target: { name: name, value: option.value } });\r\n    }\r\n  }\r\n  function handleCreate(value) {\r\n    if (onCreateOption) onCreateOption(name, value);\r\n  }\r\n\r\n  const selOptions = options.map((e) => {\r\n    return { value: e.id, label: e.name };\r\n  });\r\n  let selObj = selOptions && selOptions.find((o) => {\r\n    return defaultValue == o.value;\r\n  });\r\n  const value =\r\n    defaultValue !== undefined && selObj\r\n      ? {\r\n        value: defaultValue,\r\n        label: selObj.label,\r\n      }\r\n      : null;\r\n  return (\r\n    <div className=\"input-wrap\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <Creatable\r\n        options={selOptions}\r\n        {...props}\r\n        onCreateOption={handleCreate}\r\n        onChange={handleChange}\r\n        value={value}\r\n        maxMenuHeight={110}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatableSelect;\r\n","export const Dates = {\r\n  fmt: function formatDate(date, timeIncl = false) {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear(),\r\n      hour = d.getHours(),\r\n      minutes = d.getMinutes(),\r\n      seconds = d.getSeconds();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n    if (hour < 10) hour = \"0\" + hour;\r\n    if (minutes < 10) minutes = \"0\" + minutes;\r\n\r\n    let dateStr = [year, month, day].join(\"-\")\r\n    let timeStr = `${hour}:${minutes < 10 ? \"0\" + minutes : minutes}:00.00`\r\n    let res = timeIncl ? dateStr + \"T\" + timeStr : dateStr;\r\n    return res\r\n  },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../../components/forms/Input\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  CREATE_ENTITY,\r\n  CREATE_ENTRY,\r\n  GET_ENTITIES,\r\n  GET_ENTRIES,\r\n} from \"../../helpers/GraphQL\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { ENTRIES_FILTER_VARS, ENTRIES_FILTER_VARS_NO_PAGES } from \"../../constants\";\r\nimport CreatableSelect from \"../../components/forms/CreatableSelect\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { Dates } from \"../../helpers/Dates\";\r\n\r\nfunction NewEntryPage({ filter, onSuccess }) {\r\n  useProfile()\r\n  const entryTypes = [{ id: 0, name: \"Revenue\" }, { id: 1, name: \"Expense\" }]\r\n  let entities = useQuery(GET_ENTITIES);\r\n  const [redirect] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n  const defaultData = new Map()\r\n  defaultData['entryType'] = 0\r\n  defaultData['createdAt'] = Dates.fmt(Date.now(), true)\r\n  const [formData, setFormData] = useState(defaultData);\r\n  const [createEntry, { loading }] = useMutation(CREATE_ENTRY);\r\n  const [createEntity, { }] = useMutation(CREATE_ENTITY);\r\n  const entityOptions = entities.data ? entities.data.entities : [];\r\n\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (formData['entity'] && formData['amount']) {\r\n      createEntry({\r\n        variables: {\r\n          ...formData, createdAt: formData['createdAt'].split(\" \")[0]\r\n        },\r\n        // refetchQueries: () => [\r\n        //   { query: GET_ENTRIES, variables: { ...ENTRIES_FILTER_VARS, filter } },\r\n        //   { query: GET_ENTRIES, variables: { ...ENTRIES_FILTER_VARS_NO_PAGES, ...filter } },\r\n        // ],\r\n        awaitRefetchQueries: true,\r\n      }).then(\r\n        (res) => {\r\n          // setRedirect(\"/entries/new-entry?abc\");\r\n          // window.location.reload();\r\n          console.log(res)\r\n          setFormData({ ...formData, amount: \"\", entity: null })\r\n          let entryId = res.data.createEntry.result.id\r\n          setMessage({ error: false, text: `Successfully recorded an entry: ${entryId}` })\r\n          onSuccess(entryId)\r\n        },\r\n        (res) => {\r\n          console.log(\"Error: \", res)\r\n          setMessage({ error: true, text: \"Form submit failed!\" });\r\n        }\r\n      );\r\n    } else {\r\n      setMessage({ error: true, text: \"Fill in amount & entity\" })\r\n    }\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  function onCreateOption(name, value) {\r\n    createEntity({\r\n      variables: {\r\n        name: value,\r\n      },\r\n      refetchQueries: () => [{ query: GET_ENTITIES }],\r\n      awaitRefetchQueries: true,\r\n    }).then(\r\n      (res) => {\r\n        let id = res.data.createEntity.result.id;\r\n        setFormData({ ...formData, [name]: id });\r\n      },\r\n      (res) => setMessage({ error: true, text: \"Error creating entity\" })\r\n    );\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n      <div>\r\n        {loading && <p>Sending ....</p>}\r\n\r\n        <form className=\"form\" onSubmit={handleSubmit} autoComplete={\"off\"}>\r\n          <div>\r\n            <Input\r\n              name=\"createdAt\"\r\n              label=\"Record Date\"\r\n              type=\"datetime-local\"\r\n              onChange={handleChange}\r\n              required\r\n              defaultValue={Dates.fmt(Date.now(), true)}\r\n            />\r\n            <CreatableSelect\r\n              name=\"entryType\"\r\n              label=\"Type\"\r\n              options={entryTypes}\r\n              onChange={handleChange}\r\n              defaultValue={formData[\"entryType\"] || 0}\r\n              required\r\n            />\r\n            <CreatableSelect\r\n              name=\"entity\"\r\n              label=\"Entity\"\r\n              options={entityOptions}\r\n              onChange={handleChange}\r\n              onCreateOption={onCreateOption}\r\n              defaultValue={formData[\"entity\"]}\r\n              required\r\n            />\r\n\r\n            <Input\r\n              name=\"amount\"\r\n              label=\"Amount\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              required\r\n              value={formData['amount']}\r\n              min={100}\r\n            />\r\n          </div>\r\n          <div className=\"form-footer\">\r\n            <button>Submit</button>\r\n          </div>\r\n        </form>\r\n        {message && <small className={`p-1 message ${message.error ? \"fail\" : \"success\"}`}>{message.text}</small>}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default NewEntryPage;\r\n","import React from \"react\";\r\nimport MatIcon from \"../icons/MatIcon\";\r\n\r\nfunction Pagination({ pageNo, onPageChanged, lastPage }) {\r\n  const handlePrev = () => {\r\n    let newPage = pageNo > 1 ? pageNo - 1 : 1;\r\n    if (onPageChanged) {\r\n      onPageChanged(newPage);\r\n    }\r\n  };\r\n  const handleNext = () => {\r\n    let newPage = pageNo + 1;\r\n    if (onPageChanged) {\r\n      onPageChanged(newPage);\r\n    }\r\n  };\r\n  return (\r\n    <ul className=\"pagination\">\r\n      <li className=\"btn-wrap\">\r\n        <button onClick={handlePrev} disabled={pageNo <= 1}>\r\n          <MatIcon name=\"keyboard_arrow_left\" /> Previous\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <span>Page {pageNo}</span>\r\n      </li>\r\n      <li className=\"btn-wrap\">\r\n        <button onClick={handleNext} disabled={lastPage}>\r\n          Next <MatIcon name=\"keyboard_arrow_right\" />\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction Select({ label, name, query, options = [], ...props }) {\r\n  let { loading, data, error } = useQuery(query ? query.name : USERS_GET_ME, {\r\n    skip: query === null,\r\n  });\r\n  if (loading || error) {\r\n    return null;\r\n  }\r\n\r\n  if (data && query) {\r\n    options = data[query.data];\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-wrap\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...props}>\r\n        <option value=\"\">---Select---</option>\r\n        {options.map((o) => (\r\n          <option key={o.id} value={o.id}>\r\n            {o.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport Input from \"./Input\";\r\nimport Select from \"./Select\";\r\n\r\nfunction FilterExport({\r\n  fields,\r\n  handleChange,\r\n  handleSubmit,\r\n  filter,\r\n  handleExport,\r\n}) {\r\n  return (\r\n    <div className=\"filter-export  w-100\">\r\n      <form className=\"form d-flex align-bottom\" onSubmit={handleSubmit}>\r\n        <div className=\"inline-fields\">\r\n          {fields.map((f) => {\r\n            return f.type && f.type === \"select\" ? (\r\n              <Select key={f.name} {...f} onChange={handleChange} />\r\n            ) : (\r\n                <Input key={f.name} {...f} onChange={handleChange} />\r\n              );\r\n          })}\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <button name=\"filter\">Filter</button>\r\n          <button\r\n            className=\"ml-1\"\r\n            name=\"export\"\r\n            type=\"button\"\r\n            onClick={handleExport}\r\n          >\r\n            Export\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterExport;\r\n","import React, { useState } from \"react\";\r\nimport { GET_ENTITIES } from \"../../helpers/GraphQL\";\r\nimport FilterExport from \"../../components/forms/FilterExport\";\r\nimport { Dates } from \"../../helpers/Dates\";\r\n\r\nfunction FilterForm({ handleSubmit, handleExport, filter = {} }) {\r\n  console.log(filter);\r\n  const [formData, setFormData] = useState(filter);\r\n  const searchFields = [\r\n    {\r\n      name: \"entity\",\r\n      label: \"Entity\",\r\n      type: \"select\",\r\n      query: { name: GET_ENTITIES, data: \"entities\" },\r\n      defaultValue: filter[\"entity\"],\r\n    },\r\n    {\r\n      name: \"entryType\",\r\n      label: \"Type\",\r\n      type: \"select\",\r\n      options: [{ id: 0, name: \"Revenue\" }, { id: 1, name: \"Expense\" }],\r\n      defaultValue: filter[\"entryType\"],\r\n    },\r\n    {\r\n      name: \"dateFrom\",\r\n      label: \"From\",\r\n      type: \"date\",\r\n      defaultValue: filter[\"dateFrom\"] || Dates.fmt(Date.now()),\r\n    },\r\n    {\r\n      name: \"dateTo\",\r\n      label: \"To\",\r\n      type: \"date\",\r\n      defaultValue: filter[\"dateTo\"] || Dates.fmt(Date.now()),\r\n    },\r\n  ];\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value || null });\r\n  }\r\n\r\n  return (\r\n    <FilterExport\r\n      handleSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(formData);\r\n      }}\r\n      fields={searchFields}\r\n      handleChange={handleChange}\r\n      handleExport={(e) => {\r\n        e.preventDefault();\r\n        handleExport(formData);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FilterForm;\r\n","\r\nimport { useLazyQuery } from '@apollo/react-hooks';\r\nimport React, { useEffect } from 'react';\r\nimport { ENTRIES_FILTER_VARS_NO_PAGES } from '../../constants';\r\nimport { GET_ENTRIES } from '../../helpers/GraphQL';\r\nimport Numbers from '../../helpers/Numbers';\r\n\r\nfunction EntrySummary({ filter, newEntry }) {\r\n    const [getEntries, { loading, data, error, refetch }] = useLazyQuery(GET_ENTRIES, {\r\n        variables: { ...ENTRIES_FILTER_VARS_NO_PAGES, ...filter },\r\n    });\r\n    useEffect(() => {\r\n        const abortCtrl = new AbortController();\r\n        getEntries();\r\n\r\n        return function cleanup() {\r\n            abortCtrl.abort();\r\n        };\r\n    }, [filter]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"New Entry: \", newEntry)\r\n        const abortCtrl = new AbortController();\r\n        if (refetch) refetch();\r\n\r\n        return function cleanup() {\r\n            abortCtrl.abort();\r\n        };\r\n    }, [newEntry]);\r\n\r\n    if (loading || loading) return <p>Loading...</p>;\r\n    if (error || error) return <p>Error :(</p>;\r\n\r\n    const revenues = data ? data.entries.filter(r => r.entryType === 0) : []\r\n    const expenses = data ? data.entries.filter(r => r.entryType === 1) : []\r\n    const totalRevenue = revenues.reduce((prev, o) => prev + o.amount, 0)\r\n    const totalExpenses = expenses.reduce((prev, o) => prev + o.amount, 0)\r\n    const balance = totalRevenue - totalExpenses\r\n\r\n    return <div className=\"summary\">\r\n        <h5>Summary</h5>\r\n        <div><div>Revenue: <br /><i><small>{revenues.length} record(s)</small></i></div> <span>{Numbers.fmt(totalRevenue)}</span></div>\r\n        <div><div>Expense:<br /><i><small>{expenses.length} record(s)</small></i> </div><span>{Numbers.fmt(totalExpenses)}</span></div>\r\n        <hr />\r\n        <div>Balance: <span>{Numbers.fmt(balance)}</span></div>\r\n    </div>\r\n}\r\n\r\nexport default EntrySummary;","import React from \"react\";\r\nimport MatIcon from \"../icons/MatIcon\";\r\nimport ReactDom from \"react-dom\"\r\n\r\n\r\nfunction Modal({ onClose, title, children, posx, posy, ...props }) {\r\n  const showHideClassName = \"modal display-block\";\r\n  return ReactDom.createPortal(\r\n    <div className={showHideClassName} {...props}>\r\n      <div className=\"modal-main\">\r\n        <div className=\"modal-header\">\r\n          {title ? <h5 className=\"modal-title\">{title}</h5> : <span></span>}\r\n          <div className=\"btn-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-no-bg text-warning m-1 close-button\"\r\n              onClick={onClose}\r\n            >\r\n              <MatIcon name=\"close\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-content\">{children}</div>\r\n      </div>\r\n    </div>, document.getElementById(\"portal\")\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { Route, NavLink } from \"react-router-dom\";\r\n\r\nimport Table from \"../components/tables/Table\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport { GET_ENTRIES } from \"../helpers/GraphQL\";\r\nimport NewEntryPage from \"./entries/NewEntryPage\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport Pagination from \"../components/tables/Pagination\";\r\nimport { useEffect } from \"react\";\r\nimport FilterForm from \"./entries/FilterForm\";\r\nimport { BASE_URL } from \"../conf\";\r\nimport Numbers from \"../helpers/Numbers\";\r\nimport EntrySummary from \"./entries/EntrySummary\";\r\nimport Modal from \"../components/modals/Modal\";\r\nconst PAGE_SIZE = 10;\r\nfunction EntriesPage() {\r\n  useProfile();\r\n  const [pageNo, setPageNo] = useState(1);\r\n  const [filter, setFilter] = useState(new Map());\r\n  const [getEntries, { data, refetch }] = useLazyQuery(GET_ENTRIES, {\r\n    variables: { pageSize: PAGE_SIZE, pageNo: pageNo, ...filter },\r\n  });\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [newEntry, setNewEntry] = useState(0)\r\n\r\n\r\n  useEffect(() => {\r\n    const abortCtrl = new AbortController();\r\n    getEntries();\r\n\r\n    return function cleanup() {\r\n      abortCtrl.abort();\r\n    };\r\n  }, [pageNo, filter]);\r\n\r\n  const onNewEntry = (id) => {\r\n    refetch()\r\n    setNewEntry(id)\r\n  }\r\n\r\n  function handleSubmit(formData) {\r\n    let params = new Map();\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value) {\r\n        params[key] = value;\r\n      }\r\n    }\r\n    setFilter(params);\r\n    setPageNo(1);\r\n  }\r\n\r\n  function handleExport(formData) {\r\n    let params = new Map();\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value) {\r\n        params[key] = value;\r\n      }\r\n    }\r\n    let q = Object.keys(params)\r\n      .map((key) => key + \"=\" + params[key])\r\n      .join(\"&\");\r\n    fetch(`${BASE_URL}/export-entries?${q}`)\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        var url = window.URL.createObjectURL(blob);\r\n        var a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = \"Export.xlsx\";\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        a.remove();\r\n      });\r\n  }\r\n\r\n  function handlePageChange(newPageNo) {\r\n    setPageNo(newPageNo);\r\n  }\r\n\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"entity_name\", label: \"Entity\" },\r\n    { name: \"amount\", label: \"Amount\" },\r\n    { name: \"entryType\", label: \"Entry Type\" },\r\n    { name: \"createdAt\", label: \"Created\" },\r\n  ];\r\n  const fmtDate = (strDate) => {\r\n    let parsed = Date.parse(strDate);\r\n    return new Date(parsed).toLocaleDateString(\"en-GB\");\r\n  };\r\n  const records = data\r\n    ? data.entries.map((r) => ({\r\n      ...r,\r\n      entity_name: r.entity.name,\r\n      createdAt: fmtDate(r.createdAt),\r\n      updatedAt: fmtDate(r.updatedAt),\r\n      amount: Numbers.fmt(r.amount),\r\n      entryType: r.entryType === 0 ? \"Revenue\" : \"Expense\"\r\n    }))\r\n    : [];\r\n\r\n  const onClose = () => setIsOpen(false)\r\n  return (\r\n    <>\r\n      <Route path=\"/entries\" exact>\r\n        <div className=\"toolbar\">\r\n          <h5>List of entries</h5>\r\n          <button onClick={() => setIsOpen(true)} className=\"btn\">\r\n            <MatIcon name=\"add\" text=\"New Entry\" />\r\n          </button>\r\n        </div>\r\n        <hr />\r\n        <div className=\"toolbar\">\r\n          {data && (\r\n            <FilterForm\r\n              handleSubmit={handleSubmit}\r\n              filter={filter}\r\n              handleExport={handleExport}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"d-flex desktop\">\r\n          <div className=\"d-flex-main\">\r\n            <Table columns={columns} data={records} />\r\n            {data && (\r\n              <Pagination\r\n                pageNo={pageNo}\r\n                onPageChanged={handlePageChange}\r\n                lastPage={data.entries.length < PAGE_SIZE}\r\n              />\r\n            )}\r\n          </div>\r\n          <EntrySummary filter={filter} newEntry={newEntry} />\r\n        </div>\r\n      </Route>\r\n      {isOpen && <Modal onClose={onClose} title={\"Register New Entry\"}>\r\n        <NewEntryPage onSuccess={onNewEntry} />\r\n      </Modal>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EntriesPage;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { REGISTER_USER, USERS, USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport Input from \"../../components/forms/Input\";\r\n\r\nfunction NewUserPage() {\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerUser, { loading }] = useMutation(REGISTER_USER);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    registerUser({\r\n      variables: {\r\n        ...formData,\r\n      },\r\n      refetchQueries: [{ query: USERS }, { query: USERS_GET_ME }],\r\n    }).then(\r\n      () => setRedirect(\"/users\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/users\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Register New User</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form form-medium\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            required\r\n          />\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewUserPage;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect, withRouter } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport {\r\n  REGISTER_USER,\r\n  USERS,\r\n  USERS_GET_ME,\r\n  GET_USER,\r\n} from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport Input from \"../../components/forms/Input\";\r\n\r\nfunction UpdateUserPage({ match }) {\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerUser, {}] = useMutation(REGISTER_USER);\r\n  const { loading, error, data } = useQuery(GET_USER, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  let user = data.user;\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let prev = new Map();\r\n    Object.keys(user).forEach((key) => {\r\n      if (!formData[key]) {\r\n        prev[key] = user[key];\r\n      }\r\n    });\r\n\r\n    registerUser({\r\n      variables: { ...formData, ...prev, id: user.id },\r\n      refetchQueries: [{ query: USERS }, { query: USERS_GET_ME }],\r\n    }).then(\r\n      () => setRedirect(\"/users\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/users\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Update User</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form form-medium\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.username}\r\n            readOnly={true}\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            required\r\n            defaultValue={user.email}\r\n          />\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.firstName}\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.lastName}\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(UpdateUserPage);\r\n","import React from \"react\";\r\nimport { USERS } from \"../helpers/UsersGraphQL\";\r\nimport NewUserPage from \"./users/NewUserPage\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Route, NavLink, useHistory } from \"react-router-dom\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport Table from \"../components/tables/Table\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport UpdateUserPage from \"./users/UpdateUserPage\";\r\n\r\nfunction UserManagementPage(props) {\r\n  useProfile();\r\n  const { loading, error, data } = useQuery(USERS);\r\n  if (loading) return null;\r\n  if (error) {\r\n    return <p>Error (:</p>;\r\n  }\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"username\", label: \"Client Name\" },\r\n    { name: \"email\", label: \"Email\" },\r\n    { name: \"name\", label: \"Full Name\" },\r\n    {\r\n      name: \"actions\",\r\n      label: \"\",\r\n      render: (row) => (\r\n        <div>\r\n          <a href={`/users/update/${row.id}`} className=\"d-flex align-left\">\r\n            <MatIcon name=\"edit\" text=\"Edit\" />\r\n          </a>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const records = data.users.map((r) => ({\r\n    ...r,\r\n    name: r.firstName ? `${r.firstName} ${r.lastName}` : null,\r\n  }));\r\n  return (\r\n    <>\r\n      <Route path=\"/users\" exact>\r\n        <div className=\"toolbar\">\r\n          <h5>List of users</h5>\r\n          <NavLink\r\n            className=\"d-flex btn btn-light has-left-icon\"\r\n            to=\"/users/new-user\"\r\n          >\r\n            <MatIcon name=\"add\" text=\"New User\" />\r\n          </NavLink>\r\n        </div>\r\n        <Table columns={columns} data={records} />\r\n      </Route>\r\n      <Route path=\"/users/new-user\" exact>\r\n        <NewUserPage />\r\n      </Route>\r\n      <Route path=\"/users/update/:id\" exact>\r\n        <UpdateUserPage />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserManagementPage;\r\n","const ACCESS_TOKEN = \"AccessToken\";\r\n\r\nconst AuthHelper = {\r\n  saveToken: (token, cb) => {\r\n    sessionStorage.setItem(ACCESS_TOKEN, token);\r\n    cb(true);\r\n  },\r\n  getToken: () => sessionStorage.getItem(ACCESS_TOKEN),\r\n  removeToken: () => sessionStorage.removeItem(ACCESS_TOKEN),\r\n};\r\n\r\nexport default AuthHelper;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../components/forms/Input\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport AuthHelper from \"../helpers/AuthHelper\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_TOKEN } from \"../helpers/UsersGraphQL\";\r\nimport { APP_NAME } from \"../conf\";\r\n\r\nfunction LoginPage(props) {\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [login, { client }] = useMutation(USERS_GET_TOKEN);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    client.clearStore();\r\n    login({\r\n      variables: {\r\n        ...formData,\r\n      },\r\n    }).then(\r\n      (res) => {\r\n        if (res.data) {\r\n          let { token } = res.data.tokenAuth;\r\n          AuthHelper.saveToken(token, () => {\r\n            setRedirect(\"/\");\r\n          });\r\n        }\r\n      },\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n      <>\r\n        <div className=\"login-page box-shadow\">\r\n          <div className=\"login-header d-flex mb-1 p-1\">\r\n            <h3>{APP_NAME}</h3>\r\n            <img\r\n              src={\r\n                process.env.PUBLIC_URL + \"/static/images/logo.png\"\r\n              }\r\n              alt=\"Logo\"\r\n            />\r\n          </div>\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <div className=\"mt-1\">\r\n              <Input\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <Input\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-footer\">\r\n              <button>\r\n                <span className=\"mr-1\">Login</span>\r\n                <MatIcon name=\"login\" />\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport NavBar from \"./components/nav/NavBar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport EntriesPage from \"./pages/EntriesPage\";\r\nimport UserManagementPage from \"./pages/UserManagementPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport AuthHelper from \"./helpers/AuthHelper\";\r\nimport { BASE_URL } from \"./conf\";\r\nconst getToken = () => {\r\n  const token = AuthHelper.getToken();\r\n  return token ? `JWT ${token}` : \"\";\r\n};\r\nconst requestMiddleware = (operation) => {\r\n  operation.setContext({\r\n    headers: {\r\n      Authorization: getToken(),\r\n    },\r\n  });\r\n};\r\nconst client = new ApolloClient({\r\n  uri: `${BASE_URL}/graphql`,\r\n  request: requestMiddleware,\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <ApolloProvider client={client}>\r\n        <Switch>\r\n          <Route path=\"/login\" exact>\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <NavBar />\r\n            <section className=\"page-content container\">\r\n              <div className=\"content\">\r\n                <Switch>\r\n                  <Route path=\"/\" exact>\r\n                    <HomePage />\r\n                  </Route>\r\n                  <Route path=\"/entries\">\r\n                    <EntriesPage />\r\n                  </Route>\r\n                  <Route path=\"/users\">\r\n                    <UserManagementPage />\r\n                  </Route>\r\n                </Switch>\r\n              </div>\r\n            </section>\r\n          </Route>\r\n        </Switch>\r\n      </ApolloProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}