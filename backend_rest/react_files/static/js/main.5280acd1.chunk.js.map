{"version":3,"sources":["helpers/UsersGraphQL.js","components/nav/UserProfile.js","components/hooks/useProfile.js","conf.js","components/nav/NavBar.js","helpers/ReportsGraphQL.js","helpers/Numbers.js","components/graph/BarGraph.js","helpers/ColorsHelper.js","pages/dashboard/RevenueByDateGraph.js","pages/dashboard/RevenueExpensesByDateGraph.js","pages/dashboard/TitheByDateGraph.js","pages/HomePage.js","components/tables/Table.js","components/icons/MatIcon.js","helpers/GraphQL.js","components/forms/Input.js","components/forms/CreatableSelect.js","helpers/Dates.js","pages/entries/NewEntryPage.js","components/tables/Pagination.js","components/forms/DropdownButton.js","components/forms/Select.js","components/forms/FilterExport.js","pages/entries/FilterForm.js","constants.js","pages/entries/EntrySummary.js","components/modals/Modal.js","pages/EntriesPage.js","pages/users/NewUserPage.js","pages/users/UpdateUserPage.js","pages/UserManagementPage.js","helpers/AuthHelper.js","pages/LoginPage.js","pages/EntitiesPage.js","App.js","serviceWorker.js","index.js"],"names":["USERS_GET_TOKEN","gql","USERS_GET_ME","USERS","REGISTER_USER","GET_USER","UserProfile","props","useQuery","loading","error","data","console","log","className","me","username","exact","to","useProfile","history","useHistory","graphQLErrors","length","message","push","CONF","DEV","baseUrl","ROOT","PROD","BASE_URL","NavBar","user","isSuperuser","REVENUE_SUMMARY","REVENUE_EXPENSES_SUMMARY","TITHE_SUMMARY","numOr0","n","isNaN","parseFloat","Numbers","fmt","num","decimals","Number","toFixed","toString","replace","sum","nums","reduce","a","b","dpts","Math","round","BarGraph","graphId","meta","title","extra","type","stacked","useEffect","datasets","labels","options","legend","display","window","screen","width","position","plugins","datalabels","hover","mode","intersect","tooltips","displayColors","callbacks","label","tooltipItem","datasetIndex","yLabel","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","callback","value","toLocaleString","userCallback","index","floor","Chart","document","getElementById","id","style","ColorsHelper","color","i","random","RevenueByDateGraph","revenueSummary","revenueList","map","d","date","filter","v","indexOf","cat","total","s","backgroundColor","p","x","find","r","RevenueExpensesByDateGraph","revenueExpensesSummary","list","TitheByDateGraph","titheSummary","titheList","HomePage","Table","columns","idCol","col","key","name","row","render","MatIcon","text","GET_ENTRIES","GET_ENTITIES","CREATE_ENTRY","CREATE_ENTITY","Input","help","cls","htmlFor","CreatableSelect","query","onCreateOption","onChange","defaultValue","skip","selOptions","e","selObj","o","undefined","option","target","maxMenuHeight","Dates","timeIncl","Date","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minutes","getMinutes","dateStr","join","timeStr","res","NewEntryPage","onSuccess","entities","useState","redirect","setMessage","defaultData","Map","now","formData","setFormData","useMutation","createEntry","createEntity","entityOptions","handleChange","onSubmit","preventDefault","variables","createdAt","split","awaitRefetchQueries","then","amount","entity","entryId","result","autoComplete","required","refetchQueries","min","Pagination","pageNo","onPageChanged","lastPage","onClick","disabled","DropdownButton","actions","open","setOpen","setStyle","btn","useRef","updateLocation","current","box","getBoundingClientRect","top","left","handleScroll","handleClickOut","addEventListener","removeEventListener","ref","stopPropagation","cb","handleItemClick","clickHandler","Select","FilterExport","fields","handleSubmit","exportActions","f","FilterForm","searchFields","ENTRIES_FILTER_VARS_NO_PAGES","pageSize","EntrySummary","newEntry","useLazyQuery","getEntries","refetch","abortCtrl","AbortController","abort","revenues","entries","entryType","expenses","totalRevenue","prev","totalExpenses","balance","Modal","onClose","children","posx","posy","ReactDom","createPortal","EntriesPage","setPageNo","setFilter","isOpen","setIsOpen","setNewEntry","fmtDate","strDate","parsed","parse","toLocaleDateString","records","entity_name","updatedAt","params","Object","q","keys","fetch","response","blob","url","URL","createObjectURL","createElement","href","download","body","appendChild","click","remove","handleExport","handleExportAggregated","path","newPageNo","NewUserPage","setRedirect","registerUser","withRouter","match","forEach","readOnly","email","firstName","lastName","UserManagementPage","users","AuthHelper","saveToken","token","sessionStorage","setItem","getToken","getItem","removeToken","removeItem","LoginPage","login","client","src","alt","clearStore","tokenAuth","EntitiesPage","getEntities","isMember","ApolloClient","uri","request","operation","setContext","headers","Authorization","App","Boolean","location","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5280acd1.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\r\nexport const USERS_GET_TOKEN = gql`\r\n  mutation getToken($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS_GET_ME = gql`\r\n  query getMe {\r\n    me {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS = gql`\r\n  query getUsers {\r\n    users {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_USER = gql`\r\n  mutation registerUser(\r\n    $id: ID\r\n    $username: String!\r\n    $email: String!\r\n    $firstName: String\r\n    $lastName: String\r\n  ) {\r\n    registerUser(\r\n      id: $id\r\n      username: $username\r\n      email: $email\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n    ) {\r\n      user {\r\n        id\r\n        username\r\n        dateJoined\r\n        firstName\r\n        lastName\r\n        lastLogin\r\n        email\r\n        isStaff\r\n        isSuperuser\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER = gql`\r\n  query getUser($id: ID!) {\r\n    user(id: $id) {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction UserProfile(props) {\r\n  let { loading, error, data } = useQuery(USERS_GET_ME);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  console.log(data);\r\n  return (\r\n    <div className=\"user-profile-nav\">\r\n      <ul>\r\n        <li>\r\n          <b>{data.me.username}</b>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/login\">\r\n            Logout\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction useProfile() {\r\n  const history = useHistory();\r\n  const { loading, error, data } = useQuery(USERS_GET_ME);\r\n  if (loading) return null;\r\n  if (error) {\r\n    if (error.graphQLErrors.length) {\r\n      let message = error.graphQLErrors[0].message;\r\n      if (\r\n        message === \"Signature has expired\" ||\r\n        message === \"You do not have permission to perform this action\"\r\n      ) {\r\n        history.push(\"/login\");\r\n      }\r\n    }\r\n    console.log(error);\r\n    return null;\r\n  }\r\n  return data;\r\n}\r\n\r\nexport default useProfile;\r\n","// Configurations:\r\n// 1. Backend endpoint depending on test vs live\r\n// 2.\r\n\r\nconst ENVIRON = process.env.NODE_ENV === \"development\" ? \"DEV\" : \"PROD\";\r\n\r\nconst CONF = {\r\n  DEV: {\r\n    baseUrl: \"http://localhost:8000/api\",\r\n    ROOT: \"http://localhost:8000\",\r\n  },\r\n  PROD: {\r\n    baseUrl: \"/api\",\r\n    ROOT: \"\",\r\n  },\r\n};\r\n\r\nexport const BASE_URL = CONF[ENVIRON].baseUrl;\r\nexport const ROOT_URL = CONF[ENVIRON].ROOT;\r\nexport const GOOGLE_API_KEY = \"AIzaSyDQ7WXCqy5-cyHTyho_XLgBDHJZe4n-nAw\";\r\nexport const APP_NAME = \"TAG MAKOKA (MSCC)\";\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport useProfile from \"../hooks/useProfile\";\r\nimport { APP_NAME } from \"../../conf\";\r\n\r\nfunction NavBar() {\r\n  const user = useProfile();\r\n  console.log(user);\r\n  return (\r\n    <header className=\"navbar container\">\r\n      <div className=\"content\">\r\n        <h3>{APP_NAME}</h3>\r\n        <div className=\"nav-links\">\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to=\"/\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/entries\">Entries</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/entities\">Entities</NavLink>\r\n            </li>\r\n            {user && user.me && user.me.isSuperuser && (\r\n              <li>\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n              </li>\r\n            )}\r\n          </ul>\r\n          <UserProfile />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const REVENUE_SUMMARY = gql`\r\n  query revenueSummary {\r\n    revenueSummary {\r\n      date\r\n      cat\r\n      total\r\n    }\r\n  }\r\n`;\r\nexport const REVENUE_EXPENSES_SUMMARY = gql`\r\n  query revenueExpensesSummary {\r\n    revenueExpensesSummary {\r\n      date\r\n      cat\r\n      total\r\n    }\r\n  }\r\n`;\r\nexport const TITHE_SUMMARY = gql`\r\n  query titheSummary {\r\n    titheSummary {\r\n      date\r\n      total\r\n    }\r\n  }\r\n`;","let numOr0 = (n) => (isNaN(n) ? 0 : parseFloat(n));\r\nconst Numbers = {\r\n  fmt: (num, decimals = 0) =>\r\n    Number(num)\r\n      .toFixed(decimals)\r\n      .toString()\r\n      .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\"),\r\n  sum: (nums) => nums.reduce((a, b) => numOr0(a) + numOr0(b), 0),\r\n  dpts: (num) => (Math.round(num * 100) / 100).toFixed(2),\r\n};\r\nexport default Numbers;\r\n","import React from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport { useEffect } from \"react\";\r\nimport Numbers from \"../../helpers/Numbers\"\r\n\r\nconst BarGraph = ({\r\n  graphId,\r\n  meta,\r\n  title,\r\n  extra = null,\r\n  type = \"bar\",\r\n  stacked = false,\r\n}) => {\r\n\r\n  useEffect(() => {\r\n    const data = {\r\n      datasets: meta.data,\r\n      labels: meta.labels,\r\n    };\r\n    console.log(data);\r\n    const options = {\r\n      legend: {\r\n        display: window.screen.width > 800,\r\n        position: \"top\",\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          display: false,\r\n        },\r\n      },\r\n      hover: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n      },\r\n      tooltips: {\r\n        displayColors: true,\r\n        callbacks: {\r\n          mode: \"x\",\r\n          label: function (tooltipItem, data) {\r\n            let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            label += Numbers.fmt(tooltipItem.yLabel);\r\n            return label;\r\n          }\r\n        },\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            stacked: stacked,\r\n            gridLines: {\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            stacked: stacked,\r\n            ticks: {\r\n              beginAtZero: meta.beginAtZero || false,\r\n              callback: function (value) {\r\n                return value.toLocaleString();\r\n              },\r\n              userCallback: function (label, index, labels) {\r\n                if (Math.floor(label) === label) {\r\n                  return Numbers.fmt(label);\r\n                }\r\n              },\r\n            },\r\n            type: \"linear\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    console.log(\"Data: \", data)\r\n    new Chart(document.getElementById(graphId), {\r\n      type: type,\r\n      data: data,\r\n      options: options,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`graph-container bg-white card ${extra ? extra : \"\"}`}>\r\n      <h6 className=\"pl-1\">{title}</h6>\r\n      <div>\r\n        <canvas id={graphId} className=\"graph p-1\" style={{}}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import invert from \"invert-color\";\r\nexport const ColorsHelper = {\r\n  randomColor() {\r\n    var letters = \"0123456789ABCDEF\";\r\n    var color = \"#\";\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  },\r\n  randomColors(num) {\r\n    return [...Array(num).keys()].map(() => this.randomColor());\r\n  },\r\n  contrastColors(colors) {\r\n    return colors.map(c => invert(c));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { REVENUE_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\n\r\nfunction RevenueByDateGraph(props) {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(REVENUE_SUMMARY);\r\n  if (loading) return 'Loading ...';\r\n  if (error) return 'Error!';\r\n  console.log(data);\r\n\r\n  let placeHolder = [\r\n    { cat: \"ZAKA\", total: 0 },\r\n    { cat: \"SADAKA\", total: 0 },\r\n  ];\r\n  console.log(data.revenueSummary);\r\n\r\n  let revenueList = data.revenueSummary\r\n    .map((d) => {\r\n      return d.date;\r\n    })\r\n    .filter((v, i, a) => a.indexOf(v) === i);\r\n  let res = placeHolder.map((s) => {\r\n    return {\r\n      label: s.cat,\r\n      backgroundColor: ColorsHelper.randomColor(),\r\n      data: revenueList.map((p) => {\r\n        let x = data.revenueSummary.find(\r\n          (d) => d.date === p && d.cat === s.cat\r\n        );\r\n        return x ? x.total : 0;\r\n      }),\r\n    };\r\n  });\r\n\r\n  const meta = {\r\n    data: res,\r\n    labels: revenueList.map((r) => r),\r\n    beginAtZero: true,\r\n  };\r\n  return (\r\n    <BarGraph\r\n      stacked={true}\r\n      meta={meta}\r\n      title=\"Revenue By Date\"\r\n      graphId=\"revenue-date-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default RevenueByDateGraph;\r\n","import React from \"react\";\r\nimport { REVENUE_EXPENSES_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\n\r\nfunction RevenueExpensesByDateGraph(props) {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(REVENUE_EXPENSES_SUMMARY);\r\n  if (loading) return 'Loading ...';\r\n  if (error) return 'Error!';\r\n  console.log(data);\r\n\r\n  let placeHolder = [\r\n    { cat: \"REVENUE\", total: 0 },\r\n    { cat: \"EXPENSES\", total: 0 },\r\n  ];\r\n  console.log(data.revenueExpensesSummary);\r\n\r\n  let list = data.revenueExpensesSummary\r\n    .map((d) => {\r\n      return d.date;\r\n    })\r\n    .filter((v, i, a) => a.indexOf(v) === i);\r\n  let res = placeHolder.map((s) => {\r\n    return {\r\n      label: s.cat,\r\n      backgroundColor: ColorsHelper.randomColor(),\r\n      data: list.map((p) => {\r\n        let x = data.revenueExpensesSummary.find(\r\n          (d) => d.date === p && d.cat === s.cat\r\n        );\r\n        return x ? x.total : 0;\r\n      }),\r\n    };\r\n  });\r\n\r\n  const meta = {\r\n    data: res,\r\n    labels: list.map((r) => r),\r\n    beginAtZero: true,\r\n  };\r\n  return (\r\n    <BarGraph\r\n      stacked={true}\r\n      meta={meta}\r\n      title=\"Revenue vs Expenses By Date\"\r\n      graphId=\"revenue-expenses-date-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default RevenueExpensesByDateGraph;\r\n","import React from \"react\";\r\nimport { REVENUE_SUMMARY, TITHE_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\n\r\nfunction TitheByDateGraph(props) {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(TITHE_SUMMARY);\r\n  if (loading) return 'Loading ...';\r\n  if (error) return 'Error!';\r\n  console.log(data);\r\n  console.log(data.titheSummary);\r\n\r\n  let titheList = data.titheSummary\r\n    .map((d) => {\r\n      return d.date;\r\n    })\r\n    .filter((v, i, a) => a.indexOf(v) === i);\r\n  let res = [{\r\n    label: 'Members',\r\n    backgroundColor: ColorsHelper.randomColor(),\r\n    data: data.titheSummary.map(d => d.total)\r\n  }];\r\n\r\n  const meta = {\r\n    data: res,\r\n    labels: titheList.map((r) => r),\r\n    beginAtZero: true,\r\n  };\r\n  console.log(meta)\r\n  return (\r\n    <BarGraph\r\n      stacked={false}\r\n      meta={meta}\r\n      title=\"Tithing Members By Date\"\r\n      graphId=\"tithe-date-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default TitheByDateGraph;\r\n","import React from \"react\";\r\nimport RevenueByDateGraph from \"./dashboard/RevenueByDateGraph\";\r\nimport RevenueExpensesByDateGraph from \"./dashboard/RevenueExpensesByDateGraph\";\r\nimport TitheByDateGraph from \"./dashboard/TitheByDateGraph\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <RevenueByDateGraph />\r\n      <TitheByDateGraph />\r\n      <RevenueExpensesByDateGraph />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nfunction Table({ columns, data, idCol = \"id\" }) {\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"table-scrollable\">\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col) => (\r\n              <th key={col.name}>{col.label}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row) => (\r\n            <tr key={row[idCol]}>\r\n              {columns.map((col) => (\r\n                <td key={col.name} className={col.className}>\r\n                  {col.render ? col.render(row) : row[col.name]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nconst MatIcon = ({ name, extra, text }) => (\r\n  <>\r\n    <span className={`mat-icon material-icons${extra ? \" \" + extra : \"\"}`}>\r\n      {name}\r\n    </span>\r\n    {text && <span>{text}</span>}\r\n  </>\r\n);\r\nexport default MatIcon;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const GET_ENTRIES = gql`\r\n  query getEntries(\r\n    $pageNo: Int\r\n    $pageSize: Int\r\n    $entity: Int\r\n    $entryType: Int\r\n    $dateFrom: Date\r\n    $dateTo: Date\r\n  ) {\r\n    entries(\r\n      pageNo: $pageNo\r\n      pageSize: $pageSize\r\n      entity: $entity\r\n      entryType: $entryType\r\n      dateFrom: $dateFrom\r\n      dateTo: $dateTo\r\n    ) {\r\n      id\r\n      amount\r\n      entryType\r\n      createdAt\r\n      updatedAt\r\n      entity {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ENTITIES = gql`\r\n  query getEntities {\r\n    entities {\r\n      id\r\n      name\r\n      isMember\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_ENTRY = gql`\r\n  mutation createEntry($entity: ID!, $amount: Float!, $entryType: Int!, $createdAt: DateTime!) {\r\n    createEntry(input: { entity: $entity, amount: $amount, entryType: $entryType, createdAt: $createdAt }) {\r\n      result {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const CREATE_ENTITY = gql`\r\n  mutation createEntity($name: String!) {\r\n    createEntity(input: { name: $name }) {\r\n      result {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nfunction Input({ label, name, help, type = \"text\", cls, ...props }) {\r\n  return (\r\n    <div className={`input-wrap ${cls || \"\"}`}>\r\n      <label htmlFor={name}>{label}</label>\r\n      {type === \"textarea\" ? (\r\n        <textarea name={name} id={name} {...props} />\r\n      ) : (\r\n          <input type={type} name={name} id={name} {...props} />\r\n        )}\r\n      {help && <span className=\"input-help\">{help}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\nimport Creatable from \"react-select/creatable\";\r\n\r\nfunction CreatableSelect({\r\n  label,\r\n  name,\r\n  query,\r\n  onCreateOption,\r\n  onChange,\r\n  options = [],\r\n  defaultValue = null,\r\n  ...props\r\n}) {\r\n  let { loading, data, error } = useQuery(query ? query.name : USERS_GET_ME, {\r\n    skip: query === null,\r\n  });\r\n  if (loading || error) {\r\n    return null;\r\n  }\r\n\r\n  if (data && query) {\r\n    options = data[query.data];\r\n  }\r\n\r\n  function handleChange(option) {\r\n    if (onChange) {\r\n      onChange({ target: { name: name, value: option.value } });\r\n    }\r\n  }\r\n  function handleCreate(value) {\r\n    if (onCreateOption) onCreateOption(name, value);\r\n  }\r\n\r\n  const selOptions = options.map((e) => {\r\n    return { value: e.id, label: e.name };\r\n  });\r\n  let selObj = selOptions && selOptions.find((o) => {\r\n    return defaultValue == o.value;\r\n  });\r\n  const value =\r\n    defaultValue !== undefined && selObj\r\n      ? {\r\n        value: defaultValue,\r\n        label: selObj.label,\r\n      }\r\n      : null;\r\n  return (\r\n    <div className=\"input-wrap\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <Creatable\r\n        options={selOptions}\r\n        {...props}\r\n        onCreateOption={handleCreate}\r\n        onChange={handleChange}\r\n        value={value}\r\n        maxMenuHeight={110}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatableSelect;\r\n","export const Dates = {\r\n  fmt: function formatDate(date, timeIncl = false) {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear(),\r\n      hour = d.getHours(),\r\n      minutes = d.getMinutes();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n    if (hour < 10) hour = \"0\" + hour;\r\n    if (minutes < 10) minutes = \"0\" + minutes;\r\n\r\n    let dateStr = [year, month, day].join(\"-\")\r\n    let timeStr = `${hour}:${minutes < 10 ? \"0\" + minutes : minutes}:00.00`\r\n    let res = timeIncl ? dateStr + \"T\" + timeStr : dateStr;\r\n    return res\r\n  },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../../components/forms/Input\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  CREATE_ENTITY,\r\n  CREATE_ENTRY,\r\n  GET_ENTITIES,\r\n} from \"../../helpers/GraphQL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CreatableSelect from \"../../components/forms/CreatableSelect\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { Dates } from \"../../helpers/Dates\";\r\n\r\nfunction NewEntryPage({ onSuccess }) {\r\n  useProfile()\r\n  const entryTypes = [{ id: 0, name: \"Revenue\" }, { id: 1, name: \"Expense\" }]\r\n  let entities = useQuery(GET_ENTITIES);\r\n  const [redirect] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n  const defaultData = new Map()\r\n  defaultData['entryType'] = 0\r\n  defaultData['createdAt'] = Dates.fmt(Date.now(), true)\r\n  const [formData, setFormData] = useState(defaultData);\r\n  const [createEntry, { loading }] = useMutation(CREATE_ENTRY);\r\n  const [createEntity, { }] = useMutation(CREATE_ENTITY);\r\n  const entityOptions = entities.data ? entities.data.entities : [];\r\n\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (formData['entity'] && formData['amount']) {\r\n      createEntry({\r\n        variables: {\r\n          ...formData, createdAt: formData['createdAt'].split(\" \")[0]\r\n        },\r\n        // refetchQueries: () => [\r\n        //   { query: GET_ENTRIES, variables: { ...ENTRIES_FILTER_VARS, filter } },\r\n        //   { query: GET_ENTRIES, variables: { ...ENTRIES_FILTER_VARS_NO_PAGES, ...filter } },\r\n        // ],\r\n        awaitRefetchQueries: true,\r\n      }).then(\r\n        (res) => {\r\n          // setRedirect(\"/entries/new-entry?abc\");\r\n          // window.location.reload();\r\n          console.log(res)\r\n          setFormData({ ...formData, amount: \"\", entity: null })\r\n          let entryId = res.data.createEntry.result.id\r\n          setMessage({ error: false, text: `Successfully recorded an entry: ${entryId}` })\r\n          onSuccess(entryId)\r\n        },\r\n        (res) => {\r\n          console.log(\"Error: \", res)\r\n          setMessage({ error: true, text: \"Form submit failed!\" });\r\n        }\r\n      );\r\n    } else {\r\n      setMessage({ error: true, text: \"Fill in amount & entity\" })\r\n    }\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  function onCreateOption(name, value) {\r\n    createEntity({\r\n      variables: {\r\n        name: value,\r\n      },\r\n      refetchQueries: () => [{ query: GET_ENTITIES }],\r\n      awaitRefetchQueries: true,\r\n    }).then(\r\n      (res) => {\r\n        let id = res.data.createEntity.result.id;\r\n        setFormData({ ...formData, [name]: id });\r\n      },\r\n      () => setMessage({ error: true, text: \"Error creating entity\" })\r\n    );\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n      <div>\r\n        {loading && <p>Sending ....</p>}\r\n\r\n        <form className=\"form\" onSubmit={handleSubmit} autoComplete={\"off\"}>\r\n          <div>\r\n            <Input\r\n              name=\"createdAt\"\r\n              label=\"Record Date\"\r\n              type=\"datetime-local\"\r\n              onChange={handleChange}\r\n              required\r\n              defaultValue={Dates.fmt(Date.now(), true)}\r\n            />\r\n            <CreatableSelect\r\n              name=\"entryType\"\r\n              label=\"Type\"\r\n              options={entryTypes}\r\n              onChange={handleChange}\r\n              defaultValue={formData[\"entryType\"] || 0}\r\n              required\r\n            />\r\n            <CreatableSelect\r\n              name=\"entity\"\r\n              label=\"Entity\"\r\n              options={entityOptions}\r\n              onChange={handleChange}\r\n              onCreateOption={onCreateOption}\r\n              defaultValue={formData[\"entity\"]}\r\n              required\r\n            />\r\n\r\n            <Input\r\n              name=\"amount\"\r\n              label=\"Amount\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              required\r\n              value={formData['amount']}\r\n              min={100}\r\n            />\r\n          </div>\r\n          <div className=\"form-footer\">\r\n            <button>Submit</button>\r\n          </div>\r\n        </form>\r\n        {message && <small className={`p-1 message ${message.error ? \"fail\" : \"success\"}`}>{message.text}</small>}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default NewEntryPage;\r\n","import React from \"react\";\r\nimport MatIcon from \"../icons/MatIcon\";\r\n\r\nfunction Pagination({ pageNo, onPageChanged, lastPage }) {\r\n  const handlePrev = () => {\r\n    let newPage = pageNo > 1 ? pageNo - 1 : 1;\r\n    if (onPageChanged) {\r\n      onPageChanged(newPage);\r\n    }\r\n  };\r\n  const handleNext = () => {\r\n    let newPage = pageNo + 1;\r\n    if (onPageChanged) {\r\n      onPageChanged(newPage);\r\n    }\r\n  };\r\n  return (\r\n    <ul className=\"pagination\">\r\n      <li className=\"btn-wrap\">\r\n        <button onClick={handlePrev} disabled={pageNo <= 1}>\r\n          <MatIcon name=\"keyboard_arrow_left\" /> Previous\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <span>Page {pageNo}</span>\r\n      </li>\r\n      <li className=\"btn-wrap\">\r\n        <button onClick={handleNext} disabled={lastPage}>\r\n          Next <MatIcon name=\"keyboard_arrow_right\" />\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport MatIcon from \"../icons/MatIcon\"\r\n\r\nfunction DropdownButton({ label, actions }) {\r\n    const [open, setOpen] = useState(false)\r\n    const [style, setStyle] = useState({})\r\n    const btn = useRef(null)\r\n    const toggleOpen = (e) => {\r\n        e.stopPropagation()\r\n        setOpen(!open)\r\n        updateLocation()\r\n    }\r\n    const handleItemClick = (e, cb) => {\r\n        e.stopPropagation()\r\n        setOpen(false)\r\n        cb()\r\n    }\r\n    const updateLocation = () => {\r\n        if (btn.current) {\r\n            let box = btn.current.getBoundingClientRect()\r\n            setStyle({ top: box.top + 33, left: box.left })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        function handleScroll() {\r\n            updateLocation()\r\n        }\r\n        function handleClickOut() {\r\n            setOpen(false)\r\n        }\r\n        updateLocation()\r\n        window.addEventListener('scroll', handleScroll, true);\r\n        window.addEventListener('click', handleClickOut);\r\n        return function () {\r\n            window.removeEventListener('scroll', handleScroll, true)\r\n            window.removeEventListener('click', handleClickOut)\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"dropdown-button\">\r\n            <button ref={btn} onClick={toggleOpen}>{label} <MatIcon name=\"menu_open\" extra={\"ml-1\"} /></button>\r\n            {open && <ul className=\"box-shadow p-0\" style={style}>\r\n                {actions.map(a => <li key={a.label} onClick={(e) => handleItemClick(e, a.clickHandler)}>{a.label}</li>)}\r\n            </ul>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DropdownButton;","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction Select({ label, name, query, options = [], ...props }) {\r\n  let { loading, data, error } = useQuery(query ? query.name : USERS_GET_ME, {\r\n    skip: query === null,\r\n  });\r\n  if (loading || error) {\r\n    return null;\r\n  }\r\n\r\n  if (data && query) {\r\n    options = data[query.data];\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-wrap\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...props}>\r\n        <option value=\"\">---Select---</option>\r\n        {options.map((o) => (\r\n          <option key={o.id} value={o.id}>\r\n            {o.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport DropdownButton from \"./DropdownButton\";\r\nimport Input from \"./Input\";\r\nimport Select from \"./Select\";\r\n\r\nfunction FilterExport({\r\n  fields,\r\n  handleChange,\r\n  handleSubmit,\r\n  filter,\r\n  exportActions\r\n}) {\r\n\r\n  return (\r\n    <div className=\"filter-export  w-100\">\r\n      <form className=\"form d-flex align-bottom\" onSubmit={handleSubmit}>\r\n        <div className=\"inline-fields\">\r\n          {fields.map((f) => {\r\n            return f.type && f.type === \"select\" ? (\r\n              <Select key={f.name} {...f} onChange={handleChange} />\r\n            ) : (\r\n                <Input key={f.name} {...f} onChange={handleChange} />\r\n              );\r\n          })}\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <button name=\"filter\">Filter</button>\r\n          {/* <button\r\n            className=\"ml-1\"\r\n            name=\"export\"\r\n            type=\"button\"\r\n            onClick={handleExport}\r\n          >\r\n            Export\r\n          </button> */}\r\n          <DropdownButton actions={exportActions} label=\"Export\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterExport;\r\n","import React, { useState } from \"react\";\r\nimport { GET_ENTITIES } from \"../../helpers/GraphQL\";\r\nimport FilterExport from \"../../components/forms/FilterExport\";\r\nimport { Dates } from \"../../helpers/Dates\";\r\n\r\nfunction FilterForm({ handleSubmit, exportActions, filter = {} }) {\r\n  const [formData, setFormData] = useState(filter);\r\n  const searchFields = [\r\n    {\r\n      name: \"entity\",\r\n      label: \"Entity\",\r\n      type: \"select\",\r\n      query: { name: GET_ENTITIES, data: \"entities\" },\r\n      defaultValue: filter[\"entity\"],\r\n    },\r\n    {\r\n      name: \"entryType\",\r\n      label: \"Type\",\r\n      type: \"select\",\r\n      options: [{ id: 0, name: \"Revenue\" }, { id: 1, name: \"Expense\" }],\r\n      defaultValue: filter[\"entryType\"],\r\n    },\r\n    {\r\n      name: \"dateFrom\",\r\n      label: \"From\",\r\n      type: \"date\",\r\n      defaultValue: filter[\"dateFrom\"] || Dates.fmt(Date.now()),\r\n    },\r\n    {\r\n      name: \"dateTo\",\r\n      label: \"To\",\r\n      type: \"date\",\r\n      defaultValue: filter[\"dateTo\"] || Dates.fmt(Date.now()),\r\n    },\r\n  ];\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value || null });\r\n  }\r\n  return (\r\n    <FilterExport\r\n      handleSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(formData);\r\n      }}\r\n      fields={searchFields}\r\n      handleChange={handleChange}\r\n      exportActions={exportActions}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FilterForm;\r\n","export const PAGE_SIZE = 10;\r\n\r\nexport const ENTRIES_FILTER_VARS = {\r\n  pageSize: PAGE_SIZE,\r\n  pageNo: 1,\r\n};\r\n\r\nexport const ENTRIES_FILTER_VARS_NO_PAGES = {\r\n  pageSize: 10000,\r\n  pageNo: 1,\r\n};\r\n","\r\nimport { useLazyQuery } from '@apollo/react-hooks';\r\nimport React, { useEffect } from 'react';\r\nimport { ENTRIES_FILTER_VARS_NO_PAGES } from '../../constants';\r\nimport { GET_ENTRIES } from '../../helpers/GraphQL';\r\nimport Numbers from '../../helpers/Numbers';\r\n\r\nfunction EntrySummary({ filter, newEntry }) {\r\n    const [getEntries, { loading, data, error, refetch }] = useLazyQuery(GET_ENTRIES, {\r\n        variables: { ...ENTRIES_FILTER_VARS_NO_PAGES, ...filter },\r\n    });\r\n    useEffect(() => {\r\n        const abortCtrl = new AbortController();\r\n        getEntries();\r\n\r\n        return function cleanup() {\r\n            abortCtrl.abort();\r\n        };\r\n    }, [filter]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"New Entry: \", newEntry)\r\n        const abortCtrl = new AbortController();\r\n        if (refetch) refetch();\r\n\r\n        return function cleanup() {\r\n            abortCtrl.abort();\r\n        };\r\n    }, [newEntry]);\r\n\r\n    if (loading || loading) return <p>Loading...</p>;\r\n    if (error || error) return <p>Error :(</p>;\r\n\r\n    const revenues = data ? data.entries.filter(r => r.entryType === 0) : []\r\n    const expenses = data ? data.entries.filter(r => r.entryType === 1) : []\r\n    const totalRevenue = revenues.reduce((prev, o) => prev + o.amount, 0)\r\n    const totalExpenses = expenses.reduce((prev, o) => prev + o.amount, 0)\r\n    const balance = totalRevenue - totalExpenses\r\n\r\n    return <div className=\"summary\">\r\n        <h5>Summary</h5>\r\n        <div><div>Revenue: <br /><i><small>{revenues.length} record(s)</small></i></div> <span>{Numbers.fmt(totalRevenue)}</span></div>\r\n        <div><div>Expense:<br /><i><small>{expenses.length} record(s)</small></i> </div><span>{Numbers.fmt(totalExpenses)}</span></div>\r\n        <hr />\r\n        <div>Balance: <span>{Numbers.fmt(balance)}</span></div>\r\n    </div>\r\n}\r\n\r\nexport default EntrySummary;","import React from \"react\";\r\nimport MatIcon from \"../icons/MatIcon\";\r\nimport ReactDom from \"react-dom\"\r\n\r\n\r\nfunction Modal({ onClose, title, children, posx, posy, ...props }) {\r\n  const showHideClassName = \"modal display-block\";\r\n  return ReactDom.createPortal(\r\n    <div className={showHideClassName} {...props}>\r\n      <div className=\"modal-main\">\r\n        <div className=\"modal-header\">\r\n          {title ? <h5 className=\"modal-title\">{title}</h5> : <span></span>}\r\n          <div className=\"btn-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-no-bg text-warning m-1 close-button\"\r\n              onClick={onClose}\r\n            >\r\n              <MatIcon name=\"close\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-content\">{children}</div>\r\n      </div>\r\n    </div>, document.getElementById(\"portal\")\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { Route, NavLink } from \"react-router-dom\";\r\n\r\nimport Table from \"../components/tables/Table\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport { GET_ENTRIES } from \"../helpers/GraphQL\";\r\nimport NewEntryPage from \"./entries/NewEntryPage\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport Pagination from \"../components/tables/Pagination\";\r\nimport { useEffect } from \"react\";\r\nimport FilterForm from \"./entries/FilterForm\";\r\nimport { BASE_URL } from \"../conf\";\r\nimport Numbers from \"../helpers/Numbers\";\r\nimport EntrySummary from \"./entries/EntrySummary\";\r\nimport Modal from \"../components/modals/Modal\";\r\nconst PAGE_SIZE = 10;\r\nfunction EntriesPage() {\r\n  useProfile();\r\n  const [pageNo, setPageNo] = useState(1);\r\n  const [filter, setFilter] = useState(new Map());\r\n  const [getEntries, { data, refetch }] = useLazyQuery(GET_ENTRIES, {\r\n    variables: { pageSize: PAGE_SIZE, pageNo: pageNo, ...filter },\r\n  });\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [newEntry, setNewEntry] = useState(0)\r\n\r\n\r\n  useEffect(() => {\r\n    const abortCtrl = new AbortController();\r\n    getEntries();\r\n\r\n    return function cleanup() {\r\n      abortCtrl.abort();\r\n    };\r\n  }, [pageNo, filter]);\r\n\r\n  const onNewEntry = (id) => {\r\n    refetch()\r\n    setNewEntry(id)\r\n  }\r\n\r\n  function handleSubmit(formData) {\r\n    let params = new Map();\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value) {\r\n        params[key] = value;\r\n      }\r\n    }\r\n    setFilter(params);\r\n    setPageNo(1);\r\n  }\r\n\r\n  function handleExport(formData) {\r\n    let params = new Map();\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value) {\r\n        params[key] = value;\r\n      }\r\n    }\r\n    let q = Object.keys(params)\r\n      .map((key) => key + \"=\" + params[key])\r\n      .join(\"&\");\r\n    fetch(`${BASE_URL}/export-entries?${q}`)\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        var url = window.URL.createObjectURL(blob);\r\n        var a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = `Export_${Date.now()}.xlsx`;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        a.remove();\r\n      });\r\n  }\r\n\r\n  function handleExportAggregated(formData) {\r\n    let params = new Map();\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value) {\r\n        params[key] = value;\r\n      }\r\n    }\r\n    let q = Object.keys(params)\r\n      .map((key) => key + \"=\" + params[key])\r\n      .join(\"&\");\r\n    fetch(`${BASE_URL}/export-entries-aggregated?${q}`)\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        var url = window.URL.createObjectURL(blob);\r\n        var a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = `Export_Aggregated${Date.now()}.xlsx`;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        a.remove();\r\n      });\r\n  }\r\n\r\n  function handlePageChange(newPageNo) {\r\n    setPageNo(newPageNo);\r\n  }\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"entity_name\", label: \"Entity\" },\r\n    { name: \"amount\", label: \"Amount\" },\r\n    { name: \"entryType\", label: \"Entry Type\" },\r\n    { name: \"createdAt\", label: \"Created\" },\r\n  ];\r\n  const fmtDate = (strDate) => {\r\n    let parsed = Date.parse(strDate);\r\n    return new Date(parsed).toLocaleDateString(\"en-GB\");\r\n  };\r\n  const records = data\r\n    ? data.entries.map((r) => ({\r\n      ...r,\r\n      entity_name: r.entity.name,\r\n      createdAt: fmtDate(r.createdAt),\r\n      updatedAt: fmtDate(r.updatedAt),\r\n      amount: Numbers.fmt(r.amount),\r\n      entryType: r.entryType === 0 ? \"Revenue\" : \"Expense\"\r\n    }))\r\n    : [];\r\n\r\n  const onClose = () => setIsOpen(false)\r\n  const exportActions = [{\r\n    label: \"Export Records\",\r\n    clickHandler: () => handleExport(filter)\r\n  }, {\r\n    label: \"Export Aggregated\",\r\n    clickHandler: () => handleExportAggregated(filter)\r\n  }]\r\n  return (\r\n    <>\r\n      <Route path=\"/entries\" exact>\r\n        <div className=\"toolbar\">\r\n          <h5>List of entries</h5>\r\n          <button onClick={() => setIsOpen(true)} className=\"btn\">\r\n            <MatIcon name=\"add\" text=\"New Entry\" />\r\n          </button>\r\n        </div>\r\n        <hr />\r\n        <div className=\"toolbar\">\r\n          {data && (\r\n            <FilterForm\r\n              handleSubmit={handleSubmit}\r\n              filter={filter}\r\n              // handleExport={handleExport}\r\n              exportActions={exportActions}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"d-flex desktop\">\r\n          <div className=\"d-flex-main\">\r\n            <Table columns={columns} data={records} />\r\n            {data && (\r\n              <Pagination\r\n                pageNo={pageNo}\r\n                onPageChanged={handlePageChange}\r\n                lastPage={data.entries.length < PAGE_SIZE}\r\n              />\r\n            )}\r\n          </div>\r\n          <EntrySummary filter={filter} newEntry={newEntry} />\r\n        </div>\r\n      </Route>\r\n      {isOpen && <Modal onClose={onClose} title={\"Register New Entry\"}>\r\n        <NewEntryPage onSuccess={onNewEntry} />\r\n      </Modal>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EntriesPage;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { REGISTER_USER, USERS, USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport Input from \"../../components/forms/Input\";\r\n\r\nfunction NewUserPage() {\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerUser, { loading }] = useMutation(REGISTER_USER);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    registerUser({\r\n      variables: {\r\n        ...formData,\r\n      },\r\n      refetchQueries: [{ query: USERS }, { query: USERS_GET_ME }],\r\n    }).then(\r\n      () => setRedirect(\"/users\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/users\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Register New User</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form form-medium\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            required\r\n          />\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewUserPage;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect, withRouter } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport {\r\n  REGISTER_USER,\r\n  USERS,\r\n  USERS_GET_ME,\r\n  GET_USER,\r\n} from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport Input from \"../../components/forms/Input\";\r\n\r\nfunction UpdateUserPage({ match }) {\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerUser, {}] = useMutation(REGISTER_USER);\r\n  const { loading, error, data } = useQuery(GET_USER, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  let user = data.user;\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let prev = new Map();\r\n    Object.keys(user).forEach((key) => {\r\n      if (!formData[key]) {\r\n        prev[key] = user[key];\r\n      }\r\n    });\r\n\r\n    registerUser({\r\n      variables: { ...formData, ...prev, id: user.id },\r\n      refetchQueries: [{ query: USERS }, { query: USERS_GET_ME }],\r\n    }).then(\r\n      () => setRedirect(\"/users\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/users\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Update User</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form form-medium\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.username}\r\n            readOnly={true}\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            required\r\n            defaultValue={user.email}\r\n          />\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.firstName}\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.lastName}\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(UpdateUserPage);\r\n","import React from \"react\";\r\nimport { USERS } from \"../helpers/UsersGraphQL\";\r\nimport NewUserPage from \"./users/NewUserPage\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Route, NavLink, useHistory } from \"react-router-dom\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport Table from \"../components/tables/Table\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport UpdateUserPage from \"./users/UpdateUserPage\";\r\n\r\nfunction UserManagementPage(props) {\r\n  useProfile();\r\n  const { loading, error, data } = useQuery(USERS);\r\n  if (loading) return null;\r\n  if (error) {\r\n    return <p>Error (:</p>;\r\n  }\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"username\", label: \"Client Name\" },\r\n    { name: \"email\", label: \"Email\" },\r\n    { name: \"name\", label: \"Full Name\" },\r\n    {\r\n      name: \"actions\",\r\n      label: \"\",\r\n      render: (row) => (\r\n        <div>\r\n          <a href={`/users/update/${row.id}`} className=\"d-flex align-left\">\r\n            <MatIcon name=\"edit\" text=\"Edit\" />\r\n          </a>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const records = data.users.map((r) => ({\r\n    ...r,\r\n    name: r.firstName ? `${r.firstName} ${r.lastName}` : null,\r\n  }));\r\n  return (\r\n    <>\r\n      <Route path=\"/users\" exact>\r\n        <div className=\"toolbar\">\r\n          <h5>List of users</h5>\r\n          <NavLink\r\n            className=\"d-flex btn btn-light has-left-icon\"\r\n            to=\"/users/new-user\"\r\n          >\r\n            <MatIcon name=\"add\" text=\"New User\" />\r\n          </NavLink>\r\n        </div>\r\n        <Table columns={columns} data={records} />\r\n      </Route>\r\n      <Route path=\"/users/new-user\" exact>\r\n        <NewUserPage />\r\n      </Route>\r\n      <Route path=\"/users/update/:id\" exact>\r\n        <UpdateUserPage />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserManagementPage;\r\n","const ACCESS_TOKEN = \"AccessToken\";\r\n\r\nconst AuthHelper = {\r\n  saveToken: (token, cb) => {\r\n    sessionStorage.setItem(ACCESS_TOKEN, token);\r\n    cb(true);\r\n  },\r\n  getToken: () => sessionStorage.getItem(ACCESS_TOKEN),\r\n  removeToken: () => sessionStorage.removeItem(ACCESS_TOKEN),\r\n};\r\n\r\nexport default AuthHelper;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../components/forms/Input\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport AuthHelper from \"../helpers/AuthHelper\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_TOKEN } from \"../helpers/UsersGraphQL\";\r\nimport { APP_NAME } from \"../conf\";\r\n\r\nfunction LoginPage(props) {\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [login, { client }] = useMutation(USERS_GET_TOKEN);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    client.clearStore();\r\n    login({\r\n      variables: {\r\n        ...formData,\r\n      },\r\n    }).then(\r\n      (res) => {\r\n        if (res.data) {\r\n          let { token } = res.data.tokenAuth;\r\n          AuthHelper.saveToken(token, () => {\r\n            setRedirect(\"/\");\r\n          });\r\n        }\r\n      },\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n      <>\r\n        <div className=\"login-page box-shadow\">\r\n          <div className=\"login-header d-flex mb-1 p-1\">\r\n            <h3>{APP_NAME}</h3>\r\n            <img\r\n              src={\r\n                process.env.PUBLIC_URL + \"/static/images/logo.png\"\r\n              }\r\n              alt=\"Logo\"\r\n            />\r\n          </div>\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <div className=\"mt-1\">\r\n              <Input\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <Input\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-footer\">\r\n              <button>\r\n                <span className=\"mr-1\">Login</span>\r\n                <MatIcon name=\"login\" />\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n","import { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport Pagination from \"../components/tables/Pagination\";\r\nimport Table from \"../components/tables/Table\";\r\nimport { GET_ENTITIES } from \"../helpers/GraphQL\";\r\nconst PAGE_SIZE = 10;\r\nfunction EntitiesPage() {\r\n  useProfile();\r\n  const [pageNo, setPageNo] = useState(1);\r\n  const [filter, setFilter] = useState(new Map());\r\n  const [getEntities, { data, refetch }] = useLazyQuery(GET_ENTITIES, {\r\n    variables: { pageSize: PAGE_SIZE, pageNo: pageNo, ...filter },\r\n  });\r\n  useEffect(() => {\r\n    const abortCtrl = new AbortController();\r\n    getEntities()\r\n\r\n    return function cleanup() {\r\n      abortCtrl.abort();\r\n    };\r\n  }, [pageNo, filter]);\r\n\r\n\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"name\", label: \"Name\" },\r\n    { name: \"isMember\", label: \"Is Member\" },\r\n    { name: \"createdAt\", label: \"Created\" },\r\n    { name: \"action\", render: (row) => <button className=\"btn ripple\">View</button> },\r\n  ];\r\n  const fmtDate = (strDate) => {\r\n    let parsed = Date.parse(strDate);\r\n    return new Date(parsed).toLocaleDateString(\"en-GB\");\r\n  };\r\n  const records = data\r\n    ? data.entities.map((r) => ({\r\n      ...r,\r\n      createdAt: fmtDate(r.createdAt),\r\n      isMember: r.isMember ? \"Yes\" : \"No\"\r\n    }))\r\n    : [];\r\n  function handlePageChange(newPageNo) {\r\n    setPageNo(newPageNo);\r\n  }\r\n  return <>\r\n    <div className=\"toolbar\">\r\n      <h5>List of members</h5>\r\n      <button className=\"btn\">\r\n        <MatIcon name=\"add\" text=\"New Member\" />\r\n      </button>\r\n    </div>\r\n    <hr />\r\n    <div className=\"toolbar\">\r\n\r\n    </div>\r\n    <div className=\"d-flex desktop\">\r\n      <div className=\"d-flex-main\">\r\n        <Table columns={columns} data={records} />\r\n        {data && (\r\n          <Pagination\r\n            pageNo={pageNo}\r\n            onPageChanged={handlePageChange}\r\n            lastPage={data.entities.length < PAGE_SIZE}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default EntitiesPage;\r\n","import React from \"react\";\r\nimport NavBar from \"./components/nav/NavBar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport EntriesPage from \"./pages/EntriesPage\";\r\nimport UserManagementPage from \"./pages/UserManagementPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport AuthHelper from \"./helpers/AuthHelper\";\r\nimport { BASE_URL } from \"./conf\";\r\nimport EntitiesPage from \"./pages/EntitiesPage\";\r\nconst getToken = () => {\r\n  const token = AuthHelper.getToken();\r\n  return token ? `JWT ${token}` : \"\";\r\n};\r\nconst requestMiddleware = (operation) => {\r\n  operation.setContext({\r\n    headers: {\r\n      Authorization: getToken(),\r\n    },\r\n  });\r\n};\r\nconst client = new ApolloClient({\r\n  uri: `${BASE_URL}/graphql`,\r\n  request: requestMiddleware,\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <ApolloProvider client={client}>\r\n        <Switch>\r\n          <Route path=\"/login\" exact>\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <NavBar />\r\n            <section className=\"page-content container\">\r\n              <div className=\"content\">\r\n                <Switch>\r\n                  <Route path=\"/\" exact>\r\n                    <HomePage />\r\n                  </Route>\r\n                  <Route path=\"/entries\">\r\n                    <EntriesPage />\r\n                  </Route>\r\n                  <Route path=\"/entities\">\r\n                    <EntitiesPage />\r\n                  </Route>\r\n                  <Route path=\"/users\">\r\n                    <UserManagementPage />\r\n                  </Route>\r\n                </Switch>\r\n              </div>\r\n            </section>\r\n          </Route>\r\n        </Switch>\r\n      </ApolloProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}