{"version":3,"sources":["helpers/UsersGraphQL.js","components/nav/UserProfile.js","components/hooks/useProfile.js","conf.js","components/nav/NavBar.js","components/icons/MatIcon.js","components/forms/DropdownButton.js","helpers/ReportsGraphQL.js","helpers/Numbers.js","components/graph/BarGraph.js","helpers/ColorsHelper.js","pages/dashboard/RevenueByDateGraph.js","pages/dashboard/RevenueExpensesByDateGraph.js","pages/dashboard/TitheByDateGraph.js","pages/HomePage.js","components/tables/Table.js","helpers/GraphQL.js","components/forms/Input.js","constants.js","components/forms/CreatableSelect.js","helpers/Dates.js","pages/entries/NewEntryPage.js","components/tables/Pagination.js","components/forms/Select.js","components/forms/FilterExport.js","pages/entries/FilterForm.js","pages/entries/EntrySummary.js","components/modals/Modal.js","pages/EntriesPage.js","pages/users/NewUserPage.js","pages/users/UpdateUserPage.js","pages/UserManagementPage.js","helpers/AuthHelper.js","pages/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["USERS_GET_TOKEN","gql","USERS_GET_ME","USERS","REGISTER_USER","GET_USER","UserProfile","props","useQuery","loading","error","data","console","log","className","me","username","exact","to","useProfile","history","useHistory","graphQLErrors","length","message","push","CONF","DEV","baseUrl","ROOT","PROD","BASE_URL","NavBar","user","isSuperuser","MatIcon","name","extra","text","DropdownButton","label","actions","useState","open","setOpen","style","setStyle","btn","useRef","updateLocation","current","box","getBoundingClientRect","top","left","useEffect","handleScroll","handleClickOut","window","addEventListener","removeEventListener","ref","onClick","e","stopPropagation","map","a","key","cb","handleItemClick","clickHandler","REVENUE_SUMMARY","REVENUE_EXPENSES_SUMMARY","TITHE_SUMMARY","numOr0","n","isNaN","parseFloat","Numbers","fmt","num","decimals","Number","toFixed","toString","replace","sum","nums","reduce","b","dpts","Math","round","BarGraph","graphId","meta","title","type","stacked","datasets","labels","options","legend","display","screen","width","position","plugins","datalabels","hover","mode","intersect","tooltips","displayColors","callbacks","tooltipItem","datasetIndex","yLabel","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","callback","value","toLocaleString","userCallback","index","floor","Chart","document","getElementById","id","ColorsHelper","color","i","random","RevenueByDateGraph","revenueSummary","revenueList","d","date","filter","v","indexOf","cat","total","s","backgroundColor","p","x","find","r","RevenueExpensesByDateGraph","revenueExpensesSummary","list","TitheByDateGraph","titheSummary","titheList","HomePage","exportActions","Table","columns","idCol","col","row","render","GET_ENTRIES","GET_ENTITIES","CREATE_ENTRY","CREATE_ENTITY","Input","help","cls","htmlFor","ENTRIES_FILTER_VARS_NO_PAGES","pageSize","pageNo","CreatableSelect","query","onCreateOption","onChange","defaultValue","skip","selOptions","selObj","o","undefined","option","target","maxMenuHeight","Dates","timeIncl","Date","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minutes","getMinutes","getSeconds","dateStr","join","timeStr","res","NewEntryPage","onSuccess","entities","redirect","setMessage","defaultData","Map","now","formData","setFormData","useMutation","createEntry","createEntity","entityOptions","handleChange","onSubmit","preventDefault","variables","createdAt","split","awaitRefetchQueries","then","amount","entity","entryId","result","autoComplete","required","refetchQueries","min","Pagination","onPageChanged","lastPage","disabled","Select","FilterExport","fields","handleSubmit","f","FilterForm","searchFields","EntrySummary","newEntry","useLazyQuery","getEntries","refetch","abortCtrl","AbortController","abort","revenues","entries","entryType","expenses","totalRevenue","prev","totalExpenses","balance","Modal","onClose","children","posx","posy","ReactDom","createPortal","EntriesPage","setPageNo","setFilter","isOpen","setIsOpen","setNewEntry","fmtDate","strDate","parsed","parse","toLocaleDateString","records","entity_name","updatedAt","params","Object","q","keys","fetch","response","blob","url","URL","createObjectURL","createElement","href","download","body","appendChild","click","remove","handleExport","handleExportAggregated","path","newPageNo","NewUserPage","setRedirect","registerUser","withRouter","match","forEach","readOnly","email","firstName","lastName","UserManagementPage","users","AuthHelper","saveToken","token","sessionStorage","setItem","getToken","getItem","removeToken","removeItem","LoginPage","login","client","src","alt","clearStore","tokenAuth","ApolloClient","uri","request","operation","setContext","headers","Authorization","App","Boolean","location","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d3c692ea.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\r\nexport const USERS_GET_TOKEN = gql`\r\n  mutation getToken($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS_GET_ME = gql`\r\n  query getMe {\r\n    me {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS = gql`\r\n  query getUsers {\r\n    users {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_USER = gql`\r\n  mutation registerUser(\r\n    $id: ID\r\n    $username: String!\r\n    $email: String!\r\n    $firstName: String\r\n    $lastName: String\r\n  ) {\r\n    registerUser(\r\n      id: $id\r\n      username: $username\r\n      email: $email\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n    ) {\r\n      user {\r\n        id\r\n        username\r\n        dateJoined\r\n        firstName\r\n        lastName\r\n        lastLogin\r\n        email\r\n        isStaff\r\n        isSuperuser\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER = gql`\r\n  query getUser($id: ID!) {\r\n    user(id: $id) {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction UserProfile(props) {\r\n  let { loading, error, data } = useQuery(USERS_GET_ME);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  console.log(data);\r\n  return (\r\n    <div className=\"user-profile-nav\">\r\n      <ul>\r\n        <li>\r\n          <b>{data.me.username}</b>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/login\">\r\n            Logout\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction useProfile() {\r\n  const history = useHistory();\r\n  const { loading, error, data } = useQuery(USERS_GET_ME);\r\n  if (loading) return null;\r\n  if (error) {\r\n    if (error.graphQLErrors.length) {\r\n      let message = error.graphQLErrors[0].message;\r\n      if (\r\n        message === \"Signature has expired\" ||\r\n        message === \"You do not have permission to perform this action\"\r\n      ) {\r\n        history.push(\"/login\");\r\n      }\r\n    }\r\n    console.log(error);\r\n    return null;\r\n  }\r\n  return data;\r\n}\r\n\r\nexport default useProfile;\r\n","// Configurations:\r\n// 1. Backend endpoint depending on test vs live\r\n// 2.\r\n\r\nconst ENVIRON = process.env.NODE_ENV === \"development\" ? \"DEV\" : \"PROD\";\r\n\r\nconst CONF = {\r\n  DEV: {\r\n    baseUrl: \"http://localhost:8000/api\",\r\n    ROOT: \"http://localhost:8000\",\r\n  },\r\n  PROD: {\r\n    baseUrl: \"/api\",\r\n    ROOT: \"\",\r\n  },\r\n};\r\n\r\nexport const BASE_URL = CONF[ENVIRON].baseUrl;\r\nexport const ROOT_URL = CONF[ENVIRON].ROOT;\r\nexport const GOOGLE_API_KEY = \"AIzaSyDQ7WXCqy5-cyHTyho_XLgBDHJZe4n-nAw\";\r\nexport const APP_NAME = \"TAG MAKOKA (MSCC)\";\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport useProfile from \"../hooks/useProfile\";\r\nimport { APP_NAME } from \"../../conf\";\r\n\r\nfunction NavBar() {\r\n  const user = useProfile();\r\n  console.log(user);\r\n  return (\r\n    <header className=\"navbar container\">\r\n      <div className=\"content\">\r\n        <h3>{APP_NAME}</h3>\r\n        <div className=\"nav-links\">\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to=\"/\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/entries\">Entries</NavLink>\r\n            </li>\r\n            {user && user.me && user.me.isSuperuser && (\r\n              <li>\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n              </li>\r\n            )}\r\n          </ul>\r\n          <UserProfile />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nconst MatIcon = ({ name, extra, text }) => (\r\n  <>\r\n    <span className={`mat-icon material-icons${extra ? \" \" + extra : \"\"}`}>\r\n      {name}\r\n    </span>\r\n    {text && <span>{text}</span>}\r\n  </>\r\n);\r\nexport default MatIcon;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport MatIcon from \"../icons/MatIcon\"\r\n\r\nfunction DropdownButton({ label, actions }) {\r\n    const [open, setOpen] = useState(false)\r\n    const [style, setStyle] = useState({})\r\n    const btn = useRef(null)\r\n    const toggleOpen = (e) => {\r\n        e.stopPropagation()\r\n        setOpen(!open)\r\n        updateLocation()\r\n    }\r\n    const handleItemClick = (e, cb) => {\r\n        e.stopPropagation()\r\n        setOpen(false)\r\n        cb()\r\n    }\r\n    const updateLocation = () => {\r\n        if (btn.current) {\r\n            let box = btn.current.getBoundingClientRect()\r\n            setStyle({ top: box.top + 33, left: box.left })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        function handleScroll() {\r\n            updateLocation()\r\n        }\r\n        function handleClickOut() {\r\n            setOpen(false)\r\n        }\r\n        updateLocation()\r\n        window.addEventListener('scroll', handleScroll, true);\r\n        window.addEventListener('click', handleClickOut);\r\n        return function () {\r\n            window.removeEventListener('scroll', handleScroll, true)\r\n            window.removeEventListener('click', handleClickOut)\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"dropdown-button\">\r\n            <button ref={btn} onClick={toggleOpen}>{label} <MatIcon name=\"menu_open\" extra={\"ml-1\"} /></button>\r\n            {open && <ul className=\"box-shadow p-0\" style={style}>\r\n                {actions.map(a => <li key={a.label} onClick={(e) => handleItemClick(e, a.clickHandler)}>{a.label}</li>)}\r\n            </ul>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DropdownButton;","import { gql } from \"apollo-boost\";\r\n\r\nexport const REVENUE_SUMMARY = gql`\r\n  query revenueSummary {\r\n    revenueSummary {\r\n      date\r\n      cat\r\n      total\r\n    }\r\n  }\r\n`;\r\nexport const REVENUE_EXPENSES_SUMMARY = gql`\r\n  query revenueExpensesSummary {\r\n    revenueExpensesSummary {\r\n      date\r\n      cat\r\n      total\r\n    }\r\n  }\r\n`;\r\nexport const TITHE_SUMMARY = gql`\r\n  query titheSummary {\r\n    titheSummary {\r\n      date\r\n      total\r\n    }\r\n  }\r\n`;","let numOr0 = (n) => (isNaN(n) ? 0 : parseFloat(n));\r\nconst Numbers = {\r\n  fmt: (num, decimals = 0) =>\r\n    Number(num)\r\n      .toFixed(decimals)\r\n      .toString()\r\n      .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\"),\r\n  sum: (nums) => nums.reduce((a, b) => numOr0(a) + numOr0(b), 0),\r\n  dpts: (num) => (Math.round(num * 100) / 100).toFixed(2),\r\n};\r\nexport default Numbers;\r\n","import React from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport { useEffect } from \"react\";\r\nimport Numbers from \"../../helpers/Numbers\"\r\n\r\nconst BarGraph = ({\r\n  graphId,\r\n  meta,\r\n  title,\r\n  extra = null,\r\n  type = \"bar\",\r\n  stacked = false,\r\n}) => {\r\n\r\n  useEffect(() => {\r\n    const data = {\r\n      datasets: meta.data,\r\n      labels: meta.labels,\r\n    };\r\n    console.log(data);\r\n    const options = {\r\n      legend: {\r\n        display: window.screen.width > 800,\r\n        position: \"top\",\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          display: false,\r\n        },\r\n      },\r\n      hover: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n      },\r\n      tooltips: {\r\n        displayColors: true,\r\n        callbacks: {\r\n          mode: \"x\",\r\n          label: function (tooltipItem, data) {\r\n            let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            label += Numbers.fmt(tooltipItem.yLabel);\r\n            return label;\r\n          }\r\n        },\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            stacked: stacked,\r\n            gridLines: {\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            stacked: stacked,\r\n            ticks: {\r\n              beginAtZero: meta.beginAtZero || false,\r\n              callback: function (value) {\r\n                return value.toLocaleString();\r\n              },\r\n              userCallback: function (label, index, labels) {\r\n                if (Math.floor(label) === label) {\r\n                  return Numbers.fmt(label);\r\n                }\r\n              },\r\n            },\r\n            type: \"linear\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    console.log(\"Data: \", data)\r\n    new Chart(document.getElementById(graphId), {\r\n      type: type,\r\n      data: data,\r\n      options: options,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`graph-container bg-white card ${extra ? extra : \"\"}`}>\r\n      <h6 className=\"pl-1\">{title}</h6>\r\n      <div>\r\n        <canvas id={graphId} className=\"graph p-1\" style={{}}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import invert from \"invert-color\";\r\nexport const ColorsHelper = {\r\n  randomColor() {\r\n    var letters = \"0123456789ABCDEF\";\r\n    var color = \"#\";\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  },\r\n  randomColors(num) {\r\n    return [...Array(num).keys()].map(() => this.randomColor());\r\n  },\r\n  contrastColors(colors) {\r\n    return colors.map(c => invert(c));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { REVENUE_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\n\r\nfunction RevenueByDateGraph(props) {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(REVENUE_SUMMARY);\r\n  if (loading) return 'Loading ...';\r\n  if (error) return 'Error!';\r\n  console.log(data);\r\n\r\n  let placeHolder = [\r\n    { cat: \"ZAKA\", total: 0 },\r\n    { cat: \"SADAKA\", total: 0 },\r\n  ];\r\n  console.log(data.revenueSummary);\r\n\r\n  let revenueList = data.revenueSummary\r\n    .map((d) => {\r\n      return d.date;\r\n    })\r\n    .filter((v, i, a) => a.indexOf(v) === i);\r\n  let res = placeHolder.map((s) => {\r\n    return {\r\n      label: s.cat,\r\n      backgroundColor: ColorsHelper.randomColor(),\r\n      data: revenueList.map((p) => {\r\n        let x = data.revenueSummary.find(\r\n          (d) => d.date === p && d.cat === s.cat\r\n        );\r\n        return x ? x.total : 0;\r\n      }),\r\n    };\r\n  });\r\n\r\n  const meta = {\r\n    data: res,\r\n    labels: revenueList.map((r) => r),\r\n    beginAtZero: true,\r\n  };\r\n  return (\r\n    <BarGraph\r\n      stacked={true}\r\n      meta={meta}\r\n      title=\"Revenue By Date\"\r\n      graphId=\"revenue-date-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default RevenueByDateGraph;\r\n","import React from \"react\";\r\nimport { REVENUE_EXPENSES_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\n\r\nfunction RevenueExpensesByDateGraph(props) {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(REVENUE_EXPENSES_SUMMARY);\r\n  if (loading) return 'Loading ...';\r\n  if (error) return 'Error!';\r\n  console.log(data);\r\n\r\n  let placeHolder = [\r\n    { cat: \"REVENUE\", total: 0 },\r\n    { cat: \"EXPENSES\", total: 0 },\r\n  ];\r\n  console.log(data.revenueExpensesSummary);\r\n\r\n  let list = data.revenueExpensesSummary\r\n    .map((d) => {\r\n      return d.date;\r\n    })\r\n    .filter((v, i, a) => a.indexOf(v) === i);\r\n  let res = placeHolder.map((s) => {\r\n    return {\r\n      label: s.cat,\r\n      backgroundColor: ColorsHelper.randomColor(),\r\n      data: list.map((p) => {\r\n        let x = data.revenueExpensesSummary.find(\r\n          (d) => d.date === p && d.cat === s.cat\r\n        );\r\n        return x ? x.total : 0;\r\n      }),\r\n    };\r\n  });\r\n\r\n  const meta = {\r\n    data: res,\r\n    labels: list.map((r) => r),\r\n    beginAtZero: true,\r\n  };\r\n  return (\r\n    <BarGraph\r\n      stacked={true}\r\n      meta={meta}\r\n      title=\"Revenue vs Expenses By Date\"\r\n      graphId=\"revenue-expenses-date-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default RevenueExpensesByDateGraph;\r\n","import React from \"react\";\r\nimport { REVENUE_SUMMARY, TITHE_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\n\r\nfunction TitheByDateGraph(props) {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(TITHE_SUMMARY);\r\n  if (loading) return 'Loading ...';\r\n  if (error) return 'Error!';\r\n  console.log(data);\r\n  console.log(data.titheSummary);\r\n\r\n  let titheList = data.titheSummary\r\n    .map((d) => {\r\n      return d.date;\r\n    })\r\n    .filter((v, i, a) => a.indexOf(v) === i);\r\n  let res = [{\r\n    label: 'Members',\r\n    backgroundColor: ColorsHelper.randomColor(),\r\n    data: data.titheSummary.map(d => d.total)\r\n  }];\r\n\r\n  const meta = {\r\n    data: res,\r\n    labels: titheList.map((r) => r),\r\n    beginAtZero: true,\r\n  };\r\n  console.log(meta)\r\n  return (\r\n    <BarGraph\r\n      stacked={false}\r\n      meta={meta}\r\n      title=\"Tithing Members By Date\"\r\n      graphId=\"tithe-date-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default TitheByDateGraph;\r\n","import React from \"react\";\r\nimport DropdownButton from \"../components/forms/DropdownButton\";\r\nimport RevenueByDateGraph from \"./dashboard/RevenueByDateGraph\";\r\nimport RevenueExpensesByDateGraph from \"./dashboard/RevenueExpensesByDateGraph\";\r\nimport TitheByDateGraph from \"./dashboard/TitheByDateGraph\";\r\n\r\nfunction HomePage() {\r\n  console.log(\"Home Page\")\r\n  const exportActions = [{\r\n    label: \"Export Records\",\r\n    clickHandler: () => console.log(\"Export Records\")\r\n  }, {\r\n    label: \"Export Aggregated\",\r\n    clickHandler: () => console.log(\"Export Aggregated\")\r\n  }]\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <RevenueByDateGraph />\r\n      <TitheByDateGraph />\r\n      <RevenueExpensesByDateGraph />\r\n      <div>\r\n        <DropdownButton actions={exportActions} label=\"Export\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nfunction Table({ columns, data, idCol = \"id\" }) {\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"table-scrollable\">\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col) => (\r\n              <th key={col.name}>{col.label}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row) => (\r\n            <tr key={row[idCol]}>\r\n              {columns.map((col) => (\r\n                <td key={col.name} className={col.className}>\r\n                  {col.render ? col.render(row) : row[col.name]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const GET_ENTRIES = gql`\r\n  query getEntries(\r\n    $pageNo: Int\r\n    $pageSize: Int\r\n    $entity: Int\r\n    $entryType: Int\r\n    $dateFrom: Date\r\n    $dateTo: Date\r\n  ) {\r\n    entries(\r\n      pageNo: $pageNo\r\n      pageSize: $pageSize\r\n      entity: $entity\r\n      entryType: $entryType\r\n      dateFrom: $dateFrom\r\n      dateTo: $dateTo\r\n    ) {\r\n      id\r\n      amount\r\n      entryType\r\n      createdAt\r\n      updatedAt\r\n      entity {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ENTITIES = gql`\r\n  query getEntities {\r\n    entities {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_ENTRY = gql`\r\n  mutation createEntry($entity: ID!, $amount: Float!, $entryType: Int!, $createdAt: DateTime!) {\r\n    createEntry(input: { entity: $entity, amount: $amount, entryType: $entryType, createdAt: $createdAt }) {\r\n      result {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const CREATE_ENTITY = gql`\r\n  mutation createEntity($name: String!) {\r\n    createEntity(input: { name: $name }) {\r\n      result {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nfunction Input({ label, name, help, type = \"text\", cls, ...props }) {\r\n  return (\r\n    <div className={`input-wrap ${cls || \"\"}`}>\r\n      <label htmlFor={name}>{label}</label>\r\n      {type === \"textarea\" ? (\r\n        <textarea name={name} id={name} {...props} />\r\n      ) : (\r\n          <input type={type} name={name} id={name} {...props} />\r\n        )}\r\n      {help && <span className=\"input-help\">{help}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","export const PAGE_SIZE = 10;\r\n\r\nexport const ENTRIES_FILTER_VARS = {\r\n  pageSize: PAGE_SIZE,\r\n  pageNo: 1,\r\n};\r\n\r\nexport const ENTRIES_FILTER_VARS_NO_PAGES = {\r\n  pageSize: 10000,\r\n  pageNo: 1,\r\n};\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\nimport Creatable from \"react-select/creatable\";\r\n\r\nfunction CreatableSelect({\r\n  label,\r\n  name,\r\n  query,\r\n  onCreateOption,\r\n  onChange,\r\n  options = [],\r\n  defaultValue = null,\r\n  ...props\r\n}) {\r\n  let { loading, data, error } = useQuery(query ? query.name : USERS_GET_ME, {\r\n    skip: query === null,\r\n  });\r\n  if (loading || error) {\r\n    return null;\r\n  }\r\n\r\n  if (data && query) {\r\n    options = data[query.data];\r\n  }\r\n\r\n  function handleChange(option) {\r\n    if (onChange) {\r\n      onChange({ target: { name: name, value: option.value } });\r\n    }\r\n  }\r\n  function handleCreate(value) {\r\n    if (onCreateOption) onCreateOption(name, value);\r\n  }\r\n\r\n  const selOptions = options.map((e) => {\r\n    return { value: e.id, label: e.name };\r\n  });\r\n  let selObj = selOptions && selOptions.find((o) => {\r\n    return defaultValue == o.value;\r\n  });\r\n  const value =\r\n    defaultValue !== undefined && selObj\r\n      ? {\r\n        value: defaultValue,\r\n        label: selObj.label,\r\n      }\r\n      : null;\r\n  return (\r\n    <div className=\"input-wrap\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <Creatable\r\n        options={selOptions}\r\n        {...props}\r\n        onCreateOption={handleCreate}\r\n        onChange={handleChange}\r\n        value={value}\r\n        maxMenuHeight={110}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatableSelect;\r\n","export const Dates = {\r\n  fmt: function formatDate(date, timeIncl = false) {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear(),\r\n      hour = d.getHours(),\r\n      minutes = d.getMinutes(),\r\n      seconds = d.getSeconds();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n    if (hour < 10) hour = \"0\" + hour;\r\n    if (minutes < 10) minutes = \"0\" + minutes;\r\n\r\n    let dateStr = [year, month, day].join(\"-\")\r\n    let timeStr = `${hour}:${minutes < 10 ? \"0\" + minutes : minutes}:00.00`\r\n    let res = timeIncl ? dateStr + \"T\" + timeStr : dateStr;\r\n    return res\r\n  },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../../components/forms/Input\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  CREATE_ENTITY,\r\n  CREATE_ENTRY,\r\n  GET_ENTITIES,\r\n  GET_ENTRIES,\r\n} from \"../../helpers/GraphQL\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { ENTRIES_FILTER_VARS, ENTRIES_FILTER_VARS_NO_PAGES } from \"../../constants\";\r\nimport CreatableSelect from \"../../components/forms/CreatableSelect\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { Dates } from \"../../helpers/Dates\";\r\n\r\nfunction NewEntryPage({ filter, onSuccess }) {\r\n  useProfile()\r\n  const entryTypes = [{ id: 0, name: \"Revenue\" }, { id: 1, name: \"Expense\" }]\r\n  let entities = useQuery(GET_ENTITIES);\r\n  const [redirect] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n  const defaultData = new Map()\r\n  defaultData['entryType'] = 0\r\n  defaultData['createdAt'] = Dates.fmt(Date.now(), true)\r\n  const [formData, setFormData] = useState(defaultData);\r\n  const [createEntry, { loading }] = useMutation(CREATE_ENTRY);\r\n  const [createEntity, { }] = useMutation(CREATE_ENTITY);\r\n  const entityOptions = entities.data ? entities.data.entities : [];\r\n\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (formData['entity'] && formData['amount']) {\r\n      createEntry({\r\n        variables: {\r\n          ...formData, createdAt: formData['createdAt'].split(\" \")[0]\r\n        },\r\n        // refetchQueries: () => [\r\n        //   { query: GET_ENTRIES, variables: { ...ENTRIES_FILTER_VARS, filter } },\r\n        //   { query: GET_ENTRIES, variables: { ...ENTRIES_FILTER_VARS_NO_PAGES, ...filter } },\r\n        // ],\r\n        awaitRefetchQueries: true,\r\n      }).then(\r\n        (res) => {\r\n          // setRedirect(\"/entries/new-entry?abc\");\r\n          // window.location.reload();\r\n          console.log(res)\r\n          setFormData({ ...formData, amount: \"\", entity: null })\r\n          let entryId = res.data.createEntry.result.id\r\n          setMessage({ error: false, text: `Successfully recorded an entry: ${entryId}` })\r\n          onSuccess(entryId)\r\n        },\r\n        (res) => {\r\n          console.log(\"Error: \", res)\r\n          setMessage({ error: true, text: \"Form submit failed!\" });\r\n        }\r\n      );\r\n    } else {\r\n      setMessage({ error: true, text: \"Fill in amount & entity\" })\r\n    }\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  function onCreateOption(name, value) {\r\n    createEntity({\r\n      variables: {\r\n        name: value,\r\n      },\r\n      refetchQueries: () => [{ query: GET_ENTITIES }],\r\n      awaitRefetchQueries: true,\r\n    }).then(\r\n      (res) => {\r\n        let id = res.data.createEntity.result.id;\r\n        setFormData({ ...formData, [name]: id });\r\n      },\r\n      (res) => setMessage({ error: true, text: \"Error creating entity\" })\r\n    );\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n      <div>\r\n        {loading && <p>Sending ....</p>}\r\n\r\n        <form className=\"form\" onSubmit={handleSubmit} autoComplete={\"off\"}>\r\n          <div>\r\n            <Input\r\n              name=\"createdAt\"\r\n              label=\"Record Date\"\r\n              type=\"datetime-local\"\r\n              onChange={handleChange}\r\n              required\r\n              defaultValue={Dates.fmt(Date.now(), true)}\r\n            />\r\n            <CreatableSelect\r\n              name=\"entryType\"\r\n              label=\"Type\"\r\n              options={entryTypes}\r\n              onChange={handleChange}\r\n              defaultValue={formData[\"entryType\"] || 0}\r\n              required\r\n            />\r\n            <CreatableSelect\r\n              name=\"entity\"\r\n              label=\"Entity\"\r\n              options={entityOptions}\r\n              onChange={handleChange}\r\n              onCreateOption={onCreateOption}\r\n              defaultValue={formData[\"entity\"]}\r\n              required\r\n            />\r\n\r\n            <Input\r\n              name=\"amount\"\r\n              label=\"Amount\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              required\r\n              value={formData['amount']}\r\n              min={100}\r\n            />\r\n          </div>\r\n          <div className=\"form-footer\">\r\n            <button>Submit</button>\r\n          </div>\r\n        </form>\r\n        {message && <small className={`p-1 message ${message.error ? \"fail\" : \"success\"}`}>{message.text}</small>}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default NewEntryPage;\r\n","import React from \"react\";\r\nimport MatIcon from \"../icons/MatIcon\";\r\n\r\nfunction Pagination({ pageNo, onPageChanged, lastPage }) {\r\n  const handlePrev = () => {\r\n    let newPage = pageNo > 1 ? pageNo - 1 : 1;\r\n    if (onPageChanged) {\r\n      onPageChanged(newPage);\r\n    }\r\n  };\r\n  const handleNext = () => {\r\n    let newPage = pageNo + 1;\r\n    if (onPageChanged) {\r\n      onPageChanged(newPage);\r\n    }\r\n  };\r\n  return (\r\n    <ul className=\"pagination\">\r\n      <li className=\"btn-wrap\">\r\n        <button onClick={handlePrev} disabled={pageNo <= 1}>\r\n          <MatIcon name=\"keyboard_arrow_left\" /> Previous\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <span>Page {pageNo}</span>\r\n      </li>\r\n      <li className=\"btn-wrap\">\r\n        <button onClick={handleNext} disabled={lastPage}>\r\n          Next <MatIcon name=\"keyboard_arrow_right\" />\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction Select({ label, name, query, options = [], ...props }) {\r\n  let { loading, data, error } = useQuery(query ? query.name : USERS_GET_ME, {\r\n    skip: query === null,\r\n  });\r\n  if (loading || error) {\r\n    return null;\r\n  }\r\n\r\n  if (data && query) {\r\n    options = data[query.data];\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-wrap\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...props}>\r\n        <option value=\"\">---Select---</option>\r\n        {options.map((o) => (\r\n          <option key={o.id} value={o.id}>\r\n            {o.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport DropdownButton from \"./DropdownButton\";\r\nimport Input from \"./Input\";\r\nimport Select from \"./Select\";\r\n\r\nfunction FilterExport({\r\n  fields,\r\n  handleChange,\r\n  handleSubmit,\r\n  filter,\r\n  exportActions\r\n}) {\r\n\r\n  return (\r\n    <div className=\"filter-export  w-100\">\r\n      <form className=\"form d-flex align-bottom\" onSubmit={handleSubmit}>\r\n        <div className=\"inline-fields\">\r\n          {fields.map((f) => {\r\n            return f.type && f.type === \"select\" ? (\r\n              <Select key={f.name} {...f} onChange={handleChange} />\r\n            ) : (\r\n                <Input key={f.name} {...f} onChange={handleChange} />\r\n              );\r\n          })}\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <button name=\"filter\">Filter</button>\r\n          {/* <button\r\n            className=\"ml-1\"\r\n            name=\"export\"\r\n            type=\"button\"\r\n            onClick={handleExport}\r\n          >\r\n            Export\r\n          </button> */}\r\n          <DropdownButton actions={exportActions} label=\"Export\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterExport;\r\n","import React, { useState } from \"react\";\r\nimport { GET_ENTITIES } from \"../../helpers/GraphQL\";\r\nimport FilterExport from \"../../components/forms/FilterExport\";\r\nimport { Dates } from \"../../helpers/Dates\";\r\n\r\nfunction FilterForm({ handleSubmit, exportActions, filter = {} }) {\r\n  const [formData, setFormData] = useState(filter);\r\n  const searchFields = [\r\n    {\r\n      name: \"entity\",\r\n      label: \"Entity\",\r\n      type: \"select\",\r\n      query: { name: GET_ENTITIES, data: \"entities\" },\r\n      defaultValue: filter[\"entity\"],\r\n    },\r\n    {\r\n      name: \"entryType\",\r\n      label: \"Type\",\r\n      type: \"select\",\r\n      options: [{ id: 0, name: \"Revenue\" }, { id: 1, name: \"Expense\" }],\r\n      defaultValue: filter[\"entryType\"],\r\n    },\r\n    {\r\n      name: \"dateFrom\",\r\n      label: \"From\",\r\n      type: \"date\",\r\n      defaultValue: filter[\"dateFrom\"] || Dates.fmt(Date.now()),\r\n    },\r\n    {\r\n      name: \"dateTo\",\r\n      label: \"To\",\r\n      type: \"date\",\r\n      defaultValue: filter[\"dateTo\"] || Dates.fmt(Date.now()),\r\n    },\r\n  ];\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value || null });\r\n  }\r\n  return (\r\n    <FilterExport\r\n      handleSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(formData);\r\n      }}\r\n      fields={searchFields}\r\n      handleChange={handleChange}\r\n      exportActions={exportActions}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FilterForm;\r\n","\r\nimport { useLazyQuery } from '@apollo/react-hooks';\r\nimport React, { useEffect } from 'react';\r\nimport { ENTRIES_FILTER_VARS_NO_PAGES } from '../../constants';\r\nimport { GET_ENTRIES } from '../../helpers/GraphQL';\r\nimport Numbers from '../../helpers/Numbers';\r\n\r\nfunction EntrySummary({ filter, newEntry }) {\r\n    const [getEntries, { loading, data, error, refetch }] = useLazyQuery(GET_ENTRIES, {\r\n        variables: { ...ENTRIES_FILTER_VARS_NO_PAGES, ...filter },\r\n    });\r\n    useEffect(() => {\r\n        const abortCtrl = new AbortController();\r\n        getEntries();\r\n\r\n        return function cleanup() {\r\n            abortCtrl.abort();\r\n        };\r\n    }, [filter]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"New Entry: \", newEntry)\r\n        const abortCtrl = new AbortController();\r\n        if (refetch) refetch();\r\n\r\n        return function cleanup() {\r\n            abortCtrl.abort();\r\n        };\r\n    }, [newEntry]);\r\n\r\n    if (loading || loading) return <p>Loading...</p>;\r\n    if (error || error) return <p>Error :(</p>;\r\n\r\n    const revenues = data ? data.entries.filter(r => r.entryType === 0) : []\r\n    const expenses = data ? data.entries.filter(r => r.entryType === 1) : []\r\n    const totalRevenue = revenues.reduce((prev, o) => prev + o.amount, 0)\r\n    const totalExpenses = expenses.reduce((prev, o) => prev + o.amount, 0)\r\n    const balance = totalRevenue - totalExpenses\r\n\r\n    return <div className=\"summary\">\r\n        <h5>Summary</h5>\r\n        <div><div>Revenue: <br /><i><small>{revenues.length} record(s)</small></i></div> <span>{Numbers.fmt(totalRevenue)}</span></div>\r\n        <div><div>Expense:<br /><i><small>{expenses.length} record(s)</small></i> </div><span>{Numbers.fmt(totalExpenses)}</span></div>\r\n        <hr />\r\n        <div>Balance: <span>{Numbers.fmt(balance)}</span></div>\r\n    </div>\r\n}\r\n\r\nexport default EntrySummary;","import React from \"react\";\r\nimport MatIcon from \"../icons/MatIcon\";\r\nimport ReactDom from \"react-dom\"\r\n\r\n\r\nfunction Modal({ onClose, title, children, posx, posy, ...props }) {\r\n  const showHideClassName = \"modal display-block\";\r\n  return ReactDom.createPortal(\r\n    <div className={showHideClassName} {...props}>\r\n      <div className=\"modal-main\">\r\n        <div className=\"modal-header\">\r\n          {title ? <h5 className=\"modal-title\">{title}</h5> : <span></span>}\r\n          <div className=\"btn-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-no-bg text-warning m-1 close-button\"\r\n              onClick={onClose}\r\n            >\r\n              <MatIcon name=\"close\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-content\">{children}</div>\r\n      </div>\r\n    </div>, document.getElementById(\"portal\")\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { Route, NavLink } from \"react-router-dom\";\r\n\r\nimport Table from \"../components/tables/Table\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport { GET_ENTRIES } from \"../helpers/GraphQL\";\r\nimport NewEntryPage from \"./entries/NewEntryPage\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport Pagination from \"../components/tables/Pagination\";\r\nimport { useEffect } from \"react\";\r\nimport FilterForm from \"./entries/FilterForm\";\r\nimport { BASE_URL } from \"../conf\";\r\nimport Numbers from \"../helpers/Numbers\";\r\nimport EntrySummary from \"./entries/EntrySummary\";\r\nimport Modal from \"../components/modals/Modal\";\r\nconst PAGE_SIZE = 10;\r\nfunction EntriesPage() {\r\n  useProfile();\r\n  const [pageNo, setPageNo] = useState(1);\r\n  const [filter, setFilter] = useState(new Map());\r\n  const [getEntries, { data, refetch }] = useLazyQuery(GET_ENTRIES, {\r\n    variables: { pageSize: PAGE_SIZE, pageNo: pageNo, ...filter },\r\n  });\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [newEntry, setNewEntry] = useState(0)\r\n\r\n\r\n  useEffect(() => {\r\n    const abortCtrl = new AbortController();\r\n    getEntries();\r\n\r\n    return function cleanup() {\r\n      abortCtrl.abort();\r\n    };\r\n  }, [pageNo, filter]);\r\n\r\n  const onNewEntry = (id) => {\r\n    refetch()\r\n    setNewEntry(id)\r\n  }\r\n\r\n  function handleSubmit(formData) {\r\n    let params = new Map();\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value) {\r\n        params[key] = value;\r\n      }\r\n    }\r\n    setFilter(params);\r\n    setPageNo(1);\r\n  }\r\n\r\n  function handleExport(formData) {\r\n    let params = new Map();\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value) {\r\n        params[key] = value;\r\n      }\r\n    }\r\n    let q = Object.keys(params)\r\n      .map((key) => key + \"=\" + params[key])\r\n      .join(\"&\");\r\n    fetch(`${BASE_URL}/export-entries?${q}`)\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        var url = window.URL.createObjectURL(blob);\r\n        var a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = `Export_${Date.now()}.xlsx`;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        a.remove();\r\n      });\r\n  }\r\n\r\n  function handleExportAggregated(formData) {\r\n    let params = new Map();\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value) {\r\n        params[key] = value;\r\n      }\r\n    }\r\n    let q = Object.keys(params)\r\n      .map((key) => key + \"=\" + params[key])\r\n      .join(\"&\");\r\n    fetch(`${BASE_URL}/export-entries-aggregated?${q}`)\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        var url = window.URL.createObjectURL(blob);\r\n        var a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = `Export_Aggregated${Date.now()}.xlsx`;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        a.remove();\r\n      });\r\n  }\r\n\r\n  function handlePageChange(newPageNo) {\r\n    setPageNo(newPageNo);\r\n  }\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"entity_name\", label: \"Entity\" },\r\n    { name: \"amount\", label: \"Amount\" },\r\n    { name: \"entryType\", label: \"Entry Type\" },\r\n    { name: \"createdAt\", label: \"Created\" },\r\n  ];\r\n  const fmtDate = (strDate) => {\r\n    let parsed = Date.parse(strDate);\r\n    return new Date(parsed).toLocaleDateString(\"en-GB\");\r\n  };\r\n  const records = data\r\n    ? data.entries.map((r) => ({\r\n      ...r,\r\n      entity_name: r.entity.name,\r\n      createdAt: fmtDate(r.createdAt),\r\n      updatedAt: fmtDate(r.updatedAt),\r\n      amount: Numbers.fmt(r.amount),\r\n      entryType: r.entryType === 0 ? \"Revenue\" : \"Expense\"\r\n    }))\r\n    : [];\r\n\r\n  const onClose = () => setIsOpen(false)\r\n  const exportActions = [{\r\n    label: \"Export Records\",\r\n    clickHandler: () => handleExport(filter)\r\n  }, {\r\n    label: \"Export Aggregated\",\r\n    clickHandler: () => handleExportAggregated(filter)\r\n  }]\r\n  return (\r\n    <>\r\n      <Route path=\"/entries\" exact>\r\n        <div className=\"toolbar\">\r\n          <h5>List of entries</h5>\r\n          <button onClick={() => setIsOpen(true)} className=\"btn\">\r\n            <MatIcon name=\"add\" text=\"New Entry\" />\r\n          </button>\r\n        </div>\r\n        <hr />\r\n        <div className=\"toolbar\">\r\n          {data && (\r\n            <FilterForm\r\n              handleSubmit={handleSubmit}\r\n              filter={filter}\r\n              // handleExport={handleExport}\r\n              exportActions={exportActions}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"d-flex desktop\">\r\n          <div className=\"d-flex-main\">\r\n            <Table columns={columns} data={records} />\r\n            {data && (\r\n              <Pagination\r\n                pageNo={pageNo}\r\n                onPageChanged={handlePageChange}\r\n                lastPage={data.entries.length < PAGE_SIZE}\r\n              />\r\n            )}\r\n          </div>\r\n          <EntrySummary filter={filter} newEntry={newEntry} />\r\n        </div>\r\n      </Route>\r\n      {isOpen && <Modal onClose={onClose} title={\"Register New Entry\"}>\r\n        <NewEntryPage onSuccess={onNewEntry} />\r\n      </Modal>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EntriesPage;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { REGISTER_USER, USERS, USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport Input from \"../../components/forms/Input\";\r\n\r\nfunction NewUserPage() {\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerUser, { loading }] = useMutation(REGISTER_USER);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    registerUser({\r\n      variables: {\r\n        ...formData,\r\n      },\r\n      refetchQueries: [{ query: USERS }, { query: USERS_GET_ME }],\r\n    }).then(\r\n      () => setRedirect(\"/users\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/users\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Register New User</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form form-medium\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            required\r\n          />\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewUserPage;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect, withRouter } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport {\r\n  REGISTER_USER,\r\n  USERS,\r\n  USERS_GET_ME,\r\n  GET_USER,\r\n} from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport Input from \"../../components/forms/Input\";\r\n\r\nfunction UpdateUserPage({ match }) {\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerUser, {}] = useMutation(REGISTER_USER);\r\n  const { loading, error, data } = useQuery(GET_USER, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  let user = data.user;\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let prev = new Map();\r\n    Object.keys(user).forEach((key) => {\r\n      if (!formData[key]) {\r\n        prev[key] = user[key];\r\n      }\r\n    });\r\n\r\n    registerUser({\r\n      variables: { ...formData, ...prev, id: user.id },\r\n      refetchQueries: [{ query: USERS }, { query: USERS_GET_ME }],\r\n    }).then(\r\n      () => setRedirect(\"/users\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/users\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Update User</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form form-medium\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.username}\r\n            readOnly={true}\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            required\r\n            defaultValue={user.email}\r\n          />\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.firstName}\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.lastName}\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(UpdateUserPage);\r\n","import React from \"react\";\r\nimport { USERS } from \"../helpers/UsersGraphQL\";\r\nimport NewUserPage from \"./users/NewUserPage\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Route, NavLink, useHistory } from \"react-router-dom\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport Table from \"../components/tables/Table\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport UpdateUserPage from \"./users/UpdateUserPage\";\r\n\r\nfunction UserManagementPage(props) {\r\n  useProfile();\r\n  const { loading, error, data } = useQuery(USERS);\r\n  if (loading) return null;\r\n  if (error) {\r\n    return <p>Error (:</p>;\r\n  }\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"username\", label: \"Client Name\" },\r\n    { name: \"email\", label: \"Email\" },\r\n    { name: \"name\", label: \"Full Name\" },\r\n    {\r\n      name: \"actions\",\r\n      label: \"\",\r\n      render: (row) => (\r\n        <div>\r\n          <a href={`/users/update/${row.id}`} className=\"d-flex align-left\">\r\n            <MatIcon name=\"edit\" text=\"Edit\" />\r\n          </a>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const records = data.users.map((r) => ({\r\n    ...r,\r\n    name: r.firstName ? `${r.firstName} ${r.lastName}` : null,\r\n  }));\r\n  return (\r\n    <>\r\n      <Route path=\"/users\" exact>\r\n        <div className=\"toolbar\">\r\n          <h5>List of users</h5>\r\n          <NavLink\r\n            className=\"d-flex btn btn-light has-left-icon\"\r\n            to=\"/users/new-user\"\r\n          >\r\n            <MatIcon name=\"add\" text=\"New User\" />\r\n          </NavLink>\r\n        </div>\r\n        <Table columns={columns} data={records} />\r\n      </Route>\r\n      <Route path=\"/users/new-user\" exact>\r\n        <NewUserPage />\r\n      </Route>\r\n      <Route path=\"/users/update/:id\" exact>\r\n        <UpdateUserPage />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserManagementPage;\r\n","const ACCESS_TOKEN = \"AccessToken\";\r\n\r\nconst AuthHelper = {\r\n  saveToken: (token, cb) => {\r\n    sessionStorage.setItem(ACCESS_TOKEN, token);\r\n    cb(true);\r\n  },\r\n  getToken: () => sessionStorage.getItem(ACCESS_TOKEN),\r\n  removeToken: () => sessionStorage.removeItem(ACCESS_TOKEN),\r\n};\r\n\r\nexport default AuthHelper;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../components/forms/Input\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport AuthHelper from \"../helpers/AuthHelper\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_TOKEN } from \"../helpers/UsersGraphQL\";\r\nimport { APP_NAME } from \"../conf\";\r\n\r\nfunction LoginPage(props) {\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [login, { client }] = useMutation(USERS_GET_TOKEN);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    client.clearStore();\r\n    login({\r\n      variables: {\r\n        ...formData,\r\n      },\r\n    }).then(\r\n      (res) => {\r\n        if (res.data) {\r\n          let { token } = res.data.tokenAuth;\r\n          AuthHelper.saveToken(token, () => {\r\n            setRedirect(\"/\");\r\n          });\r\n        }\r\n      },\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n      <>\r\n        <div className=\"login-page box-shadow\">\r\n          <div className=\"login-header d-flex mb-1 p-1\">\r\n            <h3>{APP_NAME}</h3>\r\n            <img\r\n              src={\r\n                process.env.PUBLIC_URL + \"/static/images/logo.png\"\r\n              }\r\n              alt=\"Logo\"\r\n            />\r\n          </div>\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <div className=\"mt-1\">\r\n              <Input\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <Input\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-footer\">\r\n              <button>\r\n                <span className=\"mr-1\">Login</span>\r\n                <MatIcon name=\"login\" />\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport NavBar from \"./components/nav/NavBar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport EntriesPage from \"./pages/EntriesPage\";\r\nimport UserManagementPage from \"./pages/UserManagementPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport AuthHelper from \"./helpers/AuthHelper\";\r\nimport { BASE_URL } from \"./conf\";\r\nconst getToken = () => {\r\n  const token = AuthHelper.getToken();\r\n  return token ? `JWT ${token}` : \"\";\r\n};\r\nconst requestMiddleware = (operation) => {\r\n  operation.setContext({\r\n    headers: {\r\n      Authorization: getToken(),\r\n    },\r\n  });\r\n};\r\nconst client = new ApolloClient({\r\n  uri: `${BASE_URL}/graphql`,\r\n  request: requestMiddleware,\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <ApolloProvider client={client}>\r\n        <Switch>\r\n          <Route path=\"/login\" exact>\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <NavBar />\r\n            <section className=\"page-content container\">\r\n              <div className=\"content\">\r\n                <Switch>\r\n                  <Route path=\"/\" exact>\r\n                    <HomePage />\r\n                  </Route>\r\n                  <Route path=\"/entries\">\r\n                    <EntriesPage />\r\n                  </Route>\r\n                  <Route path=\"/users\">\r\n                    <UserManagementPage />\r\n                  </Route>\r\n                </Switch>\r\n              </div>\r\n            </section>\r\n          </Route>\r\n        </Switch>\r\n      </ApolloProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}