{"version":3,"sources":["helpers/UsersGraphQL.js","components/nav/UserProfile.js","components/hooks/useProfile.js","conf.js","components/nav/NavBar.js","helpers/ReportsGraphQL.js","helpers/Numbers.js","components/graph/BarGraph.js","helpers/ColorsHelper.js","pages/dashboard/ComplaintsByNatureGraph.js","components/graph/PieChart.js","pages/dashboard/ComplaintsByStatusGraph.js","pages/dashboard/ComplaintsByLocationGraph.js","pages/dashboard/ComplaintsKPIGraph.js","pages/HomePage.js","components/tables/Table.js","components/icons/MatIcon.js","helpers/GraphQL.js","components/forms/Input.js","constants.js","components/forms/CreatableSelect.js","pages/entries/NewEntryPage.js","components/tables/Pagination.js","components/forms/Select.js","components/forms/FilterExport.js","helpers/Dates.js","pages/entries/FilterForm.js","pages/entries/EntrySummary.js","pages/EntriesPage.js","pages/users/NewUserPage.js","pages/users/UpdateUserPage.js","pages/UserManagementPage.js","helpers/AuthHelper.js","pages/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["USERS_GET_TOKEN","gql","USERS_GET_ME","USERS","REGISTER_USER","GET_USER","UserProfile","props","useQuery","loading","error","data","console","log","className","me","username","exact","to","useProfile","history","useHistory","graphQLErrors","length","message","push","CONF","DEV","baseUrl","ROOT","PROD","BASE_URL","NavBar","user","isSuperuser","NATURE_SUMMARY","STATUS_SUMMARY","LOCATION_SUMMARY","KPI_SUMMARY","numOr0","n","isNaN","parseFloat","Numbers","fmt","num","decimals","Number","toFixed","toString","replace","sum","nums","reduce","a","b","dpts","Math","round","BarGraph","graphId","meta","title","extra","type","stacked","useEffect","datasets","labels","options","legend","display","window","screen","width","position","plugins","datalabels","hover","mode","intersect","tooltips","displayColors","callbacks","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","callback","value","toLocaleString","userCallback","label","index","floor","Chart","document","getElementById","id","style","ColorsHelper","randomColor","color","i","random","randomColors","Array","keys","map","contrastColors","colors","c","invert","ComplaintsByNatureGraph","natureSummary","natureList","d","name","filter","v","indexOf","count","s","backgroundColor","p","x","find","status","r","PieChart","onDataClick","bgColors","formatter","ctx","chart","onClick","_","els","slice","_index","myPieChart","ComplaintsByStatusGraph","statusSummary","ComplaintsByLocationGraph","locationSummary","locName","locCount","ComplaintsKPIGraph","placeHolder","kpiSummary","natureName","nat","HomePage","Table","columns","idCol","col","key","row","render","MatIcon","text","GET_ENTRIES","GET_ENTITIES","CREATE_ENTRY","CREATE_ENTITY","Input","help","cls","htmlFor","autoComplete","ENTRIES_FILTER_VARS","pageSize","pageNo","ENTRIES_FILTER_VARS_NO_PAGES","CreatableSelect","query","onCreateOption","onChange","defaultValue","skip","selOptions","e","selObj","o","undefined","option","target","maxMenuHeight","NewEntryPage","entities","useState","redirect","setMessage","defaultData","Map","formData","setFormData","useMutation","createEntry","createEntity","entityOptions","handleChange","onSubmit","preventDefault","variables","refetchQueries","awaitRefetchQueries","then","res","amount","entity","result","required","min","Pagination","onPageChanged","lastPage","disabled","Select","FilterExport","fields","handleSubmit","handleExport","f","Dates","date","Date","month","getMonth","day","getDate","year","getFullYear","join","FilterForm","searchFields","now","EntrySummary","useLazyQuery","getEntries","abortCtrl","AbortController","abort","revenues","entries","entryType","expenses","totalRevenue","prev","totalExpenses","balance","EntriesPage","setPageNo","setFilter","fmtDate","strDate","parsed","parse","toLocaleDateString","records","entity_name","createdAt","updatedAt","path","params","Object","q","fetch","response","blob","url","URL","createObjectURL","createElement","href","download","body","appendChild","click","remove","newPageNo","NewUserPage","setRedirect","registerUser","withRouter","match","forEach","readOnly","email","firstName","lastName","UserManagementPage","users","AuthHelper","saveToken","token","cb","sessionStorage","setItem","getToken","getItem","removeToken","removeItem","LoginPage","login","client","src","alt","clearStore","tokenAuth","ApolloClient","uri","request","operation","setContext","headers","Authorization","App","Boolean","location","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"yuDACO,IAAMA,EAAkBC,YAAH,KAQfC,EAAeD,YAAH,KAgBZE,EAAQF,YAAH,KAgBLG,EAAgBH,YAAH,KA8BbI,EAAWJ,YAAH,KC7CNK,MArBf,SAAqBC,GAAQ,IAAD,EACKC,YAASN,GAAlCO,EADoB,EACpBA,QAASC,EADW,EACXA,MAAOC,EADI,EACJA,KACtB,OAAIF,EAAgB,yCAChBC,EAAc,wCAClBE,QAAQC,IAAIF,GAEV,yBAAKG,UAAU,oBACb,4BACE,4BACE,2BAAIH,EAAKI,GAAGC,WAEd,4BACE,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,UAAlB,e,OCQKC,MApBf,WACE,IAAMC,EAAUC,cADI,EAEab,YAASN,GAAlCO,EAFY,EAEZA,QAASC,EAFG,EAEHA,MAAOC,EAFJ,EAEIA,KACxB,GAAIF,EAAS,OAAO,KACpB,GAAIC,EAAO,CACT,GAAIA,EAAMY,cAAcC,OAAQ,CAC9B,IAAIC,EAAUd,EAAMY,cAAc,GAAGE,QAEvB,0BAAZA,GACY,sDAAZA,GAEAJ,EAAQK,KAAK,UAIjB,OADAb,QAAQC,IAAIH,GACL,KAET,OAAOC,GChBHe,EAAO,CACXC,IAAK,CACHC,QAAS,4BACTC,KAAM,yBAERC,KAAM,CACJF,QAAS,OACTC,KAAM,KAIGE,EAAWL,EAAI,KAAUE,QACdF,EAAI,KAAUG,KCkBvBG,MA9Bf,WACE,IAAMC,EAAOd,IAEb,OADAP,QAAQC,IAAIoB,GAEV,4BAAQnB,UAAU,oBAChB,yBAAKA,UAAU,WACb,4BDQgB,qBCPhB,yBAAKA,UAAU,aACb,4BACE,4BACE,kBAAC,IAAD,CAASG,OAAK,EAACC,GAAG,KAAlB,SAIF,4BACE,kBAAC,IAAD,CAASA,GAAG,YAAZ,YAEDe,GAAQA,EAAKlB,IAAMkB,EAAKlB,GAAGmB,aAC1B,4BACE,kBAAC,IAAD,CAAShB,GAAG,UAAZ,WAIN,kBAAC,EAAD,U,moBC3BH,IAAMiB,EAAiBlC,YAAH,KAUdmC,EAAiBnC,YAAH,KASdoC,EAAmBpC,YAAH,KAShBqC,EAAcrC,YAAH,K,iBC9BpBsC,EAAS,SAACC,GAAD,OAAQC,MAAMD,GAAK,EAAIE,WAAWF,IAUhCG,EATC,CACdC,IAAK,SAACC,GAAD,IAAMC,EAAN,uDAAiB,EAAjB,OACHC,OAAOF,GACJG,QAAQF,GACRG,WACAC,QAAQ,0BAA2B,QACxCC,IAAK,SAACC,GAAD,OAAUA,EAAKC,QAAO,SAACC,EAAGC,GAAJ,OAAUhB,EAAOe,GAAKf,EAAOgB,KAAI,IAC5DC,KAAM,SAACX,GAAD,OAAUY,KAAKC,MAAY,IAANb,GAAa,KAAKG,QAAQ,KC6ExCW,EAhFE,SAAC,GAOX,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,KACAC,EAII,EAJJA,MAII,IAHJC,aAGI,MAHI,KAGJ,MAFJC,YAEI,MAFG,MAEH,MADJC,eACI,SA+DJ,OA9DAC,qBAAU,WACR,IAAMvD,EAAO,CACXwD,SAAUN,EAAKlD,KACfyD,OAAQP,EAAKO,QAEfxD,QAAQC,IAAIF,GACZ,IAAM0D,EAAU,CACdC,OAAQ,CACNC,QAASC,OAAOC,OAAOC,MAAQ,IAC/BC,SAAU,OAEZC,QAAS,CACPC,WAAY,CACVN,SAAS,IAGbO,MAAO,CACLC,KAAM,QACNC,WAAW,GAEbC,SAAU,CACRC,eAAe,EACfC,UAAW,CACTJ,KAAM,MAGVK,OAAQ,CACNC,MAAO,CACL,CACEpB,QAASA,EACTqB,UAAW,CACTf,SAAS,KAIfgB,MAAO,CACL,CACEtB,QAASA,EACTuB,MAAO,CACLC,YAAa5B,EAAK4B,cAAe,EACjCC,SAAU,SAAUC,GAClB,OAAOA,EAAMC,kBAEfC,aAAc,SAAUC,EAAOC,EAAO3B,GACpC,GAAIX,KAAKuC,MAAMF,KAAWA,EACxB,OAAOA,IAIb9B,KAAM,aAMd,IAAIiC,IAAMC,SAASC,eAAevC,GAAU,CAC1CI,KAAMA,EACNrD,KAAMA,EACN0D,QAASA,MAEV,IAGD,yBAAKvD,UAAS,wCAAmCiD,GAAgB,KAC/D,wBAAIjD,UAAU,QAAQgD,GACtB,6BACE,4BAAQsC,GAAIxC,EAAS9C,UAAU,YAAYuF,MAAO,Q,iCC9E7CC,EAAe,CAC1BC,YAD0B,WAIxB,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHY,mBAGK/C,KAAKuC,MAAsB,GAAhBvC,KAAKiD,WAEnC,OAAOF,GAETG,aAT0B,SASb9D,GAAM,IAAD,OAChB,OAAO,YAAI+D,MAAM/D,GAAKgE,QAAQC,KAAI,kBAAM,EAAKP,kBAE/CQ,eAZ0B,SAYXC,GACb,OAAOA,EAAOF,KAAI,SAAAG,GAAC,OAAIC,IAAOD,QC0CnBE,MAhDf,SAAiC5G,GAC/BY,IADsC,MAELX,YAAS2B,GAAlC1B,EAF8B,EAE9BA,QAASE,EAFqB,EAErBA,KAAMD,EAFe,EAEfA,MACvB,GAAID,EAAS,OAAO,KACpB,GAAIC,EAAO,OAAO,KAClBE,QAAQC,IAAIF,GAQZC,QAAQC,IAAIF,EAAKyG,eAEjB,IAAIC,EAAa1G,EAAKyG,cACnBN,KAAI,SAACQ,GACJ,OAAOA,EAAEC,QAEVC,QAAO,SAACC,EAAGhB,EAAGnD,GAAP,OAAaA,EAAEoE,QAAQD,KAAOhB,KAclC5C,EAAO,CACXlD,KA3BgB,CAChB,CAAE4G,KAAM,eAAgBI,MAAO,GAC/B,CAAEJ,KAAM,WAAYI,MAAO,GAC3B,CAAEJ,KAAM,YAAaI,MAAO,GAC5B,CAAEJ,KAAM,gBAAiBI,MAAO,IASZb,KAAI,SAACc,GACzB,MAAO,CACL9B,MAAO8B,EAAEL,KACTM,gBAAiBvB,EAAaC,cAC9B5F,KAAM0G,EAAWP,KAAI,SAACgB,GACpB,IAAIC,EAAIpH,EAAKyG,cAAcY,MACzB,SAACV,GAAD,OAAOA,EAAEC,OAASO,GAAKR,EAAEW,SAAWL,EAAEL,QAExC,OAAOQ,EAAIA,EAAEJ,MAAQ,SAOzBvD,OAAQiD,EAAWP,KAAI,SAACoB,GAAD,OAAOA,KAC9BzC,aAAa,GAEf,OACE,kBAAC,EAAD,CACExB,SAAS,EACTJ,KAAMA,EACNC,MAAM,4BACNF,QAAQ,+BCWCuE,EAxDE,SAAC,GAAmD,IAAjDtE,EAAgD,EAAhDA,KAAMD,EAA0C,EAA1CA,QAASE,EAAiC,EAAjCA,MAAOkD,EAA0B,EAA1BA,OAAQoB,EAAkB,EAAlBA,YA8ChD,OA7CAlE,qBAAU,WACR,IAAImE,EAAWrB,GAAUV,EAAaK,aAAa9C,EAAKlD,KAAKY,QAEzD8C,EAAU,CACZC,OAAQ,CACNK,SAAU,SAEZC,QAAS,CACPC,WAAY,CACVyD,UAAW,SAAC3C,EAAO4C,GACjB,IAAIpF,EAAM,EAMV,OALcoF,EAAIC,MAAM7H,KAAKwD,SAAS,GAAGxD,KACjCmG,KAAI,SAACnG,GACXwC,GAAOxC,MAEkB,IAARgF,EAAexC,GAAKH,QAAQ,GAAK,KAGtDwD,MAhBUF,EAAaS,eAAesB,KAmB1CI,QAAS,SAACC,EAAGC,GACX,GAAIA,GAAOA,EAAIpH,QAAU6G,EAAa,CACpC,IAAIzH,EAAOkD,EAAKlD,KAAKiI,MAAMD,EAAI,GAAGE,OAAQF,EAAI,GAAGE,OAAS,GAAG,GAC7DT,EAAYzH,MAIdA,EAAO,CACTwD,SAAU,CACR,CACExD,KAAMkD,EAAKlD,KAAKmG,KAAI,SAACQ,GAAD,OAAOA,EAAE3B,SAC7BkC,gBAAiBQ,IAGrBjE,OAAQP,EAAKlD,KAAKmG,KAAI,SAACQ,GAAD,OAAOA,EAAEC,SAG7BuB,EAAa,IAAI7C,IAAMC,SAASC,eAAevC,GAAU,CAC3DI,KAAM,MACNrD,KAAMA,EACN0D,QAASA,IAEXzD,QAAQC,IAAIiI,KACX,IAED,yBAAKhI,UAAU,qCACb,wBAAIA,UAAU,QAAQgD,GACtB,6BACE,4BAAQsC,GAAIxC,EAAS9C,UAAU,YAAYuF,MAAO,QC3B3C0C,MAvBf,WACE5H,IADiC,MAEAX,YAAS4B,GAAlC3B,EAFyB,EAEzBA,QAASE,EAFgB,EAEhBA,KAAMD,EAFU,EAEVA,MACvB,GAAID,EAAS,OAAO,KACpB,GAAIC,EAAO,OAAO,KAClBE,QAAQC,IAAIF,GACZ,IAAMkD,EAAO,CACXlD,KAAMA,EAAKqI,cAAclC,KAAI,SAACoB,GAC5B,MAAO,CACLX,KAAMW,EAAEX,KACR5B,MAAOuC,EAAEP,WAIf,OACE,kBAAC,EAAD,CACE9D,KAAMA,EACNC,MAAM,4BACNF,QAAQ,+BCICqF,MAtBf,WACE9H,IADmC,MAEFX,YAAS6B,GAAlC5B,EAF2B,EAE3BA,QAASE,EAFkB,EAElBA,KAAMD,EAFY,EAEZA,MACvB,GAAID,EAAS,OAAO,KACpB,GAAIC,EAAO,OAAO,KAClB,IAAMmD,EAAO,CACXlD,KAAMA,EAAKuI,gBAAgBpC,KAAI,SAACoB,GAC9B,MAAO,CACLX,KAAMW,EAAEiB,QACRxD,MAAOuC,EAAEkB,cAIf,OACE,kBAAC,EAAD,CACEvF,KAAMA,EACNC,MAAM,8BACNF,QAAQ,iCCqCCyF,MApDf,WACElI,IAD4B,MAEKX,YAAS8B,GAAlC7B,EAFoB,EAEpBA,QAASE,EAFW,EAEXA,KAAMD,EAFK,EAELA,MACvB,GAAID,EAAS,OAAO,KACpB,GAAIC,EAAO,OAAO,KAClBE,QAAQC,IAAIF,GACZ,IAII2I,EAAc,CAChB,CAAE/B,KAAM,SAAUI,MAAO,GACzB,CAAEJ,KAAM,UAAWI,MAAO,GAC1B,CAAEJ,KAAM,YAAaI,MAAO,GAC5B,CAAEJ,KAAM,YAAaI,MAAO,GAC5B,CAAEJ,KAAM,YAAaI,MAAO,GAC5B,CAAEJ,KAAM,gBAAiBI,MAAO,IAElC/G,QAAQC,IAAIF,EAAK4I,YAEjB,IAgBM1F,EAAO,CACXlD,KAjBeA,EAAK4I,WACnBzC,KAAI,SAACQ,GAAD,OAAOA,EAAEkC,cACbhC,QAAO,SAACC,EAAGhB,EAAGnD,GAAP,OAAaA,EAAEoE,QAAQD,KAAOhB,KACnBK,KAAI,SAAC2C,GACxB,MAAO,CACL3D,MAAO2D,EACP5B,gBAAiBvB,EAAaC,cAC9B5F,KAAM2I,EAAYxC,KAAI,SAACgB,GACrB,IAAIC,EAAIpH,EAAK4I,WAAWvB,MACtB,SAACV,GAAD,OAAOA,EAAEkC,aAAeC,GAAOnC,EAAEC,OAASO,EAAEP,QAE9C,OAAOQ,EAAIA,EAAEJ,MAAQ,SAOzBvD,OAAQkF,EAAYxC,KAAI,SAACoB,GAAD,OAAOA,EAAEX,QACjC9B,aAAa,GAGf,OACE,kBAAC,EAAD,CACExB,SAAS,EACTJ,KAAMA,EACNC,MAAM,iBACNF,QAAQ,4BCtCC8F,MAXf,WACE,OACE,yBAAK5I,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,sBCiBS6I,MA3Bf,YAAiD,IAAhCC,EAA+B,EAA/BA,QAASjJ,EAAsB,EAAtBA,KAAsB,IAAhBkJ,aAAgB,MAAR,KAAQ,EAC9C,OACE,yBAAK/I,UAAU,mBACb,2BAAOA,UAAU,oBACf,+BACE,4BACG8I,EAAQ9C,KAAI,SAACgD,GAAD,OACX,wBAAIC,IAAKD,EAAIvC,MAAOuC,EAAIhE,YAI9B,+BACGnF,EAAKmG,KAAI,SAACkD,GAAD,OACR,wBAAID,IAAKC,EAAIH,IACVD,EAAQ9C,KAAI,SAACgD,GAAD,OACX,wBAAIC,IAAKD,EAAIvC,KAAMzG,UAAWgJ,EAAIhJ,WAC/BgJ,EAAIG,OAASH,EAAIG,OAAOD,GAAOA,EAAIF,EAAIvC,kBCT3C2C,GARC,SAAC,GAAD,IAAG3C,EAAH,EAAGA,KAAMxD,EAAT,EAASA,MAAOoG,EAAhB,EAAgBA,KAAhB,OACd,oCACE,0BAAMrJ,UAAS,iCAA4BiD,EAAQ,IAAMA,EAAQ,KAC9DwD,GAEF4C,GAAQ,8BAAOA,K,gmCCJb,IAAMC,GAAcnK,YAAH,MA4BXoK,GAAepK,YAAH,MASZqK,GAAerK,YAAH,MASZsK,GAAgBtK,YAAH,M,2BChCXuK,OAdf,YAAqE,IAApD1E,EAAmD,EAAnDA,MAAOyB,EAA4C,EAA5CA,KAAMkD,EAAsC,EAAtCA,KAAsC,IAAhCzG,YAAgC,MAAzB,OAAyB,EAAjB0G,EAAiB,EAAjBA,IAAQnK,EAAS,qDAClE,OACE,yBAAKO,UAAS,qBAAgB4J,GAAO,KACnC,2BAAOC,QAASpD,GAAOzB,GACb,aAAT9B,EACC,4CAAUuD,KAAMA,EAAMnB,GAAImB,GAAUhH,IAElC,yCAAOyD,KAAMA,EAAMuD,KAAMA,EAAMnB,GAAImB,GAAUhH,EAA7C,CAAoDqK,cAAc,KAErEH,GAAQ,0BAAM3J,UAAU,cAAc2J,KCThCI,GAAsB,CACjCC,SAHuB,GAIvBC,OAAQ,GAGGC,GAA+B,CAC1CF,SAAU,IACVC,OAAQ,G,SCsDKE,OA1Df,YASI,IARFnF,EAQC,EARDA,MACAyB,EAOC,EAPDA,KACA2D,EAMC,EANDA,MACAC,EAKC,EALDA,eACAC,EAIC,EAJDA,SAIC,IAHD/G,eAGC,MAHS,GAGT,MAFDgH,oBAEC,MAFc,KAEd,EADE9K,EACF,gGAC8BC,YAAS0K,EAAQA,EAAM3D,KAAOrH,EAAc,CACzEoL,KAAgB,OAAVJ,IADFzK,EADL,EACKA,QAASE,EADd,EACcA,KAAMD,EADpB,EACoBA,MAGrB,GAAID,GAAWC,EACb,OAAO,KAGLC,GAAQuK,IACV7G,EAAU1D,EAAKuK,EAAMvK,OAYvB,IAAM4K,EAAalH,EAAQyC,KAAI,SAAC0E,GAC9B,MAAO,CAAE7F,MAAO6F,EAAEpF,GAAIN,MAAO0F,EAAEjE,SAE7BkE,EAASF,GAAcA,EAAWvD,MAAK,SAAC0D,GAC1C,OAAOL,GAAgBK,EAAE/F,SAErBA,OACagG,IAAjBN,GAA8BI,EAC1B,CACA9F,MAAO0F,EACPvF,MAAO2F,EAAO3F,OAEd,KACN,OACE,yBAAKhF,UAAU,cACb,2BAAO6J,QAASpD,GAAOzB,GACvB,kBAAC,KAAD,eACEzB,QAASkH,GACLhL,EAFN,CAGE4K,eAvBN,SAAsBxF,GAChBwF,GAAgBA,EAAe5D,EAAM5B,IAuBrCyF,SA7BN,SAAsBQ,GAChBR,GACFA,EAAS,CAAES,OAAQ,CAAEtE,KAAMA,EAAM5B,MAAOiG,EAAOjG,UA4B7CA,MAAOA,EACPmG,cAAe,SC0ERC,OApHf,YAAmC,IAAXvE,EAAU,EAAVA,OACtBrG,IACA,IACI6K,EAAWxL,YAAS6J,IAHQ,EAIb4B,mBAAS,MAArBC,EAJyB,sBAKFD,mBAAS,MALP,mBAKzBzK,EALyB,KAKhB2K,EALgB,KAM1BC,EAAc,IAAIC,IACxBD,EAAW,UAAgB,EAPK,MAQAH,mBAASG,GART,mBAQzBE,EARyB,KAQfC,EARe,OASGC,YAAYlC,IATf,mBASzBmC,EATyB,KASVhM,EATU,KASVA,QATU,EAUJ+L,YAAYjC,IAVR,mBAUzBmC,EAVyB,wBAWhC,IAAMC,EAAgBX,EAASrL,KAAOqL,EAASrL,KAAKqL,SAAW,GAiC/D,SAASY,EAAapB,GAAI,IAAD,EACCA,EAAEK,OAAlBlG,EADe,EACfA,MAAO4B,EADQ,EACRA,KACfgF,EAAY,2BAAKD,GAAN,mBAAiB/E,EAAO5B,KAiBrC,OAAOuG,EACL,kBAAC,IAAD,CAAUhL,GAAIgL,IAEZ,6BACE,yBAAKpL,UAAU,WACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAASI,GAAG,WAAWJ,UAAU,sBAC/B,kBAAC,GAAD,CAASyG,KAAK,yBAEhB,oDAGH9G,GAAW,2CAEZ,0BAAMK,UAAU,OAAO+L,SA/D7B,SAAsBrB,GACpBA,EAAEsB,iBACER,EAAQ,QAAcA,EAAQ,OAChCG,EAAY,CACVM,UAAU,eACLT,GAELU,eAAgB,iBAAM,CACpB,CAAE9B,MAAOd,GAAa2C,UAAU,2BAAMlC,IAAP,IAA4BrD,YAC3D,CAAE0D,MAAOd,GAAa2C,UAAU,2BAAM/B,IAAiCxD,MAEzEyF,qBAAqB,IACpBC,MACD,SAACC,GAGCvM,QAAQC,IAAIsM,GACZZ,EAAY,2BAAKD,GAAN,IAAgBc,OAAQ,GAAIC,OAAQ,QAC/ClB,EAAW,CAAEzL,OAAO,EAAOyJ,KAAK,mCAAD,OAAqCgD,EAAIxM,KAAK8L,YAAYa,OAAOlH,SAElG,SAAC+G,GACCvM,QAAQC,IAAI,UAAWsM,GACvBhB,EAAW,CAAEzL,OAAO,EAAMyJ,KAAM,2BAIpCgC,EAAW,CAAEzL,OAAO,EAAMyJ,KAAM,6BAqCiBS,aAAc,OAC3D,6BACE,kBAAC,GAAD,CACErD,KAAK,YACLzB,MAAM,OACNzB,QAhFO,CAAC,CAAE+B,GAAI,EAAGmB,KAAM,WAAa,CAAEnB,GAAI,EAAGmB,KAAM,YAiFnD6D,SAAUwB,EACVvB,aAAciB,EAAQ,WAAiB,EACvCiB,UAAQ,IAEV,kBAAC,GAAD,CACEhG,KAAK,SACLzB,MAAM,SACNzB,QAASsI,EACTvB,SAAUwB,EACVzB,eA5CZ,SAAwB5D,EAAM5B,GAC5B+G,EAAa,CACXK,UAAW,CACTxF,KAAM5B,GAERqH,eAAgB,iBAAM,CAAC,CAAE9B,MAAOb,MAChC4C,qBAAqB,IACpBC,MACD,SAACC,GACC,IAAI/G,EAAK+G,EAAIxM,KAAK+L,aAAaY,OAAOlH,GACtCmG,EAAY,2BAAKD,GAAN,mBAAiB/E,EAAOnB,QAErC,SAAC+G,GAAD,OAAShB,EAAW,CAAEzL,OAAO,EAAMyJ,KAAM,8BAiCjCkB,aAAciB,EAAQ,OACtBiB,UAAQ,IAGV,kBAAC,GAAD,CACEhG,KAAK,SACLzB,MAAM,SACN9B,KAAK,SACLoH,SAAUwB,EACVW,UAAQ,EACR5H,MAAO2G,EAAQ,OACfkB,IAAK,OAGT,yBAAK1M,UAAU,eACb,4CAGHU,GAAW,2BAAOV,UAAS,sBAAiBU,EAAQd,MAAQ,OAAS,YAAcc,EAAQ2I,QC3FrFsD,OAhCf,YAA0D,IAApC1C,EAAmC,EAAnCA,OAAQ2C,EAA2B,EAA3BA,cAAeC,EAAY,EAAZA,SAa3C,OACE,wBAAI7M,UAAU,cACZ,wBAAIA,UAAU,YACZ,4BAAQ2H,QAfK,WAEbiF,GACFA,EAFY3C,EAAS,EAAIA,EAAS,EAAI,IAcP6C,SAAU7C,GAAU,GAC/C,kBAAC,GAAD,CAASxD,KAAK,wBADhB,cAIF,4BACE,sCAAYwD,IAEd,wBAAIjK,UAAU,YACZ,4BAAQ2H,QAjBK,WAEbiF,GACFA,EAFY3C,EAAS,IAgBU6C,SAAUD,GAAvC,QACO,kBAAC,GAAD,CAASpG,KAAK,6BCGdsG,OA3Bf,YAAiE,IAA/C/H,EAA8C,EAA9CA,MAAOyB,EAAuC,EAAvCA,KAAM2D,EAAiC,EAAjCA,MAAiC,IAA1B7G,eAA0B,MAAhB,GAAgB,EAAT9D,EAAS,qDAC/BC,YAAS0K,EAAQA,EAAM3D,KAAOrH,EAAc,CACzEoL,KAAgB,OAAVJ,IADFzK,EADwD,EACxDA,QAASE,EAD+C,EAC/CA,KAAMD,EADyC,EACzCA,MAGrB,OAAID,GAAWC,EACN,MAGLC,GAAQuK,IACV7G,EAAU1D,EAAKuK,EAAMvK,OAIrB,yBAAKG,UAAU,cACb,2BAAO6J,QAASpD,GAAOzB,GACvB,0CAAQyB,KAAMA,EAAMnB,GAAImB,GAAUhH,GAChC,4BAAQoF,MAAM,IAAd,gBACCtB,EAAQyC,KAAI,SAAC4E,GAAD,OACX,4BAAQ3B,IAAK2B,EAAEtF,GAAIT,MAAO+F,EAAEtF,IACzBsF,EAAEnE,aCgBAuG,OAnCf,YAMI,IALFC,EAKC,EALDA,OACAnB,EAIC,EAJDA,aACAoB,EAGC,EAHDA,aAEAC,GACC,EAFDzG,OAEC,EADDyG,cAEA,OACE,yBAAKnN,UAAU,wBACb,0BAAMA,UAAU,2BAA2B+L,SAAUmB,GACnD,yBAAKlN,UAAU,iBACZiN,EAAOjH,KAAI,SAACoH,GACX,OAAOA,EAAElK,MAAmB,WAAXkK,EAAElK,KACjB,kBAAC,GAAD,eAAQ+F,IAAKmE,EAAE3G,MAAU2G,EAAzB,CAA4B9C,SAAUwB,KAEtC,kBAAC,GAAD,eAAO7C,IAAKmE,EAAE3G,MAAU2G,EAAxB,CAA2B9C,SAAUwB,SAI3C,yBAAK9L,UAAU,UACb,4BAAQyG,KAAK,UAAb,UACA,4BACEzG,UAAU,OACVyG,KAAK,SACLvD,KAAK,SACLyE,QAASwF,GAJX,cCzBGE,GACN,SAAoBC,GACvB,IAAI9G,EAAI,IAAI+G,KAAKD,GACfE,EAAQ,IAAMhH,EAAEiH,WAAa,GAC7BC,EAAM,GAAKlH,EAAEmH,UACbC,EAAOpH,EAAEqH,cAKX,OAHIL,EAAM/M,OAAS,IAAG+M,EAAQ,IAAMA,GAChCE,EAAIjN,OAAS,IAAGiN,EAAM,IAAMA,GAEzB,CAACE,EAAMJ,EAAOE,GAAKI,KAAK,MCwCpBC,OA7Cf,YAAkE,IAA5Cb,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,aAA6B,IAAfzG,cAAe,MAAN,GAAM,EAC/D5G,QAAQC,IAAI2G,GADmD,MAE/ByE,mBAASzE,GAFsB,mBAExD8E,EAFwD,KAE9CC,EAF8C,KAGzDuC,EAAe,CACnB,CACEvH,KAAM,SACNzB,MAAO,SACP9B,KAAM,SACNkH,MAAO,CAAE3D,KAAM8C,GAAc1J,KAAM,YACnC0K,aAAc7D,EAAM,QAEtB,CACED,KAAM,WACNzB,MAAO,OACP9B,KAAM,OACNqH,aAAc8C,GAAUE,KAAKU,QAE/B,CACExH,KAAM,SACNzB,MAAO,KACP9B,KAAM,OACNqH,aAAc8C,GAAUE,KAAKU,SAQjC,OACE,kBAAC,GAAD,CACEf,aAAc,SAACxC,GACbA,EAAEsB,iBACFkB,EAAa1B,IAEfyB,OAAQe,EACRlC,aAZJ,SAAsBpB,GAAI,IAAD,EACCA,EAAEK,OAAlBlG,EADe,EACfA,MAAO4B,EADQ,EACRA,KACfgF,EAAY,2BAAKD,GAAN,mBAAiB/E,EAAO5B,GAAS,SAW1CsI,aAAc,SAACzC,GACbA,EAAEsB,iBACFmB,EAAa3B,OCNN0C,OA/Bf,YAAmC,IAAXxH,EAAU,EAAVA,OAAU,EACiByH,YAAa7E,GAAa,CACrE2C,UAAU,2BAAM/B,IAAiCxD,KAFvB,mBACvB0H,EADuB,YACTzO,EADS,EACTA,QAASE,EADA,EACAA,KAAMD,EADN,EACMA,MAYpC,GATAwD,qBAAU,WACN,IAAMiL,EAAY,IAAIC,gBAGtB,OAFAF,IAEO,WACHC,EAAUE,WAEf,CAAC7H,IAEA/G,GAAWA,EAAS,OAAO,yCAC/B,GAAIC,GAASA,EAAO,OAAO,uCAE3B,IAAM4O,EAAW3O,EAAOA,EAAK4O,QAAQ/H,QAAO,SAAAU,GAAC,OAAoB,IAAhBA,EAAEsH,aAAmB,GAChEC,EAAW9O,EAAOA,EAAK4O,QAAQ/H,QAAO,SAAAU,GAAC,OAAoB,IAAhBA,EAAEsH,aAAmB,GAChEE,EAAeJ,EAASjM,QAAO,SAACsM,EAAMjE,GAAP,OAAaiE,EAAOjE,EAAE0B,SAAQ,GAC7DwC,EAAgBH,EAASpM,QAAO,SAACsM,EAAMjE,GAAP,OAAaiE,EAAOjE,EAAE0B,SAAQ,GAC9DyC,EAAUH,EAAeE,EAE/B,OAAO,yBAAK9O,UAAU,WAClB,uCACA,6BAAK,yCAAc,6BAAM,2BAAG,+BAAQwO,EAAS/N,OAAjB,gBAA5B,IAAiF,8BAAOoB,EAAQC,IAAI8M,KACpG,6BAAK,wCAAa,6BAAM,2BAAG,+BAAQD,EAASlO,OAAjB,eAAtB,KAA2E,8BAAOoB,EAAQC,IAAIgN,KACnG,6BACA,yCAAc,8BAAOjN,EAAQC,IAAIiN,OCyG1BC,OA3Hf,WACE3O,IADqB,MAEO8K,mBAAS,GAFhB,mBAEdlB,EAFc,KAENgF,EAFM,OAGO9D,mBAAS,IAAII,KAHpB,mBAGd7E,EAHc,KAGNwI,EAHM,OAI0Bf,YAAa7E,GAAa,CACvE2C,UAAU,aAAGjC,SANC,GAMoBC,OAAQA,GAAWvD,KALlC,mBAId0H,EAJc,YAISvO,GAJT,EAIAF,QAJA,EAISE,MAJT,EAIeD,MAKpCwD,qBAAU,WACR,IAAMiL,EAAY,IAAIC,gBAItB,OAHAxO,QAAQC,IAAI,SACZqO,IAEO,WACLC,EAAUE,WAEX,CAACtE,EAAQvD,IA0CZ,IAQMyI,EAAU,SAACC,GACf,IAAIC,EAAS9B,KAAK+B,MAAMF,GACxB,OAAO,IAAI7B,KAAK8B,GAAQE,mBAAmB,UAEvCC,EAAU3P,EACZA,EAAK4O,QAAQzI,KAAI,SAACoB,GAAD,mBAAC,eACfA,GADc,IAEjBqI,YAAarI,EAAEmF,OAAO9F,KACtBiJ,UAAWP,EAAQ/H,EAAEsI,WACrBC,UAAWR,EAAQ/H,EAAEuI,WACrBrD,OAAQzK,EAAQC,IAAIsF,EAAEkF,QACtBoC,UAA2B,IAAhBtH,EAAEsH,UAAkB,UAAY,eAE3C,GAGJ,OACE,oCACE,kBAAC,IAAD,CAAOkB,KAAK,WAAWzP,OAAK,GAC1B,yBAAKH,UAAU,WACb,+CACA,kBAAC,IAAD,CAASA,UAAU,2BAA2BI,GAAG,sBAC/C,kBAAC,GAAD,CAASqG,KAAK,MAAM4C,KAAK,gBAG7B,6BACA,yBAAKrJ,UAAU,WACZH,GACC,kBAAC,GAAD,CACEqN,aA7EZ,SAAsB1B,GACpB1L,QAAQC,IAAIyL,GAEZ,IADA,IAAIqE,EAAS,IAAItE,IACjB,MAA2BuE,OAAOrB,QAAQjD,GAA1C,eAAqD,CAAC,IAAD,sBAAzCvC,EAAyC,KAApCpE,EAAoC,KAC/CA,IACFgL,EAAO5G,GAAOpE,GAGlB/E,QAAQC,IAAI,WAAY8P,GACxBX,EAAUW,GACVZ,EAAU,IAoEAvI,OAAQA,EACRyG,aAlEZ,SAAsB3B,GAEpB,IADA,IAAIqE,EAAS,IAAItE,IACjB,MAA2BuE,OAAOrB,QAAQjD,GAA1C,eAAqD,CAAC,IAAD,sBAAzCvC,EAAyC,KAApCpE,EAAoC,KAC/CA,IACFgL,EAAO5G,GAAOpE,GAGlB,IAAIkL,EAAID,OAAO/J,KAAK8J,GACjB7J,KAAI,SAACiD,GAAD,OAASA,EAAM,IAAM4G,EAAO5G,MAChC6E,KAAK,KACRkC,MAAM,GAAD,OAAI/O,EAAJ,2BAA+B8O,IACjC3D,MAAK,SAAC6D,GAAD,OAAcA,EAASC,UAC5B9D,MAAK,SAAC8D,GACL,IAAIC,EAAMzM,OAAO0M,IAAIC,gBAAgBH,GACjC1N,EAAI4C,SAASkL,cAAc,KAC/B9N,EAAE+N,KAAOJ,EACT3N,EAAEgO,SAAW,cACbpL,SAASqL,KAAKC,YAAYlO,GAC1BA,EAAEmO,QACFnO,EAAEoO,gBAmDF,yBAAK5Q,UAAU,UACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,CAAO8I,QA7CD,CACd,CAAErC,KAAM,KAAMzB,MAAO,MACrB,CAAEyB,KAAM,cAAezB,MAAO,UAC9B,CAAEyB,KAAM,SAAUzB,MAAO,UACzB,CAAEyB,KAAM,YAAazB,MAAO,cAC5B,CAAEyB,KAAM,YAAazB,MAAO,YAwCKnF,KAAM2P,IAC9B3P,GACC,kBAAC,GAAD,CACEoK,OAAQA,EACR2C,cArDd,SAA0BiE,GACxB5B,EAAU4B,IAqDEhE,SAAUhN,EAAK4O,QAAQhO,OA9GrB,MAkHR,kBAAC,GAAD,CAAciG,OAAQA,MAG1B,kBAAC,IAAD,CAAOkJ,KAAK,qBAAqBzP,OAAK,GACpC,kBAAC,GAAD,CAAcuG,OAAQA,OCxDfoK,OAtEf,WAAwB,IAAD,EACW3F,mBAAS,MADpB,mBACdC,EADc,KACJ2F,EADI,OAEW5F,mBAAS,IAAII,KAFxB,mBAEdC,EAFc,KAEJC,EAFI,OAGeC,YAAYpM,GAH3B,mBAGd0R,EAHc,KAGErR,EAHF,KAGEA,QAcvB,SAASmM,EAAapB,GAAI,IAAD,EACCA,EAAEK,OAAlBlG,EADe,EACfA,MAAO4B,EADQ,EACRA,KACfgF,EAAY,2BAAKD,GAAN,mBAAiB/E,EAAO5B,KAErC,OAAOuG,EACL,kBAAC,IAAD,CAAUhL,GAAIgL,IAEd,6BACE,yBAAKpL,UAAU,WACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAASI,GAAG,SAASJ,UAAU,sBAC7B,kBAAC,GAAD,CAASyG,KAAK,yBAEhB,mDAGH9G,GAAW,2CACZ,0BAAMK,UAAU,mBAAmB+L,SA7BvC,SAAsBrB,GACpBA,EAAEsB,iBACFgF,EAAa,CACX/E,UAAU,eACLT,GAELU,eAAgB,CAAC,CAAE9B,MAAO/K,GAAS,CAAE+K,MAAOhL,MAC3CgN,MACD,kBAAM2E,EAAY,aAClB,SAAC1E,GAAD,OAASvM,QAAQC,IAAI,UAAWsM,QAqB9B,6BACE,kBAAC,GAAD,CACE5F,KAAK,WACLzB,MAAM,WACNsF,SAAUwB,EACVW,UAAQ,IAEV,kBAAC,GAAD,CACEhG,KAAK,QACLzB,MAAM,gBACNsF,SAAUwB,EACV5I,KAAK,QACLuJ,UAAQ,IAEV,kBAAC,GAAD,CACEhG,KAAK,YACLzB,MAAM,aACNsF,SAAUwB,EACVW,UAAQ,IAEV,kBAAC,GAAD,CACEhG,KAAK,WACLzB,MAAM,YACNsF,SAAUwB,EACVW,UAAQ,KAGZ,yBAAKzM,UAAU,eACb,8CC4BKiR,oBAtFf,YAAoC,IAAVC,EAAS,EAATA,MAAS,EACD/F,mBAAS,MADR,mBAC1BC,EAD0B,KAChB2F,EADgB,OAED5F,mBAAS,IAAII,KAFZ,mBAE1BC,EAF0B,KAEhBC,EAFgB,OAGNC,YAAYpM,GAHN,mBAG1B0R,EAH0B,8BAIAtR,YAASH,EAAU,CAClD0M,UAAW,CAAE3G,GAAI4L,EAAMrB,OAAOvK,MADxB3F,EAJyB,EAIzBA,QAASC,EAJgB,EAIhBA,MAAOC,EAJS,EAITA,KAGxB,GAAIF,EAAS,OAAO,yCACpB,GAAIC,EAAO,OAAO,uCAClB,IAAIuB,EAAOtB,EAAKsB,KAmBhB,SAAS2K,EAAapB,GAAI,IAAD,EACCA,EAAEK,OAAlBlG,EADe,EACfA,MAAO4B,EADQ,EACRA,KACfgF,EAAY,2BAAKD,GAAN,mBAAiB/E,EAAO5B,KAErC,OAAOuG,EACL,kBAAC,IAAD,CAAUhL,GAAIgL,IAEd,6BACE,yBAAKpL,UAAU,WACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAASI,GAAG,SAASJ,UAAU,sBAC7B,kBAAC,GAAD,CAASyG,KAAK,yBAEhB,6CAGH9G,GAAW,2CACZ,0BAAMK,UAAU,mBAAmB+L,SAlCvC,SAAsBrB,GACpBA,EAAEsB,iBACF,IAAI6C,EAAO,IAAItD,IACfuE,OAAO/J,KAAK5E,GAAMgQ,SAAQ,SAAClI,GACpBuC,EAASvC,KACZ4F,EAAK5F,GAAO9H,EAAK8H,OAIrB+H,EAAa,CACX/E,UAAU,uCAAMT,GAAaqD,GAApB,IAA0BvJ,GAAInE,EAAKmE,KAC5C4G,eAAgB,CAAC,CAAE9B,MAAO/K,GAAS,CAAE+K,MAAOhL,MAC3CgN,MACD,kBAAM2E,EAAY,aAClB,SAAC1E,GAAD,OAASvM,QAAQC,IAAI,UAAWsM,QAqB9B,6BACE,kBAAC,GAAD,CACE5F,KAAK,WACLzB,MAAM,WACNsF,SAAUwB,EACVW,UAAQ,EACRlC,aAAcpJ,EAAKjB,SACnBkR,UAAU,IAEZ,kBAAC,GAAD,CACE3K,KAAK,QACLzB,MAAM,gBACNsF,SAAUwB,EACV5I,KAAK,QACLuJ,UAAQ,EACRlC,aAAcpJ,EAAKkQ,QAErB,kBAAC,GAAD,CACE5K,KAAK,YACLzB,MAAM,aACNsF,SAAUwB,EACVW,UAAQ,EACRlC,aAAcpJ,EAAKmQ,YAErB,kBAAC,GAAD,CACE7K,KAAK,WACLzB,MAAM,YACNsF,SAAUwB,EACVW,UAAQ,EACRlC,aAAcpJ,EAAKoQ,YAGvB,yBAAKvR,UAAU,eACb,gDC5BKwR,OArDf,SAA4B/R,GAC1BY,IADiC,MAEAX,YAASL,GAAlCM,EAFyB,EAEzBA,QAASC,EAFgB,EAEhBA,MAAOC,EAFS,EAETA,KACxB,GAAIF,EAAS,OAAO,KACpB,GAAIC,EACF,OAAO,uCAET,IAAMkJ,EAAU,CACd,CAAErC,KAAM,KAAMzB,MAAO,MACrB,CAAEyB,KAAM,WAAYzB,MAAO,eAC3B,CAAEyB,KAAM,QAASzB,MAAO,SACxB,CAAEyB,KAAM,OAAQzB,MAAO,aACvB,CACEyB,KAAM,UACNzB,MAAO,GACPmE,OAAQ,SAACD,GAAD,OACN,6BACE,uBAAGqH,KAAI,wBAAmBrH,EAAI5D,IAAMtF,UAAU,qBAC5C,kBAAC,GAAD,CAASyG,KAAK,OAAO4C,KAAK,cAO9BmG,EAAU3P,EAAK4R,MAAMzL,KAAI,SAACoB,GAAD,mBAAC,eAC3BA,GAD0B,IAE7BX,KAAMW,EAAEkK,UAAF,UAAiBlK,EAAEkK,UAAnB,YAAgClK,EAAEmK,UAAa,UAEvD,OACE,oCACE,kBAAC,IAAD,CAAO3B,KAAK,SAASzP,OAAK,GACxB,yBAAKH,UAAU,WACb,6CACA,kBAAC,IAAD,CACEA,UAAU,qCACVI,GAAG,mBAEH,kBAAC,GAAD,CAASqG,KAAK,MAAM4C,KAAK,eAG7B,kBAAC,EAAD,CAAOP,QAASA,EAASjJ,KAAM2P,KAEjC,kBAAC,IAAD,CAAOI,KAAK,kBAAkBzP,OAAK,GACjC,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOyP,KAAK,oBAAoBzP,OAAK,GACnC,kBAAC,GAAD,SC9COuR,GATI,CACjBC,UAAW,SAACC,EAAOC,GACjBC,eAAeC,QAJE,cAIoBH,GACrCC,GAAG,IAELG,SAAU,kBAAMF,eAAeG,QAPZ,gBAQnBC,YAAa,kBAAMJ,eAAeK,WARf,iBC8ENC,OArEf,SAAmB3S,GAAQ,IAAD,EACQ0L,mBAAS,IAAII,KADrB,mBACjBC,EADiB,KACPC,EADO,OAEQN,mBAAS,MAFjB,mBAEjBC,EAFiB,KAEP2F,EAFO,OAGIrF,YAAYxM,GAHhB,mBAGjBmT,EAHiB,KAGRC,EAHQ,KAGRA,OAoBhB,SAASxG,EAAapB,GAAI,IAAD,EACCA,EAAEK,OAAlBlG,EADe,EACfA,MAAO4B,EADQ,EACRA,KACfgF,EAAY,2BAAKD,GAAN,mBAAiB/E,EAAO5B,KAErC,OAAOuG,EACL,kBAAC,IAAD,CAAUhL,GAAIgL,IAEZ,oCACE,yBAAKpL,UAAU,yBACb,yBAAKA,UAAU,gCACb,4B9BtBY,qB8BuBZ,yBACEuS,IAC2B,yCAE3BC,IAAI,WAGR,0BAAMxS,UAAU,OAAO+L,SArC/B,SAAsBrB,GACpBA,EAAEsB,iBACFsG,EAAOG,aACPJ,EAAM,CACJpG,UAAU,eACLT,KAEJY,MACD,SAACC,GACC,GAAIA,EAAIxM,KAAM,CAAC,IACP+R,EAAUvF,EAAIxM,KAAK6S,UAAnBd,MACNF,GAAWC,UAAUC,GAAO,WAC1Bb,EAAY,YAIlB,SAAC1E,GAAD,OAASvM,QAAQC,IAAI,UAAWsM,QAsB1B,yBAAKrM,UAAU,QACb,kBAAC,GAAD,CACEyG,KAAK,WACLzB,MAAM,WACNsF,SAAUwB,EACVW,UAAQ,IAEV,kBAAC,GAAD,CACEhG,KAAK,WACLzB,MAAM,WACN9B,KAAK,WACLoH,SAAUwB,EACVW,UAAQ,KAGZ,yBAAKzM,UAAU,eACb,gCACE,0BAAMA,UAAU,QAAhB,SACA,kBAAC,GAAD,CAASyG,KAAK,gBC1DxBuL,GAAW,WACf,IAAMJ,EAAQF,GAAWM,WACzB,OAAOJ,EAAK,cAAUA,GAAU,IAS5BU,GAAS,IAAIK,IAAa,CAC9BC,IAAI,GAAD,OAAK3R,EAAL,YACH4R,QATwB,SAACC,GACzBA,EAAUC,WAAW,CACnBC,QAAS,CACPC,cAAejB,WAyCNkB,OAhCf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAgBZ,OAAQA,IACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO1C,KAAK,SAASzP,OAAK,GACxB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOyP,KAAK,KACV,kBAAC,EAAD,MACA,6BAAS5P,UAAU,0BACjB,yBAAKA,UAAU,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4P,KAAK,IAAIzP,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOyP,KAAK,YACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,GAAD,eCnCAuD,QACW,cAA7BzP,OAAO0P,SAASC,UAEe,UAA7B3P,OAAO0P,SAASC,UAEhB3P,OAAO0P,SAASC,SAASnC,MACvB,2DCbNoC,IAASnK,OACP,kBAAC,IAAMoK,WAAP,KACE,kBAAC,GAAD,OAEFnO,SAASC,eAAe,SD0HpB,kBAAmBmO,WACrBA,UAAUC,cAAcC,MACrBtH,MAAK,SAAAuH,GACJA,EAAaC,gBAEdC,OAAM,SAAAjU,GACLE,QAAQF,MAAMA,EAAMc,c","file":"static/js/main.960134e8.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\r\nexport const USERS_GET_TOKEN = gql`\r\n  mutation getToken($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS_GET_ME = gql`\r\n  query getMe {\r\n    me {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS = gql`\r\n  query getUsers {\r\n    users {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_USER = gql`\r\n  mutation registerUser(\r\n    $id: ID\r\n    $username: String!\r\n    $email: String!\r\n    $firstName: String\r\n    $lastName: String\r\n  ) {\r\n    registerUser(\r\n      id: $id\r\n      username: $username\r\n      email: $email\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n    ) {\r\n      user {\r\n        id\r\n        username\r\n        dateJoined\r\n        firstName\r\n        lastName\r\n        lastLogin\r\n        email\r\n        isStaff\r\n        isSuperuser\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER = gql`\r\n  query getUser($id: ID!) {\r\n    user(id: $id) {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction UserProfile(props) {\r\n  let { loading, error, data } = useQuery(USERS_GET_ME);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  console.log(data);\r\n  return (\r\n    <div className=\"user-profile-nav\">\r\n      <ul>\r\n        <li>\r\n          <b>{data.me.username}</b>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/login\">\r\n            Logout\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction useProfile() {\r\n  const history = useHistory();\r\n  const { loading, error, data } = useQuery(USERS_GET_ME);\r\n  if (loading) return null;\r\n  if (error) {\r\n    if (error.graphQLErrors.length) {\r\n      let message = error.graphQLErrors[0].message;\r\n      if (\r\n        message === \"Signature has expired\" ||\r\n        message === \"You do not have permission to perform this action\"\r\n      ) {\r\n        history.push(\"/login\");\r\n      }\r\n    }\r\n    console.log(error);\r\n    return null;\r\n  }\r\n  return data;\r\n}\r\n\r\nexport default useProfile;\r\n","// Configurations:\r\n// 1. Backend endpoint depending on test vs live\r\n// 2.\r\n\r\nconst ENVIRON = process.env.NODE_ENV === \"development\" ? \"DEV\" : \"PROD\";\r\n\r\nconst CONF = {\r\n  DEV: {\r\n    baseUrl: \"http://localhost:8000/api\",\r\n    ROOT: \"http://localhost:8000\",\r\n  },\r\n  PROD: {\r\n    baseUrl: \"/api\",\r\n    ROOT: \"\",\r\n  },\r\n};\r\n\r\nexport const BASE_URL = CONF[ENVIRON].baseUrl;\r\nexport const ROOT_URL = CONF[ENVIRON].ROOT;\r\nexport const GOOGLE_API_KEY = \"AIzaSyDQ7WXCqy5-cyHTyho_XLgBDHJZe4n-nAw\";\r\nexport const APP_NAME = \"TAG MAKOKA (MSCC)\";\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport useProfile from \"../hooks/useProfile\";\r\nimport { APP_NAME } from \"../../conf\";\r\n\r\nfunction NavBar() {\r\n  const user = useProfile();\r\n  console.log(user);\r\n  return (\r\n    <header className=\"navbar container\">\r\n      <div className=\"content\">\r\n        <h3>{APP_NAME}</h3>\r\n        <div className=\"nav-links\">\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to=\"/\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/entries\">Entries</NavLink>\r\n            </li>\r\n            {user && user.me && user.me.isSuperuser && (\r\n              <li>\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n              </li>\r\n            )}\r\n          </ul>\r\n          <UserProfile />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const NATURE_SUMMARY = gql`\r\n  query natureSummary {\r\n    natureSummary {\r\n      name\r\n      status\r\n      count\r\n    }\r\n  }\r\n`;\r\n\r\nexport const STATUS_SUMMARY = gql`\r\n  query statusSummary {\r\n    statusSummary {\r\n      name\r\n      count\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOCATION_SUMMARY = gql`\r\n  query getLocSummary {\r\n    locationSummary {\r\n      locName\r\n      locCount\r\n    }\r\n  }\r\n`;\r\n\r\nexport const KPI_SUMMARY = gql`\r\n  query kpi {\r\n    kpiSummary {\r\n      name\r\n      count\r\n      natureName\r\n    }\r\n  }\r\n`;\r\n","let numOr0 = (n) => (isNaN(n) ? 0 : parseFloat(n));\r\nconst Numbers = {\r\n  fmt: (num, decimals = 0) =>\r\n    Number(num)\r\n      .toFixed(decimals)\r\n      .toString()\r\n      .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\"),\r\n  sum: (nums) => nums.reduce((a, b) => numOr0(a) + numOr0(b), 0),\r\n  dpts: (num) => (Math.round(num * 100) / 100).toFixed(2),\r\n};\r\nexport default Numbers;\r\n","import React from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport Numbers from \"../../helpers/Numbers\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst BarGraph = ({\r\n  graphId,\r\n  meta,\r\n  title,\r\n  extra = null,\r\n  type = \"bar\",\r\n  stacked = false,\r\n}) => {\r\n  useEffect(() => {\r\n    const data = {\r\n      datasets: meta.data,\r\n      labels: meta.labels,\r\n    };\r\n    console.log(data);\r\n    const options = {\r\n      legend: {\r\n        display: window.screen.width > 800,\r\n        position: \"top\",\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          display: false,\r\n        },\r\n      },\r\n      hover: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n      },\r\n      tooltips: {\r\n        displayColors: true,\r\n        callbacks: {\r\n          mode: \"x\",\r\n        },\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            stacked: stacked,\r\n            gridLines: {\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            stacked: stacked,\r\n            ticks: {\r\n              beginAtZero: meta.beginAtZero || false,\r\n              callback: function (value) {\r\n                return value.toLocaleString();\r\n              },\r\n              userCallback: function (label, index, labels) {\r\n                if (Math.floor(label) === label) {\r\n                  return label;\r\n                }\r\n              },\r\n            },\r\n            type: \"linear\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    new Chart(document.getElementById(graphId), {\r\n      type: type,\r\n      data: data,\r\n      options: options,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`graph-container bg-white card ${extra ? extra : \"\"}`}>\r\n      <h6 className=\"pl-1\">{title}</h6>\r\n      <div>\r\n        <canvas id={graphId} className=\"graph p-1\" style={{}}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import invert from \"invert-color\";\r\nexport const ColorsHelper = {\r\n  randomColor() {\r\n    var letters = \"0123456789ABCDEF\";\r\n    var color = \"#\";\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  },\r\n  randomColors(num) {\r\n    return [...Array(num).keys()].map(() => this.randomColor());\r\n  },\r\n  contrastColors(colors) {\r\n    return colors.map(c => invert(c));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { NATURE_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\n\r\nfunction ComplaintsByNatureGraph(props) {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(NATURE_SUMMARY);\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  console.log(data);\r\n\r\n  let placeHolder = [\r\n    { name: \"Not Assigned\", count: 0 },\r\n    { name: \"Assigned\", count: 0 },\r\n    { name: \"Completed\", count: 0 },\r\n    { name: \"Feedback Sent\", count: 0 },\r\n  ];\r\n  console.log(data.natureSummary);\r\n\r\n  let natureList = data.natureSummary\r\n    .map((d) => {\r\n      return d.name;\r\n    })\r\n    .filter((v, i, a) => a.indexOf(v) === i);\r\n  let res = placeHolder.map((s) => {\r\n    return {\r\n      label: s.name,\r\n      backgroundColor: ColorsHelper.randomColor(),\r\n      data: natureList.map((p) => {\r\n        let x = data.natureSummary.find(\r\n          (d) => d.name === p && d.status === s.name\r\n        );\r\n        return x ? x.count : 0;\r\n      }),\r\n    };\r\n  });\r\n\r\n  const meta = {\r\n    data: res,\r\n    labels: natureList.map((r) => r),\r\n    beginAtZero: true,\r\n  };\r\n  return (\r\n    <BarGraph\r\n      stacked={true}\r\n      meta={meta}\r\n      title=\"Complaints Nature Summary\"\r\n      graphId=\"complaints-nature-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsByNatureGraph;\r\n","import React from \"react\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\nimport Chart from \"chart.js\";\r\nimport { useEffect } from \"react\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\n\r\nconst PieChart = ({ meta, graphId, title, colors, onDataClick }) => {\r\n  useEffect(() => {\r\n    let bgColors = colors || ColorsHelper.randomColors(meta.data.length);\r\n    let fntColors = ColorsHelper.contrastColors(bgColors);\r\n    let options = {\r\n      legend: {\r\n        position: \"right\",\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          formatter: (value, ctx) => {\r\n            let sum = 0;\r\n            let dataArr = ctx.chart.data.datasets[0].data;\r\n            dataArr.map((data) => {\r\n              sum += data;\r\n            });\r\n            let percentage = ((value * 100) / sum).toFixed(0) + \"%\";\r\n            return percentage;\r\n          },\r\n          color: fntColors,\r\n        },\r\n      },\r\n      onClick: (_, els) => {\r\n        if (els && els.length && onDataClick) {\r\n          let data = meta.data.slice(els[0]._index, els[0]._index + 1)[0];\r\n          onDataClick(data);\r\n        }\r\n      },\r\n    };\r\n    let data = {\r\n      datasets: [\r\n        {\r\n          data: meta.data.map((d) => d.value),\r\n          backgroundColor: bgColors,\r\n        },\r\n      ],\r\n      labels: meta.data.map((d) => d.name),\r\n    };\r\n\r\n    var myPieChart = new Chart(document.getElementById(graphId), {\r\n      type: \"pie\",\r\n      data: data,\r\n      options: options,\r\n    });\r\n    console.log(myPieChart);\r\n  }, []);\r\n  return (\r\n    <div className=\"graph-container bg-white card p-2\">\r\n      <h6 className=\"pl-1\">{title}</h6>\r\n      <div>\r\n        <canvas id={graphId} className=\"graph p-1\" style={{}}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React from \"react\";\r\nimport { STATUS_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport PieChart from \"../../components/graph/PieChart\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\n\r\nfunction ComplaintsByStatusGraph() {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(STATUS_SUMMARY);\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  console.log(data);\r\n  const meta = {\r\n    data: data.statusSummary.map((r) => {\r\n      return {\r\n        name: r.name,\r\n        value: r.count,\r\n      };\r\n    }),\r\n  };\r\n  return (\r\n    <PieChart\r\n      meta={meta}\r\n      title=\"Complaints Status Summary\"\r\n      graphId=\"complaints-status-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsByStatusGraph;\r\n","import React from \"react\";\r\nimport { LOCATION_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport PieChart from \"../../components/graph/PieChart\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\n\r\nfunction ComplaintsByLocationGraph() {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(LOCATION_SUMMARY);\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  const meta = {\r\n    data: data.locationSummary.map((r) => {\r\n      return {\r\n        name: r.locName,\r\n        value: r.locCount,\r\n      };\r\n    }),\r\n  };\r\n  return (\r\n    <PieChart\r\n      meta={meta}\r\n      title=\"Complaints Location Summary\"\r\n      graphId=\"complaints-location-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsByLocationGraph;\r\n","import React from \"react\";\r\nimport { KPI_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport PieChart from \"../../components/graph/PieChart\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\n\r\nfunction ComplaintsKPIGraph() {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(KPI_SUMMARY);\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  console.log(data);\r\n  let allProps = {\r\n    backgroundColor: \"rgba(255, 212, 0, .5)\",\r\n    borderWidth: 1,\r\n  };\r\n  let placeHolder = [\r\n    { name: \"1 week\", count: 0 },\r\n    { name: \"2 weeks\", count: 0 },\r\n    { name: \"3-4 weeks\", count: 0 },\r\n    { name: \"5-6 weeks\", count: 0 },\r\n    { name: \"7-8 weeks\", count: 0 },\r\n    { name: \"Above 8 weeks\", count: 0 },\r\n  ];\r\n  console.log(data.kpiSummary);\r\n\r\n  let natureList = data.kpiSummary\r\n    .map((d) => d.natureName)\r\n    .filter((v, i, a) => a.indexOf(v) === i);\r\n  let res = natureList.map((nat) => {\r\n    return {\r\n      label: nat,\r\n      backgroundColor: ColorsHelper.randomColor(),\r\n      data: placeHolder.map((p) => {\r\n        let x = data.kpiSummary.find(\r\n          (d) => d.natureName === nat && d.name === p.name\r\n        );\r\n        return x ? x.count : 0;\r\n      }),\r\n    };\r\n  });\r\n\r\n  const meta = {\r\n    data: res,\r\n    labels: placeHolder.map((r) => r.name),\r\n    beginAtZero: true,\r\n  };\r\n\r\n  return (\r\n    <BarGraph\r\n      stacked={true}\r\n      meta={meta}\r\n      title=\"Complaints KPI\"\r\n      graphId=\"complaints-kpi-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsKPIGraph;\r\n","import React from \"react\";\r\nimport ComplaintsByNatureGraph from \"./dashboard/ComplaintsByNatureGraph\";\r\nimport ComplaintsByStatusGraph from \"./dashboard/ComplaintsByStatusGraph\";\r\nimport ComplaintsByLocationGraph from \"./dashboard/ComplaintsByLocationGraph\";\r\nimport ComplaintsKPIGraph from \"./dashboard/ComplaintsKPIGraph\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <ComplaintsByStatusGraph />\r\n      <ComplaintsByLocationGraph />\r\n      <ComplaintsByNatureGraph />\r\n      <ComplaintsKPIGraph />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nfunction Table({ columns, data, idCol = \"id\" }) {\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"table-scrollable\">\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col) => (\r\n              <th key={col.name}>{col.label}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row) => (\r\n            <tr key={row[idCol]}>\r\n              {columns.map((col) => (\r\n                <td key={col.name} className={col.className}>\r\n                  {col.render ? col.render(row) : row[col.name]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nconst MatIcon = ({ name, extra, text }) => (\r\n  <>\r\n    <span className={`mat-icon material-icons${extra ? \" \" + extra : \"\"}`}>\r\n      {name}\r\n    </span>\r\n    {text && <span>{text}</span>}\r\n  </>\r\n);\r\nexport default MatIcon;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const GET_ENTRIES = gql`\r\n  query getEntries(\r\n    $pageNo: Int\r\n    $pageSize: Int\r\n    $entity: Int\r\n    $dateFrom: Date\r\n    $dateTo: Date\r\n  ) {\r\n    entries(\r\n      pageNo: $pageNo\r\n      pageSize: $pageSize\r\n      entity: $entity\r\n      dateFrom: $dateFrom\r\n      dateTo: $dateTo\r\n    ) {\r\n      id\r\n      amount\r\n      entryType\r\n      createdAt\r\n      updatedAt\r\n      entity {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ENTITIES = gql`\r\n  query getEntities {\r\n    entities {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_ENTRY = gql`\r\n  mutation createEntry($entity: ID!, $amount: Float!, $entryType: Int!) {\r\n    createEntry(input: { entity: $entity, amount: $amount, entryType: $entryType }) {\r\n      result {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const CREATE_ENTITY = gql`\r\n  mutation createEntity($name: String!) {\r\n    createEntity(input: { name: $name }) {\r\n      result {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nfunction Input({ label, name, help, type = \"text\", cls, ...props }) {\r\n  return (\r\n    <div className={`input-wrap ${cls || \"\"}`}>\r\n      <label htmlFor={name}>{label}</label>\r\n      {type === \"textarea\" ? (\r\n        <textarea name={name} id={name} {...props} />\r\n      ) : (\r\n          <input type={type} name={name} id={name} {...props} autoComplete={false} />\r\n        )}\r\n      {help && <span className=\"input-help\">{help}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","export const PAGE_SIZE = 10;\r\n\r\nexport const ENTRIES_FILTER_VARS = {\r\n  pageSize: PAGE_SIZE,\r\n  pageNo: 1,\r\n};\r\n\r\nexport const ENTRIES_FILTER_VARS_NO_PAGES = {\r\n  pageSize: 10000,\r\n  pageNo: 1,\r\n};\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\nimport Creatable from \"react-select/creatable\";\r\n\r\nfunction CreatableSelect({\r\n  label,\r\n  name,\r\n  query,\r\n  onCreateOption,\r\n  onChange,\r\n  options = [],\r\n  defaultValue = null,\r\n  ...props\r\n}) {\r\n  let { loading, data, error } = useQuery(query ? query.name : USERS_GET_ME, {\r\n    skip: query === null,\r\n  });\r\n  if (loading || error) {\r\n    return null;\r\n  }\r\n\r\n  if (data && query) {\r\n    options = data[query.data];\r\n  }\r\n\r\n  function handleChange(option) {\r\n    if (onChange) {\r\n      onChange({ target: { name: name, value: option.value } });\r\n    }\r\n  }\r\n  function handleCreate(value) {\r\n    if (onCreateOption) onCreateOption(name, value);\r\n  }\r\n\r\n  const selOptions = options.map((e) => {\r\n    return { value: e.id, label: e.name };\r\n  });\r\n  let selObj = selOptions && selOptions.find((o) => {\r\n    return defaultValue == o.value;\r\n  });\r\n  const value =\r\n    defaultValue !== undefined && selObj\r\n      ? {\r\n        value: defaultValue,\r\n        label: selObj.label,\r\n      }\r\n      : null;\r\n  return (\r\n    <div className=\"input-wrap\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <Creatable\r\n        options={selOptions}\r\n        {...props}\r\n        onCreateOption={handleCreate}\r\n        onChange={handleChange}\r\n        value={value}\r\n        maxMenuHeight={110}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatableSelect;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../../components/forms/Input\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  CREATE_ENTITY,\r\n  CREATE_ENTRY,\r\n  GET_ENTITIES,\r\n  GET_ENTRIES,\r\n} from \"../../helpers/GraphQL\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { ENTRIES_FILTER_VARS, ENTRIES_FILTER_VARS_NO_PAGES } from \"../../constants\";\r\nimport CreatableSelect from \"../../components/forms/CreatableSelect\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\n\r\nfunction NewEntryPage({ filter }) {\r\n  useProfile()\r\n  const entryTypes = [{ id: 0, name: \"Revenue\" }, { id: 1, name: \"Expense\" }]\r\n  let entities = useQuery(GET_ENTITIES);\r\n  const [redirect] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n  const defaultData = new Map()\r\n  defaultData['entryType'] = 0\r\n  const [formData, setFormData] = useState(defaultData);\r\n  const [createEntry, { loading }] = useMutation(CREATE_ENTRY);\r\n  const [createEntity, { }] = useMutation(CREATE_ENTITY);\r\n  const entityOptions = entities.data ? entities.data.entities : [];\r\n\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (formData['entity'] && formData['amount']) {\r\n      createEntry({\r\n        variables: {\r\n          ...formData,\r\n        },\r\n        refetchQueries: () => [\r\n          { query: GET_ENTRIES, variables: { ...ENTRIES_FILTER_VARS, filter } },\r\n          { query: GET_ENTRIES, variables: { ...ENTRIES_FILTER_VARS_NO_PAGES, ...filter } },\r\n        ],\r\n        awaitRefetchQueries: true,\r\n      }).then(\r\n        (res) => {\r\n          // setRedirect(\"/entries/new-entry?abc\");\r\n          // window.location.reload();\r\n          console.log(res)\r\n          setFormData({ ...formData, amount: \"\", entity: null })\r\n          setMessage({ error: false, text: `Successfully recorded an entry: ${res.data.createEntry.result.id}` })\r\n        },\r\n        (res) => {\r\n          console.log(\"Error: \", res)\r\n          setMessage({ error: true, text: \"Form submit failed!\" });\r\n        }\r\n      );\r\n    } else {\r\n      setMessage({ error: true, text: \"Fill in amount & entity\" })\r\n    }\r\n\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  function onCreateOption(name, value) {\r\n    createEntity({\r\n      variables: {\r\n        name: value,\r\n      },\r\n      refetchQueries: () => [{ query: GET_ENTITIES }],\r\n      awaitRefetchQueries: true,\r\n    }).then(\r\n      (res) => {\r\n        let id = res.data.createEntity.result.id;\r\n        setFormData({ ...formData, [name]: id });\r\n      },\r\n      (res) => setMessage({ error: true, text: \"Error creating entity\" })\r\n    );\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n      <div>\r\n        <div className=\"toolbar\">\r\n          <div className=\"titlebar\">\r\n            <NavLink to=\"/entries\" className=\"btn btn-light mr-1\">\r\n              <MatIcon name=\"keyboard_arrow_left\" />\r\n            </NavLink>\r\n            <h5>Register New Entry</h5>\r\n          </div>\r\n        </div>\r\n        {loading && <p>Sending ....</p>}\r\n\r\n        <form className=\"form\" onSubmit={handleSubmit} autoComplete={\"off\"}>\r\n          <div>\r\n            <CreatableSelect\r\n              name=\"entryType\"\r\n              label=\"Type\"\r\n              options={entryTypes}\r\n              onChange={handleChange}\r\n              defaultValue={formData[\"entryType\"] || 0}\r\n              required\r\n            />\r\n            <CreatableSelect\r\n              name=\"entity\"\r\n              label=\"Entity\"\r\n              options={entityOptions}\r\n              onChange={handleChange}\r\n              onCreateOption={onCreateOption}\r\n              defaultValue={formData[\"entity\"]}\r\n              required\r\n            />\r\n\r\n            <Input\r\n              name=\"amount\"\r\n              label=\"Amount\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              required\r\n              value={formData['amount']}\r\n              min={100}\r\n            />\r\n          </div>\r\n          <div className=\"form-footer\">\r\n            <button>Submit</button>\r\n          </div>\r\n        </form>\r\n        {message && <small className={`p-1 message ${message.error ? \"fail\" : \"success\"}`}>{message.text}</small>}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default NewEntryPage;\r\n","import React from \"react\";\r\nimport MatIcon from \"../icons/MatIcon\";\r\n\r\nfunction Pagination({ pageNo, onPageChanged, lastPage }) {\r\n  const handlePrev = () => {\r\n    let newPage = pageNo > 1 ? pageNo - 1 : 1;\r\n    if (onPageChanged) {\r\n      onPageChanged(newPage);\r\n    }\r\n  };\r\n  const handleNext = () => {\r\n    let newPage = pageNo + 1;\r\n    if (onPageChanged) {\r\n      onPageChanged(newPage);\r\n    }\r\n  };\r\n  return (\r\n    <ul className=\"pagination\">\r\n      <li className=\"btn-wrap\">\r\n        <button onClick={handlePrev} disabled={pageNo <= 1}>\r\n          <MatIcon name=\"keyboard_arrow_left\" /> Previous\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <span>Page {pageNo}</span>\r\n      </li>\r\n      <li className=\"btn-wrap\">\r\n        <button onClick={handleNext} disabled={lastPage}>\r\n          Next <MatIcon name=\"keyboard_arrow_right\" />\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction Select({ label, name, query, options = [], ...props }) {\r\n  let { loading, data, error } = useQuery(query ? query.name : USERS_GET_ME, {\r\n    skip: query === null,\r\n  });\r\n  if (loading || error) {\r\n    return null;\r\n  }\r\n\r\n  if (data && query) {\r\n    options = data[query.data];\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-wrap\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...props}>\r\n        <option value=\"\">---Select---</option>\r\n        {options.map((o) => (\r\n          <option key={o.id} value={o.id}>\r\n            {o.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport Input from \"./Input\";\r\nimport Select from \"./Select\";\r\n\r\nfunction FilterExport({\r\n  fields,\r\n  handleChange,\r\n  handleSubmit,\r\n  filter,\r\n  handleExport,\r\n}) {\r\n  return (\r\n    <div className=\"filter-export  w-100\">\r\n      <form className=\"form d-flex align-bottom\" onSubmit={handleSubmit}>\r\n        <div className=\"inline-fields\">\r\n          {fields.map((f) => {\r\n            return f.type && f.type === \"select\" ? (\r\n              <Select key={f.name} {...f} onChange={handleChange} />\r\n            ) : (\r\n              <Input key={f.name} {...f} onChange={handleChange} />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <button name=\"filter\">Filter</button>\r\n          <button\r\n            className=\"ml-1\"\r\n            name=\"export\"\r\n            type=\"button\"\r\n            onClick={handleExport}\r\n          >\r\n            Export\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterExport;\r\n","export const Dates = {\r\n  fmt: function formatDate(date) {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { GET_ENTITIES } from \"../../helpers/GraphQL\";\r\nimport FilterExport from \"../../components/forms/FilterExport\";\r\nimport { Dates } from \"../../helpers/Dates\";\r\n\r\nfunction FilterForm({ handleSubmit, handleExport, filter = {} }) {\r\n  console.log(filter);\r\n  const [formData, setFormData] = useState(filter);\r\n  const searchFields = [\r\n    {\r\n      name: \"entity\",\r\n      label: \"Entity\",\r\n      type: \"select\",\r\n      query: { name: GET_ENTITIES, data: \"entities\" },\r\n      defaultValue: filter[\"entity\"],\r\n    },\r\n    {\r\n      name: \"dateFrom\",\r\n      label: \"From\",\r\n      type: \"date\",\r\n      defaultValue: Dates.fmt(Date.now()),\r\n    },\r\n    {\r\n      name: \"dateTo\",\r\n      label: \"To\",\r\n      type: \"date\",\r\n      defaultValue: Dates.fmt(Date.now()),\r\n    },\r\n  ];\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value || null });\r\n  }\r\n\r\n  return (\r\n    <FilterExport\r\n      handleSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(formData);\r\n      }}\r\n      fields={searchFields}\r\n      handleChange={handleChange}\r\n      handleExport={(e) => {\r\n        e.preventDefault();\r\n        handleExport(formData);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FilterForm;\r\n","\r\nimport { useLazyQuery } from '@apollo/react-hooks';\r\nimport React, { useEffect } from 'react';\r\nimport { ENTRIES_FILTER_VARS_NO_PAGES } from '../../constants';\r\nimport { GET_ENTRIES } from '../../helpers/GraphQL';\r\nimport Numbers from '../../helpers/Numbers';\r\n\r\nfunction EntrySummary({ filter }) {\r\n    const [getEntries, { loading, data, error }] = useLazyQuery(GET_ENTRIES, {\r\n        variables: { ...ENTRIES_FILTER_VARS_NO_PAGES, ...filter },\r\n    });\r\n    useEffect(() => {\r\n        const abortCtrl = new AbortController();\r\n        getEntries();\r\n\r\n        return function cleanup() {\r\n            abortCtrl.abort();\r\n        };\r\n    }, [filter]);\r\n\r\n    if (loading || loading) return <p>Loading...</p>;\r\n    if (error || error) return <p>Error :(</p>;\r\n\r\n    const revenues = data ? data.entries.filter(r => r.entryType === 0) : []\r\n    const expenses = data ? data.entries.filter(r => r.entryType === 1) : []\r\n    const totalRevenue = revenues.reduce((prev, o) => prev + o.amount, 0)\r\n    const totalExpenses = expenses.reduce((prev, o) => prev + o.amount, 0)\r\n    const balance = totalRevenue - totalExpenses\r\n\r\n    return <div className=\"summary\">\r\n        <h5>Summary</h5>\r\n        <div><div>Revenue: <br /><i><small>{revenues.length} record(s)</small></i></div> <span>{Numbers.fmt(totalRevenue)}</span></div>\r\n        <div><div>Expense:<br /><i><small>{expenses.length} record(s)</small></i> </div><span>{Numbers.fmt(totalExpenses)}</span></div>\r\n        <hr />\r\n        <div>Balance: <span>{Numbers.fmt(balance)}</span></div>\r\n    </div>\r\n}\r\n\r\nexport default EntrySummary;","import React, { useState } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { Route, NavLink } from \"react-router-dom\";\r\n\r\nimport Table from \"../components/tables/Table\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport { GET_ENTRIES } from \"../helpers/GraphQL\";\r\nimport NewEntryPage from \"./entries/NewEntryPage\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport Pagination from \"../components/tables/Pagination\";\r\nimport { useEffect } from \"react\";\r\nimport FilterForm from \"./entries/FilterForm\";\r\nimport { BASE_URL } from \"../conf\";\r\nimport Numbers from \"../helpers/Numbers\";\r\nimport EntrySummary from \"./entries/EntrySummary\";\r\nconst PAGE_SIZE = 10;\r\nfunction EntriesPage() {\r\n  useProfile();\r\n  const [pageNo, setPageNo] = useState(1);\r\n  const [filter, setFilter] = useState(new Map());\r\n  const [getEntries, { loading, data, error }] = useLazyQuery(GET_ENTRIES, {\r\n    variables: { pageSize: PAGE_SIZE, pageNo: pageNo, ...filter },\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    const abortCtrl = new AbortController();\r\n    console.log(\"Start\");\r\n    getEntries();\r\n\r\n    return function cleanup() {\r\n      abortCtrl.abort();\r\n    };\r\n  }, [pageNo, filter]);\r\n\r\n  function handleSubmit(formData) {\r\n    console.log(formData);\r\n    let params = new Map();\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value) {\r\n        params[key] = value;\r\n      }\r\n    }\r\n    console.log(\"Params: \", params);\r\n    setFilter(params);\r\n    setPageNo(1);\r\n  }\r\n\r\n  function handleExport(formData) {\r\n    let params = new Map();\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value) {\r\n        params[key] = value;\r\n      }\r\n    }\r\n    let q = Object.keys(params)\r\n      .map((key) => key + \"=\" + params[key])\r\n      .join(\"&\");\r\n    fetch(`${BASE_URL}/export-entries?${q}`)\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        var url = window.URL.createObjectURL(blob);\r\n        var a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = \"Export.xlsx\";\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        a.remove();\r\n      });\r\n  }\r\n\r\n  function handlePageChange(newPageNo) {\r\n    setPageNo(newPageNo);\r\n  }\r\n\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"entity_name\", label: \"Entity\" },\r\n    { name: \"amount\", label: \"Amount\" },\r\n    { name: \"entryType\", label: \"Entry Type\" },\r\n    { name: \"createdAt\", label: \"Created\" },\r\n    // { name: \"updatedAt\", label: \"Updated\" },\r\n  ];\r\n  const fmtDate = (strDate) => {\r\n    let parsed = Date.parse(strDate);\r\n    return new Date(parsed).toLocaleDateString(\"en-GB\");\r\n  };\r\n  const records = data\r\n    ? data.entries.map((r) => ({\r\n      ...r,\r\n      entity_name: r.entity.name,\r\n      createdAt: fmtDate(r.createdAt),\r\n      updatedAt: fmtDate(r.updatedAt),\r\n      amount: Numbers.fmt(r.amount),\r\n      entryType: r.entryType === 0 ? \"Revenue\" : \"Expense\"\r\n    }))\r\n    : [];\r\n\r\n\r\n  return (\r\n    <>\r\n      <Route path=\"/entries\" exact>\r\n        <div className=\"toolbar\">\r\n          <h5>List of entries</h5>\r\n          <NavLink className=\"d-flex btn has-left-icon\" to=\"/entries/new-entry\">\r\n            <MatIcon name=\"add\" text=\"New Entry\" />\r\n          </NavLink>\r\n        </div>\r\n        <hr />\r\n        <div className=\"toolbar\">\r\n          {data && (\r\n            <FilterForm\r\n              handleSubmit={handleSubmit}\r\n              filter={filter}\r\n              handleExport={handleExport}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <div className=\"d-flex-main\">\r\n            <Table columns={columns} data={records} />\r\n            {data && (\r\n              <Pagination\r\n                pageNo={pageNo}\r\n                onPageChanged={handlePageChange}\r\n                lastPage={data.entries.length < PAGE_SIZE}\r\n              />\r\n            )}\r\n          </div>\r\n          <EntrySummary filter={filter} />\r\n        </div>\r\n      </Route>\r\n      <Route path=\"/entries/new-entry\" exact>\r\n        <NewEntryPage filter={filter} />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EntriesPage;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { REGISTER_USER, USERS, USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport Input from \"../../components/forms/Input\";\r\n\r\nfunction NewUserPage() {\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerUser, { loading }] = useMutation(REGISTER_USER);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    registerUser({\r\n      variables: {\r\n        ...formData,\r\n      },\r\n      refetchQueries: [{ query: USERS }, { query: USERS_GET_ME }],\r\n    }).then(\r\n      () => setRedirect(\"/users\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/users\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Register New User</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form form-medium\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            required\r\n          />\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewUserPage;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect, withRouter } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport {\r\n  REGISTER_USER,\r\n  USERS,\r\n  USERS_GET_ME,\r\n  GET_USER,\r\n} from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport Input from \"../../components/forms/Input\";\r\n\r\nfunction UpdateUserPage({ match }) {\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerUser, {}] = useMutation(REGISTER_USER);\r\n  const { loading, error, data } = useQuery(GET_USER, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  let user = data.user;\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let prev = new Map();\r\n    Object.keys(user).forEach((key) => {\r\n      if (!formData[key]) {\r\n        prev[key] = user[key];\r\n      }\r\n    });\r\n\r\n    registerUser({\r\n      variables: { ...formData, ...prev, id: user.id },\r\n      refetchQueries: [{ query: USERS }, { query: USERS_GET_ME }],\r\n    }).then(\r\n      () => setRedirect(\"/users\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/users\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Update User</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form form-medium\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.username}\r\n            readOnly={true}\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            required\r\n            defaultValue={user.email}\r\n          />\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.firstName}\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.lastName}\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(UpdateUserPage);\r\n","import React from \"react\";\r\nimport { USERS } from \"../helpers/UsersGraphQL\";\r\nimport NewUserPage from \"./users/NewUserPage\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Route, NavLink, useHistory } from \"react-router-dom\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport Table from \"../components/tables/Table\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport UpdateUserPage from \"./users/UpdateUserPage\";\r\n\r\nfunction UserManagementPage(props) {\r\n  useProfile();\r\n  const { loading, error, data } = useQuery(USERS);\r\n  if (loading) return null;\r\n  if (error) {\r\n    return <p>Error (:</p>;\r\n  }\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"username\", label: \"Client Name\" },\r\n    { name: \"email\", label: \"Email\" },\r\n    { name: \"name\", label: \"Full Name\" },\r\n    {\r\n      name: \"actions\",\r\n      label: \"\",\r\n      render: (row) => (\r\n        <div>\r\n          <a href={`/users/update/${row.id}`} className=\"d-flex align-left\">\r\n            <MatIcon name=\"edit\" text=\"Edit\" />\r\n          </a>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const records = data.users.map((r) => ({\r\n    ...r,\r\n    name: r.firstName ? `${r.firstName} ${r.lastName}` : null,\r\n  }));\r\n  return (\r\n    <>\r\n      <Route path=\"/users\" exact>\r\n        <div className=\"toolbar\">\r\n          <h5>List of users</h5>\r\n          <NavLink\r\n            className=\"d-flex btn btn-light has-left-icon\"\r\n            to=\"/users/new-user\"\r\n          >\r\n            <MatIcon name=\"add\" text=\"New User\" />\r\n          </NavLink>\r\n        </div>\r\n        <Table columns={columns} data={records} />\r\n      </Route>\r\n      <Route path=\"/users/new-user\" exact>\r\n        <NewUserPage />\r\n      </Route>\r\n      <Route path=\"/users/update/:id\" exact>\r\n        <UpdateUserPage />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserManagementPage;\r\n","const ACCESS_TOKEN = \"AccessToken\";\r\n\r\nconst AuthHelper = {\r\n  saveToken: (token, cb) => {\r\n    sessionStorage.setItem(ACCESS_TOKEN, token);\r\n    cb(true);\r\n  },\r\n  getToken: () => sessionStorage.getItem(ACCESS_TOKEN),\r\n  removeToken: () => sessionStorage.removeItem(ACCESS_TOKEN),\r\n};\r\n\r\nexport default AuthHelper;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../components/forms/Input\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport AuthHelper from \"../helpers/AuthHelper\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_TOKEN } from \"../helpers/UsersGraphQL\";\r\nimport { APP_NAME } from \"../conf\";\r\n\r\nfunction LoginPage(props) {\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [login, { client }] = useMutation(USERS_GET_TOKEN);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    client.clearStore();\r\n    login({\r\n      variables: {\r\n        ...formData,\r\n      },\r\n    }).then(\r\n      (res) => {\r\n        if (res.data) {\r\n          let { token } = res.data.tokenAuth;\r\n          AuthHelper.saveToken(token, () => {\r\n            setRedirect(\"/\");\r\n          });\r\n        }\r\n      },\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n      <>\r\n        <div className=\"login-page box-shadow\">\r\n          <div className=\"login-header d-flex mb-1 p-1\">\r\n            <h3>{APP_NAME}</h3>\r\n            <img\r\n              src={\r\n                process.env.PUBLIC_URL + \"/static/images/complaints_register.png\"\r\n              }\r\n              alt=\"Image\"\r\n            />\r\n          </div>\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <div className=\"mt-1\">\r\n              <Input\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <Input\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-footer\">\r\n              <button>\r\n                <span className=\"mr-1\">Login</span>\r\n                <MatIcon name=\"login\" />\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport NavBar from \"./components/nav/NavBar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport EntriesPage from \"./pages/EntriesPage\";\r\nimport UserManagementPage from \"./pages/UserManagementPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport AuthHelper from \"./helpers/AuthHelper\";\r\nimport { BASE_URL } from \"./conf\";\r\nconst getToken = () => {\r\n  const token = AuthHelper.getToken();\r\n  return token ? `JWT ${token}` : \"\";\r\n};\r\nconst requestMiddleware = (operation) => {\r\n  operation.setContext({\r\n    headers: {\r\n      Authorization: getToken(),\r\n    },\r\n  });\r\n};\r\nconst client = new ApolloClient({\r\n  uri: `${BASE_URL}/graphql`,\r\n  request: requestMiddleware,\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <ApolloProvider client={client}>\r\n        <Switch>\r\n          <Route path=\"/login\" exact>\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <NavBar />\r\n            <section className=\"page-content container\">\r\n              <div className=\"content\">\r\n                <Switch>\r\n                  <Route path=\"/\" exact>\r\n                    <HomePage />\r\n                  </Route>\r\n                  <Route path=\"/entries\">\r\n                    <EntriesPage />\r\n                  </Route>\r\n                  <Route path=\"/users\">\r\n                    <UserManagementPage />\r\n                  </Route>\r\n                </Switch>\r\n              </div>\r\n            </section>\r\n          </Route>\r\n        </Switch>\r\n      </ApolloProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}